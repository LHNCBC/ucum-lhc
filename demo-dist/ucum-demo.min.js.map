{"version":3,"sources":["node_modules/browser-pack/_prelude.js","demo/demoConfig.js","demo/main.js","demo/ucumDemo.js","demo/ucumFileValidator.js","node_modules/@lhncbc/ucum-lhc/data/ucumDefs.min.json","node_modules/@lhncbc/ucum-lhc/source-cjs/config.js","node_modules/@lhncbc/ucum-lhc/source-cjs/dimension.js","node_modules/@lhncbc/ucum-lhc/source-cjs/jsonArrayPack.js","node_modules/@lhncbc/ucum-lhc/source-cjs/prefix.js","node_modules/@lhncbc/ucum-lhc/source-cjs/prefixTables.js","node_modules/@lhncbc/ucum-lhc/source-cjs/ucumFunctions.js","node_modules/@lhncbc/ucum-lhc/source-cjs/ucumInternalUtils.js","node_modules/@lhncbc/ucum-lhc/source-cjs/ucumJsonDefs.js","node_modules/@lhncbc/ucum-lhc/source-cjs/ucumLhcUtils.js","node_modules/@lhncbc/ucum-lhc/source-cjs/ucumPkg.js","node_modules/@lhncbc/ucum-lhc/source-cjs/unit.js","node_modules/@lhncbc/ucum-lhc/source-cjs/unitString.js","node_modules/@lhncbc/ucum-lhc/source-cjs/unitTables.js","node_modules/abstract-leveldown/abstract-chained-batch.js","node_modules/abstract-leveldown/abstract-iterator.js","node_modules/abstract-leveldown/abstract-leveldown.js","node_modules/abstract-leveldown/index.js","node_modules/assert/assert.js","node_modules/assert/node_modules/inherits/inherits_browser.js","node_modules/assert/node_modules/util/support/isBufferBrowser.js","node_modules/assert/node_modules/util/util.js","node_modules/base64-js/index.js","node_modules/browser-resolve/empty.js","node_modules/browserify-fs/index.js","node_modules/buffer-from/index.js","node_modules/buffer/index.js","node_modules/clone/clone.js","node_modules/concat-stream/index.js","node_modules/core-util-is/lib/util.js","node_modules/csv-parse/lib/ResizeableBuffer.js","node_modules/csv-parse/lib/index.js","node_modules/csv-stringify/lib/index.js","node_modules/deferred-leveldown/deferred-iterator.js","node_modules/deferred-leveldown/deferred-leveldown.js","node_modules/errno/custom.js","node_modules/errno/errno.js","node_modules/escape-html/index.js","node_modules/events/events.js","node_modules/foreach/index.js","node_modules/fwd-stream/index.js","node_modules/fwd-stream/node_modules/isarray/index.js","node_modules/fwd-stream/node_modules/readable-stream/duplex.js","node_modules/fwd-stream/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/fwd-stream/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/fwd-stream/node_modules/readable-stream/lib/_stream_readable.js","node_modules/fwd-stream/node_modules/readable-stream/lib/_stream_transform.js","node_modules/fwd-stream/node_modules/readable-stream/lib/_stream_writable.js","node_modules/fwd-stream/node_modules/readable-stream/readable.js","node_modules/fwd-stream/node_modules/readable-stream/writable.js","node_modules/fwd-stream/node_modules/string_decoder/index.js","node_modules/ieee754/index.js","node_modules/immediate/lib/index.js","node_modules/immediate/lib/messageChannel.js","node_modules/immediate/lib/mutation.js","node_modules/immediate/lib/nextTick.js","node_modules/immediate/lib/stateChange.js","node_modules/immediate/lib/timeout.js","node_modules/inherits/inherits_browser.js","node_modules/is-buffer/index.js","node_modules/is-finite/index.js","node_modules/is-integer/index.js","node_modules/is-typedarray/index.js","node_modules/is/index.js","node_modules/isarray/index.js","node_modules/level-blobs/index.js","node_modules/level-blobs/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/level-blobs/node_modules/readable-stream/lib/_stream_readable.js","node_modules/level-blobs/node_modules/readable-stream/lib/_stream_transform.js","node_modules/level-blobs/node_modules/readable-stream/lib/_stream_writable.js","node_modules/level-blobs/node_modules/readable-stream/readable.js","node_modules/level-errors/errors.js","node_modules/level-filesystem/errno.js","node_modules/level-filesystem/index.js","node_modules/level-filesystem/node_modules/xtend/has-keys.js","node_modules/level-filesystem/node_modules/xtend/index.js","node_modules/level-filesystem/paths.js","node_modules/level-filesystem/stat.js","node_modules/level-filesystem/watchers.js","node_modules/level-fix-range/index.js","node_modules/level-hooks/index.js","node_modules/level-iterator-stream/index.js","node_modules/level-js/index.js","node_modules/level-js/iterator.js","node_modules/level-js/util/immediate-browser.js","node_modules/level-js/util/mixed-to-buffer.js","node_modules/level-js/util/support.js","node_modules/level-peek/index.js","node_modules/level-sublevel/batch.js","node_modules/level-sublevel/index.js","node_modules/level-sublevel/node_modules/level-fix-range/index.js","node_modules/level-sublevel/node_modules/object-keys/index.js","node_modules/level-sublevel/node_modules/object-keys/shim.js","node_modules/level-sublevel/node_modules/xtend/index.js","node_modules/level-sublevel/sub.js","node_modules/levelup/lib/batch.js","node_modules/levelup/lib/common.js","node_modules/levelup/lib/levelup.js","node_modules/levelup/lib/promisify.js","node_modules/lodash.get/index.js","node_modules/ltgt/index.js","node_modules/number-is-nan/index.js","node_modules/object-assign/index.js","node_modules/octal/index.js","node_modules/once/once.js","node_modules/path-browserify/index.js","node_modules/process-nextick-args/index.js","node_modules/process/browser.js","node_modules/prr/prr.js","node_modules/readable-stream/duplex-browser.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/readable-stream/lib/internal/streams/BufferList.js","node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/readable-stream/passthrough.js","node_modules/readable-stream/readable-browser.js","node_modules/readable-stream/transform.js","node_modules/readable-stream/writable-browser.js","node_modules/safe-buffer/index.js","node_modules/stream-browserify/index.js","node_modules/stream-transform/lib/index.js","node_modules/string-range/index.js","node_modules/string-to-stream/index.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/typedarray-to-buffer/index.js","node_modules/typedarray/index.js","node_modules/util-deprecate/browser.js","node_modules/util/util.js","node_modules/wrappy/wrappy.js","node_modules/xtend/immutable.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","demoPkg","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","UcumDemoConfig","defCategories_","categories_","categoryValues_","Clinical Use","Nonclinical Use","Constants","Obsolete","defDisplayFlds_","displayFlds_","baseSearchURL_","defCols_","baseSearchOpts_","nonMatchSuggestions","tableFormat","valueCols","tokens","decDigits_","maxDecDigits_","defaultPrecision_","UcumDemo","UcumFileValidator","getInstance","escapeHtml","ucumPkg","Ucum","UcumLhcUtils","UnitTables","_classCallCheck","utils_","utabs_","urlValCats_","urlValDispFlds_","urlOpts","buildUrlAndOpts","valAuto_","Def","Autocompleter","Search","Event","observeListSelections","demoInstance","reportUnitStringValidity","urlConvCats_","urlConvDispFlds_","fromAuto_","toAuto_","convFrom_","convFromNum_","convTo_","convToNum_","firstConvEntry_","lastResultFld_","lastResult_","blockLocationChangeHandler","holdThis","prototype","tab","urlString","opts","catsArray","dispArray","catLen","qString","dispLen","colHdrs","dString","join","buildTabSettings","document","getElementById","value","valFld","innerHTML","setAttribute","location","hash","click","divName","boxSuffix","settingsDiv","limitPara","createElement","limitLine","createTextNode","appendChild","buildCheckBoxes","dispPara","className","lineBreak","dispLine","namesArray","defBox","namesLen","theVal","theBox","checked","id","addEventListener","updateSetting","theSpan","theText","convertTab","validateTab","fromField","classList","remove","fromNumField","toField","toNumField","_sizeNameDivs","style","visibility","codeField","msgField","ckBoxId","tabSuffix","ckBox","clsName","boxVal","boxChecked","idx","indexOf","push","splice","_idx","tabName","clearCachedResults","destroy","elementID","msgElementID","useHTMLInMessages","useBraceMsgForEachString","valConv","retMsg","valMsg","parseResp","suggsField","display","clrFld","_clrFld","resFld","lastDispMsg","valMsgFld","height","uStr","setConvertValues","escVal","theStatus","validateUnitString","theUnit","add","concat","name","_multipleReplace","unshift","_suggSetOutput","console","log","err","message","pMsgLen","m","includes","valid","clear","undefined","sourceField","resultSide","toNumFld","convertUnit","numField","checkFld","checkVal","resultString","parsedNum","isNaN","parseFloat","msgFieldName","prec","precDigits","parseInt","_templateObject","numVal","NaN","toFixed","resultMsg","decDigits","fromName","escFromName","fromVal","toName","escToName","weightField","moleWeightVal","resultObj","convertUnitTo","toVal","precVal","toPrecision","needMoleWeightMsg_","_requestMolecularWeight","suggsSetString","resultField","setList","hypIdx","codeSep_","substr","commensurablesList","commUnits","commText","cLen","commNames","getProperty","sort","compareCodes","buttonID","blockText","noneText","theElement","theButton","innerText","replace","colName","dia","validateFile","files","initiateDownload","fileValidationError","bUrl","windowFocus","removeEventListener","URL","revokeObjectURL","an","parentElement","removeChild","href","download","body","src","aMsg","alert","suggSet","suggString","s","targetString","toReplace","replaceWith","RegExp","left","leftHeight","offsetHeight","right","rightHeight","stream","parse","transform","stringify","str","inputFile","sourceCol","fileSaveFunction","msgHandler","pipeFunc","reader","readyState","FileReader","DONE","clearInterval","intSet","result","on","pipe","parser","transformer","stringifier","outStream","readAsText","utils","columns","record","emit","_parseResp","header","Writable","objectMode","data","bracesMsg_","_write","encoding","done","blob","Blob","type","createObjectURL","setInterval","license","prefixes","config","units","Object","defineProperty","dimLen_","validOps_","valMsgStart_","valMsgEnd_","cnvMsgStart_","cnvMsgEnd_","openEmph_","closeEmph_","openEmphHTML_","closeEmphHTML_","csvCols_","case-sensitive code","LOINC property","name (display)","synonyms","source","category","Guidance","inputKey_","specUnits_","B[10.nV]","[m/s2/Hz^(1/2)]","Dimension","UC","isInteger","dimSetting","assignZero","Array","JSON","dimVec_","d","indexPos","Number","ret","propertyName","endsWith","dim2","_typeof","isEqual","dimVec2","allZero","that","assignDim","isObject","toString","createConfig","refObj","keys","reduce","key","pushFn","apply","map","keyTail","_toConsumableArray","prepareConfig","isArray","packItem","item","keyArr","place","forEach","unpackItem","_i","packArray","arr","_config","bind","unpackArray","obj","Prefix","attrs","code_","ciCode_","name_","printSymbol_","value_","exp_","prefix2","PrefixTables","PrefixTablesFactory","byCode_","byValue_","prefixBuff","pList","pLen","pfx","getPrefixByValue","prefixList","getPrefixByCode","prefixObj","getCode","getValue","prefixTablesInstance","default","UcumFunctions","funcs","cnvTo","x","cnvFrom","Math","LN10","pow","exp","LN2","tan","atan","sqrt","func","fname","toLowerCase","_default","isNumericString","theString","num","isIntegerUnit","test","getSynonyms","theSyn","retObj","utab","resp","getUnitBySynonym","aLen","csCode_","guidance","guidance_","ucumJsonDefs","UcumJsonDefs","Pfx","PfxT","Un","Utab","jsonDefs","unitsCount","pTab","plen","newPref","uTab","ulen","newUnit","Unit","addUnit","_getRequireWildcardCache","WeakMap","cache","_ucumJsonDefs","intUtils_","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","set","UnitString","fs","loadJsonDefs","uStrParser_","use","suggest","getSpecifiedUnit","status","ucumCode","unit","fromUnitCode","toUnitCode","molecularWeight","returnObj","msg","trim","fromUnit","toUnit","moleExp_","isMoleMassCommensurable","convertMolToMass","convertMassToMol","convertFrom","uName","getUnitByCode","parseString","dimVec","fromDim","getUnitsByDimension","uList","printUnits","writeFileSync","mode","flag","_ucumFunctions","arguments","isBase_","property_","magnitude_","dim_","class_","isMetric_","variable_","cnv_","cnvPfx_","isSpecial_","isArbitrary_","synonyms_","source_","loincProperty_","category_","csUnitString_","ciUnitString_","baseFactorStr_","baseFactor_","defError_","vals","uKey","charAt","_this","retUnit","getOwnPropertyNames","val","clone","unit2","_this2","equals","thisAttr","u2Attr","keyLen","match","k","newNum","isNull","fromCnv","fromMag","forName","f_from","convertCoherent","max","getMax","elem","getElementAt","tabs","_getUnitTables","uA","amt","molUnit","molAmt","avoNum","massUnit","mutateCoherent","mulVal","_concatStrs","isZero","invertString","sub","minus","stringRep","str1","operator","str2","startChar","endChar","_buildOneString","uArray","arLen","un","nun","uLen","uChar","mul","getMassDimensionIndex","commensurable","testDim","curVal","setElementAt","_testDim","_curVal","pfxTabs_","parensFlag_","pFlagLen_","braceFlag_","bFlagLen_","vcMsgStart_","vcMsgEnd_","retMsg_","parensUnits_","annotations_","suggestions","suggestions_","origString","_getAnnotations","sUnit","_parseTheString","finalUnit","endProcessing","parensResp","_processParens","mkUArray","_makeUnitsArray","u1","curCode","parenUnit","_getParensUnit","uRet","_makeUnit","_performUnitArithmetic","uString","openBrace","_closeBrace","braceStr","substring","aIdx","closeBrace","uStrArray","uStrAryPos","stopProcessing","pu","trimmedCt","openCt","closeCt","openPos","closePos","theMsg","_closePos","uArray1","startNumCheck","numRes","dispVal","parensback","op","theOp","numRes2","invalidString","_parensback","parensString","nextParens","parensStr","pStr","psIdx","befText","peIdx","lastIndexOf","aftText","pNumText","nMag","assignVals","annoRet","_getAnnoText","suggestStat","_getSuggestions","_annoRet","power","_suggestStat","asIdx","startText","aeIdx","endText","idxNum","synLen","unitArray","uCode","getAnnoRet","_getUnitWithAnnotation","tryCode","addBrackets","retUnitAry","getUnitByName","mString","dupMsg","rStr","res","origCode","origUnit","pfxCode","pfxObj","pfxVal","pfxExp","codeAndExp","_isCodeWithExponent","getExp","pCodeLen","theDim","theMag","theName","theCiCode","thePrintSymbol","expMul","theCode","getName","getCiCode","getPrintSymbol","expStr","annoText","befAnnoText","aftAnnoText","msgLen","_mkUnitRet","_mkUnitRet2","tryBrackets","mkUnitRet","pop","u2","nextUnit","msgString","thisOp","divide","multiplyThese","UnitTablesFactory","unitNames_","unitCodes_","codeOrder_","unitStrings_","unitDimensions_","unitSynonyms_","massDimIndex_","addUnitName","addUnitCode","addUnitString","addUnitDimension","caseSensitive_","uEntry","mag","uDim","uSyns","synsAry","split","addSynonymCodes","theSynonyms","words","wLen","w","word","sepPos","retUnits","retAry","unitsArray","uSyn","buildUnitSynonyms","foundCodes","fLen","nameList","codes","b","unitsList","cols","sep","unitBuff","getAllUnitNames","nameRecs","rec","cbuf","doLong","codeList","unitString","curUnit","curDim","sList","sKeys","sLen","sKey","kLen","unitTablesInstance","AbstractChainedBatch","db","_db","_operations","_written","_serializeKey","_serializeValue","_checkWritten","put","_checkKey","_put","del","_del","_clear","write","options","callback","_batch","process","nextTick","AbstractIterator","_ended","_nexting","next","_next","end","_end","AbstractLevelDOWN","cleanRangeOptions","isRangeOption","isEmptyRangeOption","rangeOptions","v","isEmptyBuffer","Buffer","isBuffer","xtend","open","oldStatus","createIfMissing","errorIfExists","_open","close","_close","asBuffer","_get","batch","array","_chainedBatch","serialized","_setupIteratorOptions","reverse","values","limit","keyAsBuffer","valueAsBuffer","iterator","_iterator","String","browser","compare","y","len","min","_isBuffer","pToString","isView","arrbuf","ArrayBuffer","DataView","buffer","util","isFunction","functionsHaveNames","regex","truncate","slice","inspect","something","rawname","getMessage","actual","expected","fail","stackStartFunction","assert","AssertionError","ok","_deepEqual","strict","memos","isDate","getTime","isRegExp","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","Uint8Array","actualIndex","objEquiv","isArguments","object","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","bIsArgs","pSlice","ka","objectKeys","kb","notDeepStrictEqual","expectedException","isPrototypeOf","_tryBlock","block","error","_throws","shouldThrow","TypeError","userProvidedMessage","isUnwantedException","isError","isUnexpectedException","objectAssign","hasOwn","generatedMessage","captureStackTrace","stack","out","fn_name","next_line","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","create","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor","arg","copy","fill","readUInt8","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","styles","arrayToHash","recurseTimes","isString","primitive","formatPrimitive","visibleKeys","formatError","Date","base","braces","toUTCString","output","formatArray","formatProperty","reduceToSingleString","simple","isNumber","l","line","numLinesEst","prev","cur","ar","isNullOrUndefined","isSymbol","re","objectToString","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","format","objects","args","_","deprecate","fn","deprecated","warned","throwDeprecation","traceDeprecation","trace","noDeprecation","debugEnviron","debugs","debuglog","env","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","origin","getLens","b64","validLen","byteLength","lens","placeHoldersLen","_byteLength","toByteArray","tmp","Arr","curByte","revLookup","charCodeAt","tripletToBase64","lookup","encodeChunk","uint8","start","fromByteArray","extraBytes","parts","len2","leveljs","levelup","isArrayBuffer","input","fromArrayBuffer","byteOffset","maxLength","RangeError","isModern","from","fromString","isEncoding","bufferFrom","encodingOrOffset","alloc","allocUnsafe","createBuffer","K_MAX_LENGTH","buf","setPrototypeOf","fromArrayLike","isInstance","valueOf","fromObject","Symbol","toPrimitive","assertSize","size","numberIsNaN","SlowBuffer","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","base64clean","INVALID_BASE64_RE","Infinity","leadSurrogate","byteArray","hi","lo","dst","customInspectSymbol","for","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","species","poolSize","allocUnsafeSlow","list","pos","swap16","swap32","swap64","toLocaleString","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","newBuf","subarray","readUIntLE","readUIntBE","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","table","i16","parent","circular","_clone","child","getRegExpFlags","useBuffer","index","allParents","allChildren","flags","clonePrototype","ConcatStream","cb","shouldInferEncoding","getBody","isArrayish","isBufferish","stringConcat","strings","bufferConcat","bufs","arrayConcat","u8Concat","u8","U8","part","chunk","enc","inferEncoding","buff","firstBuffer","ResizeableBuffer","resize","Transform","bom_utf8","Parser","_possibleConstructorReturn","_getPrototypeOf","_objectSpread","readableObjectMode","opt","underscore","bom","fnCastField","cast","cast_date","fnFirstLineToHeaders","normalizeColumnsArray","comment","delimiter","escape","from_line","info","max_record_size","objname","quote","raw","record_delimiter","rd","relax","relax_column_count","skip_empty_lines","skip_lines_with_empty_values","skip_lines_with_error","rtrim","ltrim","to","to_line","comment_lines","empty_lines","invalid_field_length","lines","records","state","bomSkipped","castField","commenting","enabled","escaping","escapeIsQuote","expectedRecordLength","field","firstLineToHeaders","assign","previousBuf","quoting","stop","rawBuffer","recordHasError","record_length","recordDelimiterMaxLength","trimChars","wasQuoting","wasRowDelimiter","__parse","nextBuf","_this$options","_this$state","bufLen","__needMoreData","__autoDiscoverRowDelimiter","chr","append","nextChr","isNextChrTrimable","__isCharTrimable","isNextChrComment","__compareBytes","isNextChrDelimiter","__isDelimiter","isNextChrRowDelimiter","__isRecordDelimiter","__error","prepend","_err","recordDelimiterLength","__resetField","__resetRow","errField","__onField","errRecord","__onRow","delimiterLength","_errField","_err2","lappend","rappend","_err3","_err4","_errField2","_errRecord","_this$options2","_this$state2","__firstLineToColumns","recordLength","_err5","disabled","headers","normalizedHeaders","reset","_this$options3","_this$state3","trimRight","_this$__cast","__cast","_this$__cast2","_slicedToArray","isColumns","context","column","__isFloat","sourceBuf","targetBuf","firtByte","sourceLength","_this$options4","_this$state4","delLength","loop1","rdLength","argument","normalizedColumns","Stringifier","chunks","results","base1","base10","base11","base12","base13","base2","base3","base4","base5","base6","base7","base8","base9","quoted","quotedEmpty","quotedString","eof","formatters","bool","rowDelimiter","countWriten","label","labels","preserve","_transform","_line","containsEscape","containsLinebreak","containsQuote","containsdelimiter","newLine","ref","ref1","shouldQuote","DeferredIterator","_options","setDb","it","method","_operation","DeferredLevelDOWN","_iterators","closed","deferrables","approximateSize","init","cause","prr","CustomError","createError","errno","path","description","ce","FilesystemError","all","custom","matchHtmlRegExp","exec","html","EventEmitter","_events","objectCreate","_eventsCount","_maxListeners","$getMaxListeners","defaultMaxListeners","emitNone","handler","isFn","listeners","arrayClone","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","_addListener","listener","events","existing","newListener","emitter","count","warn","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","listenerCount","spliceOne","objectCreatePolyfill","F","objectKeysPolyfill","functionBindPolyfill","Function","hasDefineProperty","setMaxListeners","getMaxListeners","er","doError","addListener","prependListener","once","prependOnceListener","position","originalListener","shift","removeAllListeners","rawListeners","eventNames","Reflect","ownKeys","Readable","Duplex","DUMMY","noop","toFunction","onreadable","rs","reading","destroyed","_read","fwd","onwritable","ws","ready","readable","duplex","initWritable","initReadable","dupl","allowHalfOpen","onend","_writableState","ended","xs","PassThrough","ReadableState","hwm","highWaterMark","pipes","pipesCount","flowing","endEmitted","calledRead","sync","needReadable","emittedReadable","readableListening","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","_readableState","Stream","readableAddChunk","addToFront","chunkInvalid","onEofChunk","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","endReadable","emitReadable_","maybeReadMore_","pipeOnDrain","flow","dest","EE","emitDataEvents","pipeOnReadable","startPaused","paused","pause","resume","fromList","stringMode","cpy","setEncoding","nOrig","doRead","pipeOpts","onunpipe","cleanup","onclose","onfinish","ondrain","onerror","needDrain","unpipe","doEnd","stdout","stderr","endFn","dests","ev","wrap","_fromList","TransformState","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","_flush","writeencoding","WriteReq","WritableState","ending","finished","noDecode","decodeStrings","writing","bufferProcessing","onwrite","writelen","errorEmitted","writeAfterEnd","validChunk","decodeChunk","writeOrBuffer","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","entry","need","endWritable","READABLE_STREAM","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","cr","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","abs","floor","cleanUpNextTick","draining","currentQueue","queue","queueIndex","scheduled","timeout","setTimeout","run","clearTimeout","Item","fun","immediate","task","scheduleDrain","types","install","setImmediate","MessageChannel","channel","port1","onmessage","port2","postMessage","Mutation","MutationObserver","WebKitMutationObserver","handle","called","observer","element","observe","characterData","scriptEl","onreadystatechange","parentNode","documentElement","isSlowBuffer","numberIsNan","isTypedArray","isStrictTypedArray","isLooseTypedArray","Int8Array","Int16Array","Int32Array","Uint8ClampedArray","Uint16Array","Uint32Array","names","loose","[object Int8Array]","[object Int16Array]","[object Int32Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Uint16Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objProto","owns","isActualNaN","NON_HOST_TYPES","is","defined","empty","other","hosted","host","instance","isStandardArguments","isOldArguments","arraylike","callee","HTMLElement","nodeType","infinite","decimal","divisibleBy","isDividendInfinite","isDivisorInfinite","isNonZeroNumber","int","maximum","others","minimum","nan","even","odd","ge","gt","le","lt","within","finish","peek","EMPTY","ENCODER","encode","decode","expand","blobs","blockSize","maxBatch","blank","reservations","mutateBlock","release","locks","onreservation","valueEncoding","notFound","WriteStream","blocks","bytesWritten","_shouldInitAppend","_destroyed","_init","blockIndex","blockOffset","blockLength","_truncate","dels","createKeyStream","_writeBlock","force","_initAppend","overflow","free","ReadStream","_missing","_paused","_reader","createReadStream","onblock","_pause","last","latest","createWriteStream","defaultHwm","debug","resumeScheduled","resume_","ondata","writableObjectMode","corked","pendingcb","prefinished","writev","_writev","cbs","prefinish","cork","uncork","LevelUPError","NotFoundError","InitializationError","OpenError","ReadError","WriteError","EncodingError","sublevel","octal","paths","watchers","bl","ps","links","fds","now","inc","mkdir","follow","stat","EEXIST","rmdir","readdir","ENOTEMPTY","isDirectory","ENOTDIR","ENOENT","isFile","lstat","exists","chmod","update","lchmod","chown","uid","gid","lchown","utimes","atime","mtime","upd","rename","statFrom","statTo","EISDIR","realpath","writeFile","ctime","appendFile","unlink","clean","onlink","link","readFile","change","watchFile","watch","normalize","unwatchFile","unwatch","watcher","notify","fl","plus","writePos","onready","fd","ontruncate","EBADF","off","readPos","fsync","ftruncate","fchown","fchmod","futimes","fstat","symlink","readlink","EINVAL","st","hasKeys","extend","ROOT","prefix","doc","EPERM","dirname","file","resolve","root","loop","toDate","Stat","isBlockDevice","isCharacterDevice","isSymbolicLink","isFIFO","isSocket","onchange","range","ranges","getPrefix","getKeyEncoding","_getKeyEncoding","getValueEncoding","_getValueEncoding","remover","each","posthooks","h","hook","callHooks","isBatch","prehooks","ch","safe","ke","keyEncoding","ve","veto","filter","hooks","post","checker","pre","ary","_destroy","err2","Level","DEFAULT_PREFIX","version","Iterator","mixedToBuffer","support","binaryKeys","indexedDB","arrayKeys","req","onsuccess","onupgradeneeded","objectStoreNames","contains","createObjectStore","store","transaction","objectStore","await","request","onabort","oncomplete","delete","operations","abort","deleteDatabase","_limit","_count","_callback","_cache","_completed","_aborted","_error","_transaction","_keyAsBuffer","_valueAsBuffer","keyRange","createKeyRange","createIterator","ltgt","lower","lowerBound","upper","upperBound","lowerOpen","lowerBoundExclusive","upperOpen","upperBoundExclusive","IDBKeyRange","bound","openCursor","cursor","onItem","onAbort","onComplete","maybeNext","toBuffer","impl","cmp","onEvent","event","first","fixRange","_start","_key","addOperation","operation","Batch","sdb","_sdb","B","SubDb","Hooks","DB","safeRange","sublevels","methods","readStream","keyStream","valuesStream","createValueStream","changes","keysShim","hasDontEnumBug","propertyIsEnumerable","dontEnums","theKeys","dontEnum","Keys","SubDB","_parent","_prefix","_root","selectivelyMerge","_opts","SDB","_getOptsAndCb","valueStream","writeStream","nocheck","_p","_levelup","ops","promisify","getCallback","getOptions","promise","LevelUP","maybeError","_isOpening","isOpen","IteratorStream","errors","isClosed","Promise","reject","isHostObject","Hash","entries","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","eq","baseGet","isKey","castPath","toKey","baseIsNative","isMasked","reIsNative","reIsHostCtor","toSource","baseToString","symbolToString","INFINITY","stringToPath","isKeyable","getNative","reIsPlainProp","reIsDeepProp","maskSrcKey","funcToString","memoize","resolver","FUNC_ERROR_TEXT","memoized","Cache","tag","funcTag","genTag","isObjectLike","symbolTag","defaultValue","reLeadingDot","rePropName","reRegExpChar","reEscapeChar","freeGlobal","freeSelf","arrayProto","funcProto","objectProto","coreJsData","IE_PROTO","_Symbol","symbolProto","isDef","hasKey","lowerBoundKey","def","lowerBoundInclusive","upperBoundInclusive","upperBoundKey","startInclusive","endInclusive","toLtgt","_range","defaults","lb","ub","gte","lte","toObject","getOwnPropertySymbols","propIsEnumerable","test1","test2","test3","letter","symbols","onceStrict","onceError","wrappy","normalizeArray","allowAboveRoot","up","basename","matchedSlash","resolvedPath","resolvedAbsolute","cwd","isAbsolute","trailingSlash","relative","fromParts","toParts","samePartsLength","outputParts","hasRoot","extname","startDot","startPart","preDotState","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","drainQueue","title","argv","versions","binding","chdir","umask","definition","setProperty","makeOptions","oo","os","pna","onEndNT","_uint8ArrayToBuffer","_isUint8Array","OurUint8Array","isDuplex","readableHwm","readableHighWaterMark","BufferList","skipChunkCheck","addChunk","computeNewHighWaterMark","head","EElistenerCount","nReadingNextTick","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","nb","tail","endReadableNT","debugUtil","destroyImpl","kProxyEvents","_undestroy","undestroy","isPaused","unpipeInfo","hasUnpiped","cleanedUp","increasedAwaitDrain","flush","CorkedRequest","onCorkedFinish","nop","writableHwm","writableHighWaterMark","finalCalled","bufferedRequest","lastBufferedRequest","bufferedRequestCount","corkedRequestsFree","realHasInstance","final","_final","isBuf","newChunk","asyncWrite","holder","allBuffers","callFinal","corkReq","internalUtil","getBuffer","current","hasInstance","setDefaultEncoding","Constructor","copyBuffer","readableDestroyed","writableDestroyed","emitErrorNT","copyProps","SafeBuffer","didOnEnd","_isStdio","Transformer","len1","row","consume","options1","transform1","parallel","running","started","params","_done","_ending","term","inner","satisfies","StringStream","_str","_normalizeEncoding","retried","normalizeEncoding","nenc","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","utf8CheckExtraBytes","utf8Text","total","utf8End","Timeout","clearFn","_id","_clearFn","immediateIds","nextImmediateId","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","configureProperties","getOwnPropNames","defineProp","props","makeArrayAccessors","MAX_ARRAY_LENGTH","_getter","_setter","as_signed","bits","as_unsigned","packI8","unpackI8","packU8","unpackU8","packU8Clamped","round","packI16","unpackI16","packU16","unpackU16","packI32","unpackI32","packU32","unpackU32","packIEEE754","ebits","fbits","roundToEven","bias","unpackIEEE754","unpackF64","packF64","unpackF32","packF32","ECMAScript","ophop","Class","HasProperty","HasOwnProperty","IsCallable","ToInt32","ToUint32","__defineGetter__","__defineSetter__","makeConstructor","bytesPerElement","pack","unpack","_ctor","sequence","BYTES_PER_ELEMENT","ArrayBufferView","_pack","_unpack","SyntaxError","_bytes","clamp","makeGetter","arrayType","uint8Array","Boolean","IS_BIG_ENDIAN","makeSetter","byteView","typeArray","u16array","getUint8","getInt8","getUint16","getInt16","getUint32","getInt32","getFloat32","getFloat64","setUint8","setInt8","setUint16","setInt16","setUint32","setInt32","setFloat32","setFloat64","localStorage","wrapper"],"mappings":"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AkBI,gDCtDxB,IAAIE,GAAMn6C,EAAOD,QAAQo6C,MAErBL,OAAQ,EACR14C,KAAM,SACN44C,YAAa,8BAGbF,OAAQ,EACR14C,KAAM,UACN44C,YAAa,kBAGbF,MAAO,EACP14C,KAAM,KACN44C,YAAa,YAGbF,MAAO,EACP14C,KAAM,MACN44C,YAAa,gBAGbF,MAAO,EACP14C,KAAM,YACN44C,YAAa,sBAGbF,MAAO,EACP14C,KAAM,SACN44C,YAAa,sBAGbF,MAAO,EACP14C,KAAM,SACN44C,YAAa,qCAGbF,MAAO,EACP14C,KAAM,aACN44C,YAAa,2BAGbF,MAAO,EACP14C,KAAM,gBACN44C,YAAa,0BAGbF,MAAO,EACP14C,KAAM,eACN44C,YAAa,iCAGbF,MAAO,EACP14C,KAAM,WACN44C,YAAa,mCAGbF,MAAO,EACP14C,KAAM,QACN44C,YAAa,wBAGbF,MAAO,GACP14C,KAAM,QACN44C,YAAa,4BAGbF,MAAO,GACP14C,KAAM,eACN44C,YAAa,qCAGbF,MAAO,GACP14C,KAAM,eACN44C,YAAa,uBAGbF,MAAO,GACP14C,KAAM,aACN44C,YAAa,6BAGbF,MAAO,GACP14C,KAAM,eACN44C,YAAa,iCAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,wCAGbF,MAAO,GACP14C,KAAM,eACN44C,YAAa,wBAGbF,MAAO,GACP14C,KAAM,QACN44C,YAAa,4BAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,qBAGbF,MAAO,GACP14C,KAAM,UACN44C,YAAa,gCAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,wBAGbF,MAAO,GACP14C,KAAM,WACN44C,YAAa,qBAGbF,MAAO,GACP14C,KAAM,WACN44C,YAAa,oBAGbF,MAAO,GACP14C,KAAM,cACN44C,YAAa,2BAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,wBAGbF,MAAO,GACP14C,KAAM,UACN44C,YAAa,8BAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,sBAGbF,MAAO,GACP14C,KAAM,UACN44C,YAAa,oBAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,qCAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,kCAGbF,MAAO,GACP14C,KAAM,WACN44C,YAAa,4BAGbF,MAAO,GACP14C,KAAM,WACN44C,YAAa,mCAGbF,MAAO,GACP14C,KAAM,UACN44C,YAAa,sCAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,8BAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,6BAGbF,MAAO,GACP14C,KAAM,QACN44C,YAAa,gBAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,mBAGbF,MAAO,GACP14C,KAAM,kBACN44C,YAAa,2BAGbF,MAAO,GACP14C,KAAM,aACN44C,YAAa,mCAGbF,MAAO,GACP14C,KAAM,YACN44C,YAAa,yBAGbF,MAAO,GACP14C,KAAM,WACN44C,YAAa,8BAGbF,MAAO,GACP14C,KAAM,kBACN44C,YAAa,8CAGbF,MAAO,GACP14C,KAAM,aACN44C,YAAa,2CAGbF,MAAO,GACP14C,KAAM,cACN44C,YAAa,8BAGbF,MAAO,GACP14C,KAAM,YACN44C,YAAa,kDAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,wBAGbF,MAAO,GACP14C,KAAM,QACN44C,YAAa,oBAGbF,MAAO,GACP14C,KAAM,eACN44C,YAAa,kBAGbF,MAAO,GACP14C,KAAM,QACN44C,YAAa,4BAGbF,MAAO,GACP14C,KAAM,QACN44C,YAAa,wCAGbF,MAAO,GACP14C,KAAM,QACN44C,YAAa,oCAGbF,MAAO,GACP14C,KAAM,YACN44C,YAAa,wBAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,4BAGbF,MAAO,GACP14C,KAAM,MACN44C,YAAa,cAGbF,MAAO,GACP14C,KAAM,QACN44C,YAAa,0BAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,mBAGbF,MAAO,GACP14C,KAAM,SACN44C,YAAa,iBAGbF,MAAO,GACP14C,KAAM,YACN44C,YAAa,sBAIjBh6C,GAAOD,QAAQ+5C,SACf95C,EAAOD,QAAQqB,QAEf+4C,EAAI9hC,QAAQ,SAAUsgB,GACp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","file":"ucum-demo.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*\n * The license for the UCUM LHC code (demo and library code) is located at\n * https://github.com/lhncbc/ucum-lhc/blob/master/LICENSE.md\n *\n * This defines the UCUM demo-specific global variables and constants.\n * See the config.js file for UCUM global definitions that are not specific\n * to the demo.\n *\n * The javascript for this UCUM implementation uses syntax as\n * defined by the ECMAScript 6 standard\n */\n\nexport var UcumDemoConfig = {\n\n   /**\n   * Categories that can be used to limit units listed by the autocompleter\n   * in the Demo Unit Conversions page.   Separated into two arrays, with\n   * the default categories in defCategories_ .\n   */\n  defCategories_ : ['Clinical Use'],\n  categories_ : ['Nonclinical Use', 'Constants', 'Obsolete'],\n\n  /**\n   * Hash that matches category display names with the corresponding\n   * values used in the data\n   */\n  categoryValues_ : {'Clinical Use' : 'Clinical',\n    'Nonclinical Use' : 'Nonclinical',\n    'Constants' : 'Constant',\n    'Obsolete' : 'Obsolete'},\n\n  /**\n   * Fields that the user can select for display in the autocompleter list\n   * that displays units in the Demo Unit Conversions page.   Separated into\n   * two arrays, with the default categories in defDisplayFlds_ .\n   */\n  defDisplayFlds_ : ['cs_code', 'name', 'guidance'],\n  displayFlds_ : ['category', 'synonyms', 'loinc_property', 'source'],\n\n  /**\n   * Base URL for an autocompleter search query on the clinical tables search\n   * service for extended UCUM data\n   */\n  baseSearchURL_ : 'https://clin-table-search.lhc.nlm.nih.gov/api/ucum/v3/' +\n                   'search?q=is_simple:true',\n\n  /**\n   * Default column headers for an autocompleter search query when no display\n   * fields are specified.  If no display fields are specified, these are the\n   * columns that are displayed.  Once the user specifies columns to display,\n   * the column headers are built from those column names.\n   */\n  defCols_ : ['cs_code','name', 'guidance'],\n\n  /**\n   * Basic search opts used for all autocompleter search queries\n   */\n  baseSearchOpts_ : {'nonMatchSuggestions': false,\n                     'tableFormat': true,\n                     'valueCols': [0],\n                     'tokens': ['/', '.']},\n\n  /**\n   *  The default number of decimal digits to be displayed for a unit amount\n   */\n  decDigits_ : 2,\n\n  /**\n   *  The maximum number of decimal digits to be displayed for a unit amount.\n   */\n  maxDecDigits_ : 20,\n\n  /**\n   *  The default precision to be used\n   */\n  defaultPrecision_ : 15\n} ;\n\n\n","\n\n/**\n * This is the code entry point for the demo web page.  It coordinates the\n * loading of the prefix and unit objects from the json definitions file and\n * populating the autocompleter unit lists.\n */\n\n\nexport var UcumDemoConfig = require(\"./demoConfig.js\").UcumDemoConfig;\nexport var UcumDemo = require(\"./ucumDemo.js\").UcumDemo;\nexport var UcumFileValidator = require(\"./ucumFileValidator.js\").UcumFileValidator;\nvar demo = UcumDemo.getInstance();\n\n","\n/**\n * This is the code entry point for the demo web page.  It coordinates the\n * loading of the prefix and unit objects from the json definitions file and\n * populating the autocompleter unit lists.\n */\n\nvar fs = require('browserify-fs');\nvar escapeHtml = require('escape-html');\n\nvar ucumPkg = require('@lhncbc/ucum-lhc');\nvar Ucum = ucumPkg.Ucum;\nvar UcumDemoConfig = require('./demoConfig.js').UcumDemoConfig;\nvar UcumLhcUtils = ucumPkg.UcumLhcUtils;\nvar UnitTables = ucumPkg.UnitTables;\nvar UcumFileValidator = require('./ucumFileValidator.js').UcumFileValidator;\n\n\nexport class UcumDemo {\n\n  constructor () {\n\n    // run the constructors for the utils and unitTables classes to get\n    // things initialized and data loaded.\n    this.utils_ = UcumLhcUtils.getInstance();\n    this.utabs_ = UnitTables.getInstance();\n\n    // Set up the category and display column defaults for the validator\n    // tab and call buildUrlAndOpts to build them\n    this.urlValCats_ = UcumDemoConfig.defCategories_ ;\n    this.urlValDispFlds_ = UcumDemoConfig.defCols_ ;\n    urlOpts = this.buildUrlAndOpts('validate');\n\n    // Set up the search autocompleter for the unit expression field\n    // on the validator tab\n    this.valAuto_ = new Def.Autocompleter.Search('valString',\n      urlOpts[0], urlOpts[1]);\n    Def.Autocompleter.Event.observeListSelections('valString',\n      (function(demoInstance) {\n        return function () {\n          demoInstance.reportUnitStringValidity('valString',\n            'Validator', 'validationString');\n        }\n      })(this));\n\n    // Set up the default category and display column defaults for the\n    // converter tab and call buildUrlAndOpts to build them\n    this.urlConvCats_ = UcumDemoConfig.defCategories_ ;\n    this.urlConvDispFlds_ = UcumDemoConfig.defCols_ ;\n    let urlOpts = this.buildUrlAndOpts('convert');\n\n    // Set up the search autocompleters for the \"from\" and \"to\" unit code input\n    // fields on the Converter tab section\n    this.fromAuto_ = new Def.Autocompleter.Search('convertFrom',\n                     urlOpts[0], urlOpts[1]);\n    Def.Autocompleter.Event.observeListSelections('convertFrom',\n      (function(demoInstance) {\n        return function () {\n          demoInstance.reportUnitStringValidity('convertFrom',\n            'Converter', 'convMsg');\n        }\n      })(this));\n\n    this.toAuto_ = new Def.Autocompleter.Search('convertTo',\n                     urlOpts[0], urlOpts[1]);\n    Def.Autocompleter.Event.observeListSelections('convertTo',\n      (function(demoInstance) {\n        return function () {\n          demoInstance.reportUnitStringValidity('convertTo',\n            'Converter', 'convMsg');\n        }\n      })(this));\n\n    // Flags indicating validity of the \"from\" and \"to\" unit code and number\n    // fields on the conversion tab.\n    this.convFrom_ = false ;\n    this.convFromNum_ = true ;\n    this.convTo_ = false ;\n    this.convToNum_ = true ;\n\n    // Flag used to track a first entry on the converter tab.   This is needed\n    // to know when to blank out the \"to\" number field if the user first enters\n    // a unit code when the converter tab is displayed.   After that point\n    // blanking out a numeric field as appropriate is taken care of.\n    this.firstConvEntry_ = true ;\n\n    // Remember which numeric value was last reported as the conversion result\n    // and what field it was reported in\n    this.lastResultFld_ = null ;\n    this.lastResult_ = 0;\n\n    // Flag used to block execution of the location change event handler when\n    // location is changed in the url as the result of the user clicking on\n    // one of the tabs (validator or converter tabs) by the checkTabsSwitch\n    // function.\n    this.blockLocationChangeHandler = false ;\n\n    // Set up the prefetch autocompleter for the \"to\" conversion field.  It will\n    // be populated with commensurable units in based on what the user enters\n    // in the \"from\" field.  Changed to search autocompleter per Clem\n    // this.toAuto_ = new Def.Autocompleter.Prefetch('convertTo', []);\n\n    // Because this code is loaded with the page, there is no danger in\n    // this being a singleton.\n    let holdThis = UcumDemo.prototype;\n    UcumDemo = function () {\n      throw (new Error('UcumDemo is a Singleton.  ' +\n                       'Use UcumDemo.getInstance() instead.'));\n    };\n    if (exports)\n      exports.UcumDemo = UcumDemo;\n    UcumDemo.prototype = holdThis;\n\n    let self = this ;\n    UcumDemo.getInstance = function(){return self} ;\n  }\n\n  /**\n   * This method builds the URL and options array used by the search autocompleter\n   * used for the \"convert from\" field on the converter tab and the\n   * \"unit expression to be validated\" field on the validator tab.\n   *\n   * This uses the urlCategories_ and urlDisplayFlds_ arrays built in the\n   * constructor to get the list of categories to be included and fields\n   * to be displayed in the autocompleter list.\n   *\n   * This is called from the constructor, to build the initial url, and then\n   * each time the user clicks on one of the checkboxes assigned to the\n   * categories and display fields listed in the advanced settings of the\n   * converter and validator tabs.\n   *\n   * This adds a minChars: 1 option to the end of options hash, to allow\n   * searching to start as soon as the operator enters 1 character.\n   *\n   * @param tab the tab that the autocompleter is on - either 'convert' or\n   *  'validate'\n   * @return an array containing the new url [0] and a new options hash [1]\n   */\n  buildUrlAndOpts(tab){\n    let urlString = UcumDemoConfig.baseSearchURL_;\n    let opts = UcumDemoConfig.baseSearchOpts_ ;\n    let catsArray = (tab === 'convert' ? this.urlConvCats_ : this.urlValCats_);\n    let dispArray = (tab === 'convert' ? this.urlConvDispFlds_ : this.urlValDispFlds_);\n    let catLen = catsArray.length;\n    if (catLen > 0) {\n      let qString = '';\n      for (let c = 0; c < catLen; c++) {\n        if (c > 0)\n          qString += ' OR ';\n        qString += UcumDemoConfig.categoryValues_[catsArray[c]] ;\n      }\n      if (catLen > 1)\n        qString = '(' + qString + ')';\n      urlString += ' AND category:' + qString ;\n    }\n    let dispLen = dispArray.length ;\n    let colHdrs = UcumDemoConfig.defCols_;\n    if (dispLen > 0){\n      colHdrs = dispArray ;\n      let dString = 'df=' + dispArray.join(',') ;\n      if (catLen > 0)\n        dString = '&' + dString;\n      else\n        dString = '?' + dString ;\n      urlString += dString ;\n    }\n    opts['colHeaders'] = colHdrs ;\n    opts['minChars'] = 1;\n    return [urlString, opts];\n\n  } // end buildUrlAndOpts\n\n\n  /* This method controls the building of the \"Advanced Settings\" section that\n   * appears on each tab of the demo page.  It is called when the page is\n   * loaded.   The settings consist of configuration data from the config.js\n   * file, so must be built whenever the page is built.\n   *\n   * This is called on the body onload event from the page html.\n   */\n  buildAdvancedSettings() {\n    this.buildTabSettings('advancedSearchVal', 'val') ;\n    this.buildTabSettings('advancedSearchCnv', 'cnv') ;\n    let prec = document.getElementById(\"precision\");\n    prec.value = UcumDemoConfig.defaultPrecision_ ;\n\n    // Clear the validator tab input field to avoid having a previous value\n    // displayed when the form is reloaded.   This should not be necessary,\n    // because the input field is defined with an attribute of\n    // autocomplete=\"off\".   But, Edge doesn't seem to feel like paying\n    // attention to that.  So this is a workaround.  BAH!\n    let valFld = document.getElementById(\"valString\");\n    valFld.innerHTML = \"\";\n    valFld.setAttribute(\"autocomplete\", \"false\");\n\n    // Check to see if the URL specified that the converter tab be\n    // displayed first.\n    if (window.location.hash === '#converter') {\n      let convertTab = document.getElementById(\"conversion-link\");\n      convertTab.click();\n    }\n  } // end buildAdvancedSettings\n\n\n  /**\n   * This method builds the \"Advanced Settings\" section for one tab of the\n   * demo page/site.  The settings consist of configuration data\n   * from the config.js file, so must be built whenever the page is built.\n   *\n   * This is called once for each tab by the buildAdvancedSettings function.\n   *\n   * @param divName name of the div element to receive the settings html\n   * @param boxSuffix suffix for the tab ('val' or 'cnv') that is included\n   *  in the checkbox ids for the sections built, and is used to determine\n   *  which tab is the target for the current call\n   */\n  buildTabSettings(divName, boxSuffix) {\n\n    // get the division that contains the advanced settings stuff\n    let settingsDiv = document.getElementById(divName);\n\n    // build the categories section\n    let limitPara = document.createElement(\"P\");\n    let limitLine = document.createTextNode(\"Limit search to units in selected categories:\");\n    limitPara.appendChild(limitLine);\n    settingsDiv.appendChild(limitPara);\n\n    this.buildCheckBoxes(settingsDiv, UcumDemoConfig.defCategories_, true,\n                         'category', boxSuffix) ;\n    this.buildCheckBoxes(settingsDiv, UcumDemoConfig.categories_, false,\n                         'category', boxSuffix) ;\n\n    // build display fields section\n    let dispPara = document.createElement(\"P\");\n    dispPara.className = 'topMargin20' ;\n    let lineBreak = document.createElement('BR');\n    dispPara.appendChild(lineBreak);\n    let dispLine = document.createTextNode(\"Select unit fields to display:\");\n    dispPara.appendChild(dispLine);\n    settingsDiv.appendChild(dispPara);\n\n    this.buildCheckBoxes(settingsDiv, UcumDemoConfig.defDisplayFlds_, true,\n                         'displayField', boxSuffix);\n    this.buildCheckBoxes(settingsDiv, UcumDemoConfig.displayFlds_, false,\n                         'displayField', boxSuffix);\n  } // buildTabSettings\n\n\n  /**\n   * This method builds one set of checkboxes for the advanced settings section\n   * on both tabs of the form.  The checkboxes are either checked as defaults or\n   * are not.\n   *\n   * This is called on the body onload event.\n   *\n   * @param settingsDiv the element that contains the settings\n   * @param namesArray the array that contains the names for the checkboxes\n   *  to be created\n   * @param defBox a flag indicating whether or not these boxes are to be\n   *  checked as defaults\n   * @param className a class name to be applied to the boxes.   Used to indicate\n   *  the type of checkbox (category or display)\n   * @param boxSuffix applied to the checkbox name to distinguish which tab\n   *  the checkbox is on ('val' or 'cnv')\n   * @return nothing\n   */\n  buildCheckBoxes(settingsDiv, namesArray, defBox, className, boxSuffix){\n\n    let namesLen = namesArray.length;\n    for (let i = 0; i < namesLen; i++) {\n      let theVal = namesArray[i];\n      let theBox = document.createElement(\"INPUT\");\n      theBox.setAttribute(\"type\", \"checkbox\");\n      theBox.checked = defBox;\n      theBox.id = theVal + \"_\" + boxSuffix + \"box\";\n      theBox.value = theVal ;\n      theBox.setAttribute(\"class\", className);\n      theBox.setAttribute(\"style\", \"margin-left: 10px; margin-right: 3px;\");\n      theBox.addEventListener(\"click\", function() {\n        demoPkg.UcumDemo.getInstance().updateSetting(theBox.id, boxSuffix);});\n      let theSpan = document.createElement('label');\n      theSpan.setAttribute(\"style\", \"display: inline-block\");\n      theSpan.appendChild(theBox);\n\n      let theText = document.createTextNode(theVal);\n      theText.className = 'checkboxText' ;\n      theSpan.appendChild(theText) ;\n      settingsDiv.appendChild(theSpan);\n    }\n  }  // end buildCheckBoxes\n\n\n  /**\n   * This method checks the location value of the current URL to see if it\n   * matched the current tab being displayed (or the one about to be\n   * displayed).  This is here to make sure that when the user clicks on\n   * the Validator or Converter tab, the \"#converter\" portion of the\n   * url, if specified, is removed if the user clicked on the validator tab.\n   *\n   * This is called on the body onhashchange event.\n   */\n  checkTabSwitch() {\n    if (this.blockLocationChangeHandler === false) {\n      if (window.location.hash === '#converter') {\n        let convertTab = document.getElementById(\"conversion-link\");\n        convertTab.click();\n      }\n      else {\n        let validateTab = document.getElementById(\"validation-link\");\n        validateTab.click();\n      }\n    }\n    else\n      this.blockLocationChangeHandler = false ;\n\n  } // end checkTabSwitch\n\n\n  /**\n   * This method is run when the Converter tab is displayed, to reset the\n   * variables that track the validity of the three inputs (\"from\" unit code,\n   * \"from\" value, and \"to\" unit code) that must be correct to attempt a\n   * conversion as well as to reset the molecular weight division to hidden\n   * status and the associated moleWeight input field to null.\n   */\n  showConvertTab(){\n    this.convFrom_ = false ;\n    let fromField = document.getElementById('convertFrom');\n    fromField.value = null;\n    fromField.classList.remove(\"invalid\");\n\n    let fromNameField = document.getElementById('convertFromName');\n    fromNameField.innerHTML = '';\n\n    this.convFromNum_ = true ;\n    let fromNumField = document.getElementById('convertFromNum');\n    fromNumField.value = 1;\n    fromNumField.classList.remove(\"invalid\");\n\n    this.convTo_ = false ;\n    let toField = document.getElementById('convertTo');\n    toField.value = null;\n    toField.classList.remove(\"invalid\");\n\n    let toNameField = document.getElementById('convertToName');\n    toNameField.innerHTML = '';\n\n    this.convToNum_ = true;\n    let toNumField = document.getElementById('convertToNum');\n    toNumField.value = 1;\n    toNumField.classList.remove(\"invalid\");\n\n    let msgField = document.getElementById('convMsg');\n    msgField.innerHTML = '';\n\n    // Make sure the number/code boxes are aligned properly and set the\n    // first entry flag to true.\n    this._sizeNameDivs();\n    this.firstConvEntry_ = true ;\n\n    let mWeightDiv = document.getElementById('molecular-weight');\n    mWeightDiv.style.visibility = 'hidden';\n\n    let mWeightFld = document.getElementById('moleWeight');\n    mWeightFld.value = null ;\n\n    if (window.location.hash !== '#converter' &&\n        window.location.hash !== '') {\n      this.blockLocationChangeHandler = true;\n      window.location.hash = '';\n    }\n  } // end showConvertTab\n\n\n  /**\n   * This method is run when the Validator tab is displayed, to reset the\n   * ucum expression input field and the message field.  Otherwise they\n   * retain their values when switching to the Converter tab and back.\n   */\n  showValidateTab(){\n\n    let codeField = document.getElementById('valString');\n    codeField.value = null;\n    codeField.classList.remove(\"invalid\");\n\n    let msgField = document.getElementById('validationString');\n    msgField.innerHTML = '';\n    msgField.classList.remove(\"invalid\");\n\n    if (window.location.hash === '#converter') {\n      this.blockLocationChangeHandler = true;\n      window.location.hash = '';\n      this.blockLocationChangeHandler = false ;\n    }\n  } // end showValidateTab\n\n\n  /**\n   * This method updates one of the autocompleter URLs and options based advanced\n   * search options selected by the user.  It is called on a click event\n   * for each setting option (category selections as well as display field\n   * selections).\n   *\n   * The autocompleter for the appropriate field on the one of the tabs of\n   * the demo page is recreated each time this is called.\n   *\n   * @param ckBoxId id of the checkbox on which the click event occurred\n   * @param tabSuffix suffix ('val' or 'cnv') used to determine which\n   *  autocompleter needs to be updated\n   */\n  updateSetting(ckBoxId, tabSuffix) {\n    let ckBox = document.getElementById(ckBoxId);\n    let clsName = ckBox.className ;\n    let boxVal = ckBox.value;\n    let boxChecked = ckBox.checked ;\n\n    if (clsName === 'category') {\n      let catsArray = (tabSuffix === 'cnv' ? this.urlConvCats_ :\n                                             this.urlValCats_);\n      let idx = catsArray.indexOf(boxVal) ;\n      // if the box is checked and the value is not already in the\n      // categories array, add it to the array.\n      if (boxChecked && idx < 0) {\n        catsArray.push(boxVal);\n        // if the box is unchecked and the value is in the array, remove\n        // it from the array.\n      }\n      else if (!boxChecked && idx >= 0) {\n        catsArray.splice(idx, 1) ;\n      }\n    }\n    else if (clsName === 'displayField') {\n      let dispArray = (tabSuffix === 'cnv' ? this.urlConvDispFlds_ :\n                                             this.urlValDispFlds_);\n      let idx = dispArray.indexOf(boxVal);\n      if (boxChecked && idx < 0) {\n        dispArray.push(boxVal);\n      }\n      else if (!boxChecked && idx >= 0) {\n        dispArray.splice(idx, 1);\n      }\n    }\n    else\n      throw(new Error('An error occurred while specifying your choice.'));\n\n    // call buildUrlAndOpts to build the url and options from the updated url\n    // arrays (category and display field arrays).\n    let tabName = (tabSuffix === 'cnv' ? 'convert' : 'validate') ;\n    let urlOpts = this.buildUrlAndOpts(tabName) ;\n\n    // Call setOptions and setUrl to update the the autocompleter.\n    // -- no, there is no setOptions at this point.  Leaving these lines in to remind\n    // me to update this if/when a setOptions (or equivalent) function\n    // becomes available.\n    //this.fromAuto_.setOptions(urlOpts[1]);\n    //this.fromAuto_.setURL(urlOpts[0]);\n\n    // So, instead, we clear the cache and recreate the autocompleter(s).\n    if (tabSuffix === 'cnv') {\n      this.fromAuto_.clearCachedResults();\n      this.fromAuto_.destroy();\n      this.fromAuto_ = new Def.Autocompleter.Search('convertFrom',\n          urlOpts[0], urlOpts[1]);\n      this.toAuto_.clearCachedResults();\n      this.toAuto_.destroy();\n      this.toAuto_ = new Def.Autocompleter.Search('convertTo',\n          urlOpts[0], urlOpts[1]);\n    } else {\n      this.valAuto_.clearCachedResults();\n      this.valAuto_.destroy();\n      this.valAuto_ = new Def.Autocompleter.Search('valString',\n          urlOpts[0], urlOpts[1]);\n    }\n  } // end updateSetting\n\n\n  /**\n   * This method validates a string that is supposed to be representing a valid\n   * unit. It indicates whether or not the string translates to a valid unit.\n   *\n   * @param elementID the ID of the web page element that contains the\n   *  string to be validated\n   * @param tabName the name of the tab ('Converter' or 'Validator') that\n   *  contains the input field\n   * @param msgElementID the ID of the web page element to receive messages\n   *  (success and error).\n   * @returns nothing directly; return is the success/error message\n   */\n  reportUnitStringValidity(elementID, tabName, msgElementID) {\n\n    this.utils_.useHTMLInMessages(true);\n    this.utils_.useBraceMsgForEachString(true);\n\n    let valConv = tabName === 'Validator' ? 'validate' : 'convert' ;\n\n    let retMsg = '';\n    let valMsg = '';\n    let parseResp = {};\n    let suggsField = null ;\n    if (tabName === 'Converter') {\n      suggsField = document.getElementById(\"convSuggestions\");\n      suggsField.innerHTML = '';\n      suggsField.style.display = 'none';\n      // This is called by a change to one of the unit fields, so\n      // hide the molecular weight division, clear the moleWeight input\n      // value, and clear the value of the last result field, if any\n      let mWeightDiv = document.getElementById('molecular-weight');\n      mWeightDiv.style.visibility = 'hidden';\n      let mWeightFld = document.getElementById('moleWeight');\n      mWeightFld.value = null ;\n      /*\n      if (this.lastResultFld_) {\n        let rf = document.getElementById(this.lastResultFld_);\n        rf.value = '';\n      }\n      */\n\n      // If the user entered a unit code as soon as the converter tab was\n      // displayed, blank out the number field of the opposite number/code set.\n      if (this.firstConvEntry_) {\n        this.firstConvEntry_ = false ;\n        if (elementID === 'convertFrom') {\n          let clrFld = document.getElementById('convertToNum');\n          clrFld.value = '';\n        }\n        else {\n          let clrFld = document.getElementById('convertFromNum');\n          clrFld.value = '';\n        }\n      }\n    }\n\n    // Clear the message field, but first hold onto the last message displayed.\n    // This is used at the end of this function to make sure we don't redisplay\n    // the same message.  This can happen if, for example, the user enters a\n    // unit code that requires a substitution, e.g., 2mg instead of 2.mg, and\n    // then enters another unit code in the other code field on the converter\n    // tab.   When the 2mg unit code is checked for validity, a substitution\n    // message is displayed.   When the second unit code is entered and the\n    // conversion is performed, the substitution message gets repeated because\n    // the conversion process will re-evaluate the 2mg unit code.  This avoids\n    // that second display of the same, and no longer needed, message.\n    let resFld = document.getElementById(msgElementID);\n    let lastDispMsg = resFld.innerHTML ;\n    resFld.innerHTML = '';\n    let valFld = document.getElementById(elementID);\n    let valMsgFld = document.getElementById(elementID + 'Name') ;\n    if (valMsgFld) {\n       valMsgFld.innerHTML = '';\n       valMsgFld.style.height = 'auto';\n    }\n    let uStr = valFld.value;\n\n    // If the field was blanked out and we're on the converter tab, call\n    // setConvertValues to set the validity flag for that field to false but not\n    // designate it as an error (no error message, no red border around the field)\n    if (uStr === '') {\n      if (tabName === 'Converter')\n        this.setConvertValues(elementID, false, true);\n    }\n    // Otherwise create a safe (to redisplay) copy of the field and\n    // try to validate it\n    else {\n      let escVal = escapeHtml(valFld.value);\n      let theStatus = '';\n      try {\n        parseResp = this.utils_.validateUnitString(uStr, true, valConv);\n        theStatus = parseResp['status'];\n        let theUnit = parseResp['unit'];\n        // If we got a unit back and the status isn't 'error', we found a\n        // unit (whether or not it matches the original string).\n        if (theStatus !== 'error' && theUnit) {\n\n          if (tabName === 'Converter') {\n            this.setConvertValues(elementID, true);\n\n            // If the last displayed message was displayed again, remove it here.\n            // See above for description of how that can happen.\n            if (resFld.innerHTML === lastDispMsg) {\n              resFld.innerHTML = '';\n            }\n            else {\n              retMsg = resFld.innerHTML ;\n            }\n          }\n          // If the status returned was 'invalid' it means we had to do a\n          // substitution to get a unit.  Set the class on the output\n          // strings to invalid.\n          if (theStatus === 'invalid') {\n            valFld.classList.add(\"invalid\");\n            resFld.classList.add(\"invalid\");\n            resFld.classList.remove(\"valid\");\n            valMsg = `${parseResp['ucumCode']} was substituted for ${escVal}.` ;\n            valMsgFld.classList.add(\"invalid\");\n          }\n          // Otherwise the status is valid.  If we're on the validator tab\n          // set the appropriate classes for the output fields.  This has\n          // already been done for the converter tab fields, in setConvertValues\n          else {\n            if (tabName === 'Validator') {\n              valFld.classList.remove('invalid');\n              resFld.classList.remove('invalid');\n              resFld.classList.add('valid');\n            }\n            // Assemble the valid value message.  If there is a unit name,\n            // use that.  If there's no name, just say that the code is valid.\n            valMsg = `${parseResp['ucumCode']} `;\n            if (theUnit.name) {\n              valMsg += `(${theUnit.name}) `;\n            }\n            valMsg += ' is a valid unit expression.';\n            // If there might be something that needs to be escaped in\n            // the message, do it now.\n            if (uStr !== escVal && uStr !== '') {\n              valMsg = this._multipleReplace(valMsg, uStr, escVal);\n            }\n            // For the validator tab, make sure the valid unit message\n            // is the first one that is displayed.  It may be followed\n            // by a message about substitutions, but it should be first.\n            if (tabName === 'Validator') {\n              if (parseResp['msg'].length > 0)\n                parseResp['msg'].unshift(valMsg);\n              else\n                parseResp['msg'] = [valMsg];\n            } // end if this is for the validator tab\n          }  // end if the status is 'valid'\n        } // end if we have a unit and the status is not 'error'\n        // Else the status returned is 'error' OR no unit was returned\n        // (status could still be invalid)\n        else {\n          if (tabName === 'Converter') {\n            this.setConvertValues(elementID, false);\n            valMsg = `${escVal} `;\n            if (theUnit && theUnit.name) {\n              valMsg += `(${theUnit.name}) `;\n            }\n            valMsg += ' is NOT a valid unit expression.';\n          }\n          else {\n            valFld.classList.add(\"invalid\");\n            resFld.classList.add(\"invalid\");\n            resFld.classList.remove(\"valid\");\n          }\n          // If the status is invalid and we have suggestions, put the suggestion\n          // output in the return message.   This include a starting line\n          // stating that the unit expression was invalid but we have\n          // suggestions.  If we don't have suggestions there\n          // should be an \"invalid\" message in the parse response's 'msg'\n          // element which will be transferred to the retMsg below.\n          if (parseResp['suggestions']) {\n            if (tabName === 'Validator') {\n              retMsg = this._suggSetOutput(parseResp['suggestions']);\n            }\n            else {\n              suggsField.innerHTML = this._suggSetOutput(parseResp['suggestions']);\n              suggsField.style.display = 'block';\n            }\n          }\n\n          if (theStatus === 'error') {\n            console.log(retMsg.concat(parseResp['msg']));\n            retMsg = `Sorry - an error occurred while trying to validate ${escVal}`;\n          }\n        } // end if parsing returned an error status\n      } // end try\n      catch (err) {\n        console.log(err.message);\n        retMsg = `Sorry - an error occurred while trying to validate ${escVal}`;\n        valFld.classList.add(\"invalid\");\n        resFld.classList.add(\"invalid\");\n        if (tabName === 'Converter') {\n          this.setConvertValues(elementID, false);\n        }\n      } // end catch\n\n      if (parseResp['msg'] && parseResp['msg'].length > 0) {\n        let pMsgLen = parseResp['msg'].length;\n        for (let m = 0; m < pMsgLen; m++) {\n          if (!retMsg.includes(parseResp['msg'][m])) {\n            if (retMsg != '')\n              retMsg += '<BR>';\n            retMsg += parseResp['msg'][m];\n          }\n        }\n      } // end if there's a message from the parse request\n\n      // If there's a message to be displayed (and it's not a repeat of\n      // the last displayed message) do it now\n      if (retMsg !== '' && retMsg !== lastDispMsg) {\n        if (uStr !== escVal && uStr !== '') {\n          retMsg = this._multipleReplace(retMsg, uStr, escVal);\n        }\n        resFld.innerHTML = retMsg;\n      }\n\n      // If we're on the converter tab, display any pending valid/invalid\n      // message for the code just entered and set the class of the field\n      // that gets that message (under the input field for the code)\n      if (tabName === 'Converter') {\n        valMsgFld.innerHTML = valMsg;\n        if (theStatus === 'valid')\n          valMsgFld.classList.remove('invalid');\n        else\n          valMsgFld.classList.add('invalid');\n      }\n\n    } // end if a value was specified\n\n    // Make sure the number/code blocks are aligned\n    if (tabName === 'Converter') {\n      this._sizeNameDivs();\n    }\n  } // end reportUnitStringValidity\n\n\n  /**\n   * This method sets the appropriate validity variable and display attributes\n   * (via the \"invalid\" class attribute) for one of the three inputs that\n   * must be correct to allow the user to request conversion.\n   *\n   * This also checks to see if all three are correct and if they are, it\n   * invokes the convertUnit function.\n   *\n   * @param elementID ID of the field that caused this to be called.\n   * @param valid true indicates that the value is valid; false means it's not.\n   * @param clear an optional boolean that signals a request to remove\n   *   highlighting (currently a red border) of the form element being updated.\n   *   This should be passed as true when the user clears the contents of a\n   *   field.  The input is not a valid value, but no message or highlighting\n   *   is required.  Default value is false.\n   *\n   */\n  setConvertValues(elementID, valid, clear) {\n\n    if (clear === undefined) {\n      clear = false ;\n    }\n    let msgField = document.getElementById('convMsg');\n    let sourceField = document.getElementById(elementID) ;\n    let resultSide = null ;\n    if (elementID === 'convertFrom') {\n      this.convFrom_ = valid;\n      let fromNumFld = document.getElementById('convertFromNum');\n      if (fromNumFld.value == '')\n        resultSide = 'from';\n      else\n        resultSide = 'to';\n    }\n    else if (elementID === 'convertTo') {\n      this.convTo_ = valid;\n      let toNumFld = document.getElementById('convertToNum');\n      if (toNumFld.value === '')\n        resultSide = 'to';\n      else\n        resultSide = 'from';\n    }\n    else if (elementID === 'convertFromNum') {\n      this.convFromNum_ = valid ;\n      resultSide = 'to';\n    }\n    else if (elementID === 'convertToNum') {\n      this.convToNum_ = valid;\n      resultSide = 'from';\n    }\n    else { // assume moleWeight\n      if (this.lastResultFld_ === 'convertFromNum')\n        resultSide = 'from';\n      else\n        resultSide = 'to';\n    }\n\n    // set or remove the indicator (currently a red border) on the invalid field\n    if (valid === false && !clear) {\n      sourceField.classList.add(\"invalid\");\n      msgField.classList.add(\"invalid\");\n    }\n    else {\n      sourceField.classList.remove(\"invalid\");\n      msgField.classList.remove(\"invalid\");\n    }\n\n    // if both code fields are valid, and the number field that is not\n    // being calculated is valid, perform the conversion\n    if (this.convFrom_ === true && this.convTo_ === true) {\n      if (resultSide === 'from' && this.convToNum_) {\n        this.convertUnit('convertTo',\n                         'convertToNum',\n                         'convertFrom',\n                         'convertFromNum');\n      }\n      else if (resultSide === 'to' && this.convFromNum_) {\n        this.convertUnit('convertFrom',\n                         'convertFromNum',\n                         'convertTo',\n                         'convertToNum');\n      }\n    }\n  } // end setConvertValues\n\n\n  /**\n   * This method checks a number of units value or the moleWeight value to make\n   * it's a valid number.  It calls setConvertValues to set the validity state\n   * flag for the number of units field as appropriate.\n   *\n   * @param numField the name of the input field to check\n   *\n   */\n  checkNumVal(numField) {\n\n    let checkFld = document.getElementById(numField);\n    let checkVal = escapeHtml(checkFld.value);\n    if (numField === 'moleWeight')\n      var resFld = document.getElementById(this.lastResultFld_) ;\n    else {\n      resFld = numField === 'convertFromNum' ?\n        document.getElementById('convertToNum') :\n        document.getElementById('convertFromNum');\n    }\n    let resultString = document.getElementById('convMsg');\n    resultString.innerHTML = '';\n\n    if (checkVal !== '') {\n      resFld.value = '';\n      let parsedNum = \"\" + checkVal;\n      if (isNaN(parsedNum) || isNaN(parseFloat(parsedNum))) {\n        resultString.innerHTML = `${checkVal} is not a valid number.`;\n        this.setConvertValues(numField, false);\n      }\n      else {\n        this.setConvertValues(numField, true);\n      }\n    } // end if a value was specified\n\n    // Else the value is blank. call setConvertValues to set the validity\n    // indicator to false and remove any red highlighting that might be there.\n    else {\n      this.setConvertValues(numField, false, true);\n    }\n\n    // Clear the first entry flag, make sure the number/code blocks are aligned\n    if (this.firstConvEntry_) {\n      this.firstConvEntry_ = false ;\n    }\n    this._sizeNameDivs();\n\n  } // end checkNumVal\n\n\n  /**\n   * This checks the value specified for number of decimal digits on the\n   * Converter tab.  If the number is invalid it issues a message and resets\n   * the value to the default.\n   *\n   * If the number is valid it resets both the\n   * convert \"from\" and convert \"to\" numbers to the appropriate value, using\n   * the stored values for those fields.  It does not reset a value for a\n   * field that is blank.\n   *\n   * @param numField the name of the number of units field\n   *\n   */\n  updatePrecision(msgFieldName) {\n\n    let msgField = document.getElementById(msgFieldName);\n    msgField.innerHTML = '';\n    let prec = document.getElementById(\"precision\");\n    let precDigits = parseInt(prec.value);\n    if (isNaN(precDigits) || (precDigits < 0)) {\n      msgField.innerHTML = `Decimal digits must be specified as a number `+\n                           `between 0 and ${UcumDemoConfig.maxDecDigits_}.  ` +\n                           `It has been reset to the default value.`;\n      msgField.classList.add(\"invalid\");\n      precDigits = UcumDemoConfig.defaultPrecision_;\n      prec.value = precDigits;\n    }\n    else if (precDigits > UcumDemoConfig.maxDecDigits_) {\n      msgField.innerHTML = `${escapeHtml(prec.value)} is not a valid value for `\n        `decimal digits.  It has been reset to the maximum number of digits ` +\n        `allowed.`;\n      msgField.classList.add(\"invalid\");\n      precDigits = UcumDemoConfig.maxDecDigits_;\n      prec.value = precDigits;\n    }\n    // Update the result field\n    let numField = document.getElementById(this.lastResultFld_);\n    let numVal = parseFloat(numField.value);\n    if (numVal !== NaN) {\n      numVal = this.lastResult_.toFixed(precDigits);\n      numField.value = numVal;\n    }\n\n  } // end updatePrecision\n\n\n  /**\n   * This method converts one unit to another\n   *\n   * @param fromField the ID of the field containing the name of the unit to\n   *  be converted\n   * @param fromNumField the ID of the field containing the number of \"from\" units\n   *  to be converted to \"to\" units\n   * @param toField the ID of the field containing the name of the unit that\n   *  the from field is to be converted to\n   * @param toNumField the ID of the field to receive the number of \"to\" units\n   */\n  convertUnit(fromField, fromNumField, toField, toNumField) {\n\n    this.utils_.useHTMLInMessages(true);\n    this.utils_.useBraceMsgForEachString(true);\n\n    let resultMsg = '';\n    let prec = document.getElementById(\"precision\");\n    let decDigits = parseInt(escapeHtml(prec.value));\n    if (isNaN(decDigits)) {\n      decDigits = Ucum.decDigits_;\n      prec.value = decDigits;\n    }\n    // Start out with the precision not displayed\n    let precLine = document.getElementById('precision-line');\n    precLine.style.display = \"none\";\n\n    // Store the name of the result field so that we have it if a larger number\n    // of digits is subsequently requested AND (for the result field name)\n    // when a molecular weight is requested.\n    this.lastResultFld_ = toNumField ;\n\n    let fromName = document.getElementById(fromField).value ;\n    let escFromName = escapeHtml(fromName);\n    let fromVal = parseFloat(escapeHtml(document.getElementById(fromNumField).value));\n    let toName = document.getElementById(toField).value;\n    let escToName = escapeHtml(toName);\n\n    // Get the field to hold an error message and the one to hold suggestions\n    let msgField = document.getElementById(\"convMsg\");\n    msgField.innerHTML = '';\n    let suggsField = document.getElementById(\"convSuggestions\");\n    suggsField.innerHTML = '';\n    suggsField.style.display = 'none';\n\n    let weightField = document.getElementById(\"moleWeight\");\n    let moleWeightVal = weightField.value ;\n\n    let resultObj = this.utils_.convertUnitTo(fromName, fromVal, toName,\n                                                true, moleWeightVal);\n\n    if (resultObj['status'] === 'succeeded') {\n      let toVal = resultObj['toVal'];\n      let toNumFld = document.getElementById(toNumField);\n      if (toNumField === 'convertToNum')\n        this.convToNum_ = true ;\n      else\n        this.convFromNum_ = true;\n      // Store the full result value number received so that we have it if a\n      // larger number of digits is subsequently requested.\n      this.lastResult_ = toVal;\n\n      // convert the value to a fixed value with the specified number of\n      // decimal digits.  Remove trailing zeroes\n      //toVal = toVal.toFixed(decDigits).replace(/\\.?0+$/, \"\");\n      // ----- OR ----\n      // convert the value to a fixed value with the specified number of\n      // decimal digits.  Do not remove trailing zeroes\n      // toVal = toVal.toFixed(decDigits);\n      // ----- OR ----\n      // convert the value to a value with 16 significant digits.  Use\n      // 16 to avoid floating point rounding errors\n      // if before/after parseFloat are not equal, show precision chooser\n      // otherwise don't.   Only modify last result value\n      let precVal = parseFloat(toVal.toPrecision(UcumDemoConfig.defaultPrecision_)) ;\n      toNumFld.value = precVal;\n\n      // The precision chooser is on hold.  Don't display.\n      //if (precVal !== toVal) {\n      //  precLine.style.visibility = \"visible\";\n      //}\n\n      // If a message was returned, write that to the message area.  For a\n      // successful conversion this might be a message about a substitution,\n      // e.g., \"2m is not a valid UCUM code.  We assumed you meant 2.m\"\n\n      if (resultObj['msg'].length > 0) {\n        resultMsg = resultObj['msg'].join('<BR>');\n      }\n    }\n    // Else if an error was signalled, transfer the error message to\n    // the result field\n    else if (resultObj['status'] === 'error') {\n      resultMsg = 'Sorry - an error occurred while trying to ' +\n        'perform the conversion.';\n    }\n\n    // Else result status was failed.  Either a molecular weight is needed\n    // for a mass<->moles conversion or 1 or more invalid unit expressions\n    // were found (status = 'failed')\n    else {\n      if (resultObj['msg']) {\n        let idx = resultObj['msg'].indexOf(Ucum.needMoleWeightMsg_);\n        if (idx >= 0) {\n          this._requestMolecularWeight();\n          resultObj['msg'].splice(idx, 1);\n          if (resultObj['msg'].length > 0)\n            resultMsg = resultObj['msg'].join('<BR>');\n          else\n            resultMsg = '';\n        } else {\n          resultMsg = resultObj['msg'].join('<BR>');\n        }\n      }\n      // if suggestions were found, output the suggestions to the suggestions\n      // field\n      if (resultObj['suggestions']) {\n        let suggsSetString = this._suggSetOutput(resultObj['suggestions']);\n        if (fromName !== escFromName && fromName !== '') {\n          suggsSetString = this._multipleReplace(suggsSetString,\n                                                 fromName, escFromName);\n        }\n        if (toName !== escToName && toName !== '') {\n          suggsSetString = this._multipleReplace(suggsSetString,\n                                                 toName, escToName);\n        }\n        suggsField.innerHTML = suggsSetString;\n        suggsField.style.display = 'block';\n      } // end if there were suggestions\n    } // end if conversion did/didn't succeed\n\n    if (resultMsg !== '') {\n      if (fromName !== escFromName && fromName !== '') {\n        resultMsg = this._multipleReplace(resultMsg, fromName, escFromName);\n      }\n      if (toName !== escToName && toName !== '') {\n        resultMsg = this._multipleReplace(resultMsg, toName, escToName);\n      }\n      msgField.innerHTML = resultMsg;\n    }\n  } // end convertUnit\n\n\n  /**\n   * This method retrieves a list of unit commensurable, i.e., that can be\n   * converted from and to, a specified unit.  Throws an error if the \"from\"\n   * unit cannot be found or if no commensurable units are found.\n   *\n   * @param fromField the ID of the field where the \"from\" unit is specified\n   * @param toField the ID of the field to receive the list of commensurable\n   *  units\n   * @param resultField the ID of the field to receive an error message if one\n   *  is thrown\n   * @returns nothing but sets the autocompleter list in the \"toField\" to the\n   *   commensurable units if any were found.  If an error from one of the\n   *   functions called by this is caught, fills the result field with the error\n   */\n  getCommensurables(fromField, toField, resultField) {\n\n    this.utils_.useHTMLInMessages(true);\n    this.utils_.useBraceMsgForEachString(true);\n    let resultMsg = [];\n\n    let toFld = document.getElementById(toField);\n    toFld.innerHTML = '';\n    this.toAuto_.setList('');\n    let resultString = document.getElementById(resultField);\n    resultString.innerHTML = '';\n\n    let fromName = document.getElementById(fromField).value;\n    let escFromName = escapeHtml(fromName);\n    if (fromName === '' || fromName === null) {\n      resultMsg.push('Please specify a code for the units you want to convert.');\n    }\n    else {\n      let hypIdx = fromName.indexOf(Ucum.codeSep_);\n      if (hypIdx > 0)\n        fromName = fromName.substr(0, hypIdx);\n\n      let parseResp = [];\n\n      try {\n        parseResp = this.utils_.commensurablesList(fromName);\n        let commUnits = parseResp[0];\n        resultMsg = parseResp[1];\n        // If we can't find any, don't panic.  The user could still enter one\n        // that's not on our list but is commensurable.  So if none are found,\n        // just make sure the text about commensurable units is hidden.\n        let commText = document.getElementById('convertRight');\n        if (commUnits) {\n          let cLen = commUnits.length;\n          let commNames = [];\n          for (let i = 0; i < cLen; i++)\n            commNames[i] = commUnits[i].getProperty('csCode_') + Ucum.codeSep_ +\n                commUnits[i].getProperty('name_');\n          commNames.sort(this.utabs_.compareCodes);\n          this.toAuto_.setList(commNames);\n          commText.style.visibility = \"visible\";\n        }\n        else\n          commText.style.visibility = \"hidden\";\n      }\n      catch (err) {\n        resultMsg.push(err.message);\n      }\n    }\n    if (resultMsg.length > 0) {\n      resultMsg = resultMsg.join('<BR>');\n      if (fromName !== escFromName && fromName !== '') {\n        resultMsg = this._multipleReplace(resultMsg, fromName, escFromName);\n      }\n      resultString.innerHTML = resultMsg ;\n    }\n  } // end getCommensurables\n\n\n  /**\n   *  This toggles the display of a given form element.  It changes the\n   *  style display state from \"none\" to \"block\" or \"block\" to \"none\"\n   *  depending on its current state.\n   *\n   *  It also can change the text on the button specified.  This is optional.\n   *\n   * @param elementID the ID of the target element\n   * @param buttonID the ID of the button whose text is to be changed.  This\n   *  is optional, but if specified the following 2 text parameters must be\n   *  supplied\n   * @param blockText the text that shows on the button when the target element\n   *  is currently not displayed (before being toggled).\n   * @param noneText the text that shows on the button when the target element\n   *  is currently displayed (before being toggled).\n   *\n   */\n  toggleDisplay(elementID, buttonID, blockText, noneText) {\n\n    this.utils_.useHTMLInMessages(true);\n    this.utils_.useBraceMsgForEachString(true);\n\n    let theElement = document.getElementById(elementID);\n    let theButton = null;\n    if (buttonID)\n      theButton = document.getElementById(buttonID);\n    if (theElement) {\n      if (theElement.style.display === \"none\") {\n        theElement.style.display = \"block\";\n        if (theButton)\n          theButton.innerText = theButton.innerText.replace(noneText, blockText);\n      }\n      else {\n        theElement.style.display = \"none\";\n        if (theButton)\n          theButton.innerText = theButton.innerText.replace(blockText, noneText);\n      }\n    } // end if we got the target element\n  } // end toggleDisplay\n\n\n  /**\n   *  This method responds to the user's request to validate unit strings in\n   *  a file.  When the user clicks on the inputfile button on the demo page,\n   *  a file selector box is displayed.  When the user selects a file and clicks\n   *  on the \"Open\" button, this method is called to display the column name\n   *  division, which is hidden until the file is selected.\n   */\n  fileSelected() {\n    let colDiv = document.getElementById('colNameDiv') ;\n    colDiv.setAttribute('style', 'display:block');\n  }\n\n\n  /**\n   *  This method responds to the user's click on the Validate File button.\n   *\n   *  It calls the file validator validateFile method, passing it the file\n   *  selected, the column name specified, the initiateDownload function in\n   *  this object to be called when file validation is complete, and the\n   *  fileValidationError function in this object to be called on an error.\n   *\n   *  It also disables the column name input field.\n   */\n  columnSpecified() {\n    let colName = document.getElementById('colName').value;\n    this.utils_.useHTMLInMessages(false);\n    this.utils_.useBraceMsgForEachString(false);\n\n    let dia = document.getElementById(\"inputfile\");\n    let ufv = UcumFileValidator.getInstance();\n    ufv.validateFile(dia.files[0], colName, this.initiateDownload,\n        this.fileValidationError) ;\n  }\n\n  /**\n   *  This is called when validation of unit strings in a file is complete.\n   *  It controls display (and disposal) of the download dialog box that\n   *  lets the user choose where to store the output file and to change\n   *  the name of the file to be stored if desired.\n   *\n   *  It also clears the file name from input file field and blocks display\n   *  of the column name division.\n   *\n   * @param bUrl the object url of the blob that contains the validated file\n   *  contents\n   */\n  initiateDownload(bUrl){\n\n    // create the download element,  give it the default file name to\n    // create, and append it to the document.\n    let a = document.createElement('a') ;\n    a.id = 'downlink';\n    a.href = bUrl ;\n    a.download = 'UnitStringValidations.csv';\n    document.body.appendChild(a);\n\n    // add a listener that gets rid of the download link once the\n    // user clicks save or cancel\n    function windowFocus(){\n      window.removeEventListener('focus', windowFocus, false);\n      URL.revokeObjectURL(bUrl);\n      let an = document.getElementById('downlink');\n      an.parentElement.removeChild(an);\n      let dia = document.getElementById(\"inputfile\");\n      dia.value = null;\n      let colDiv = document.getElementById('colNameDiv');\n      colDiv.setAttribute('style', 'display:none');\n    }\n    window.addEventListener('focus', windowFocus, false);\n\n    // Click on the download link to initiate display of the box and\n    // then download (if the user selects SAVE).\n    a.click();\n\n  } // end initiate download\n\n\n  /**\n   * This method is called when an error occurs during the validation process,\n   * by the code doing the validation.\n   *\n   * It writes the error, including the name of the stream in which the error\n   * occurred, to the console.  It displays the error text to the user in an\n   * alert box and lets the user know that the validation file was not written.\n   *\n   * It also clears the file name from the input file field.  The display of\n   * the column name division is also blocked.\n   *\n   * @param src the source of the error - which should be the stream in which\n   *  the error was encountered\n   * @param err the error text\n   *\n  */\n  fileValidationError(src, err) {\n    console.log(src + ' error; err = ' + err);\n    let aMsg = err + \"\\n\\nSorry - your validation file could not be written.\";\n    alert(aMsg);\n    let dia = document.getElementById(\"inputfile\");\n    dia.value = '';\n    let colDiv = document.getElementById('colNameDiv');\n    colDiv.setAttribute('style', 'display:none');\n  }\n\n\n  /**\n   * This method is called when the user clicks on the Cancel button for a\n   * file validation request.  This clears out the file name chosen in the\n   * input file field and hides the column stuff (request for column name,\n   * validate file button, and cancel button).\n   *\n   * These cleanup steps are also used in the fileValidationError method and\n   * the window_focus function defined in the initiateDownload method.  I tried\n   * to reference this method from those but for some reason this method\n   * could not been seen when called from those.  I'm not sure if it has to\n   * do with a different context, where the fileValidationError is called\n   * from the ucumFileValidator validateFile event emitter and the\n   * window_focus method in the initiateDownload method is also an event, but\n   * no matter what I tried it wouldn't work.   Sigh.\n   */\n  resetFileInput() {\n    let dia = document.getElementById(\"inputfile\");\n    dia.value = '';\n    let colDiv = document.getElementById('colNameDiv');\n    colDiv.setAttribute('style', 'display:none');\n  }\n\n\n  /**\n   * This creates HTML output text for an array of suggestion sets.  A\n   * suggestion set is returned by the parsing code for each suggestion\n   * found (when suggestions were requested for unit strings found to be\n   * invalid).  Each set is a hash object that includes two elements:\n   *   'msg' - which is a message identifying the problem string; and\n   *   'units' - which is an array of arrays, where each inner array is\n   *             created for each suggestion.  The inner arrays contain\n   *             the unit code, name and guidance text (if any) for a\n   *             suggested unit.\n   *\n   * @param suggSet the array of sets for which to create HTML output text\n   * @returns {string} the string containing the HTML\n   * @private\n   */\n  _suggSetOutput(suggSet) {\n\n    let suggString = '';\n    for (let s = 0; s < suggSet.length; s++) {\n      suggString += suggSet[s]['msg'] + '<ul>';\n      for (let u = 0; u < suggSet[s]['units'].length; u++) {\n        suggString += '<li>' + suggSet[s]['units'][u].join(', ') + '</li>';\n      } // end do for each unit\n      suggString += '</ul>';\n    }\n    return suggString ;\n  } // end suggSetOutput\n\n\n  /**\n   * This replaces multiple occurrences of a string within a string.\n   * This was created at Paul Lynch's request.\n   *\n   * @param targetString the string containing the value to be replaced\n   * @param toReplace the value to be replaced\n   * @param replaceWith the value to replace toReplace\n   * @returns {string} the string containing the replaced values\n   * @private\n   */\n  _multipleReplace(targetString, toReplace, replaceWith) {\n\n    return targetString.replace(new RegExp(\n      toReplace.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\"), \"g\"),\n      replaceWith);\n\n  } // end _multipleReplace\n\n\n  /**\n   * This makes sure that the unit name areas on the unit\n   * conversion tab (under the unit code input fields) are\n   * the same heights).\n   *\n   * @private\n   */\n  _sizeNameDivs() {\n\n    let left = document.getElementById(\"convertFromName\");\n    let leftHeight = left.offsetHeight;\n\n    let right = document.getElementById(\"convertToName\");\n    let rightHeight = right.offsetHeight;\n\n    if (right.innerHTML === '' && left.innerHTML === '') {\n      right.style.height = '0px';\n      left.style.height = '0px';\n    }\n    else {\n      if (leftHeight > rightHeight) {\n        right.style.height = leftHeight + 'px' ;\n      }\n      else if (rightHeight > leftHeight) {\n        left.style.height = rightHeight + 'px';\n      }\n    }\n  } // end _sizeNameDivs\n\n\n  /**\n   * This makes the division with the request for molecular weight\n   * visible.\n   *\n   * @private\n   */\n  _requestMolecularWeight() {\n    let weightDiv = document.getElementById('molecular-weight');\n    weightDiv.style.visibility = 'visible';\n  }\n\n} // end class UcumDemo\n\n\n/**\n *  This function exists ONLY until the original UcumDemo constructor\n *  is called for the first time.  It's defined here in case getInstance\n *  is called before the constructor.   This calls the constructor.\n *\n *  The constructor redefines the getInstance function to return the\n *  singleton UcumDemo object.  This is based on the UnitTables singleton\n *  implementation; see more detail in the UnitTables constructor description.\n *\n *  @return the singleton UcumDemo object.\n */\nUcumDemo.getInstance = function(){\n  return new UcumDemo();\n}\n\n// Perform the first request for the demo object, to get the\n// getInstance method set.\nUcumDemo.getInstance();\n","/**\n * This validates unit strings found in a column in a csv (comma separated values)\n * file and returns the validation result in specified columns added to the\n * file.  This uses the node-csv package (https://github.com/wdavidw/node-csv)\n * to handle the input and output processing.\n *\n */\nvar fs = require('browserify-fs');\n\nvar stream = require('stream');\nvar parse = require('csv-parse') ;\nvar transform = require('stream-transform');\nvar stringify = require('csv-stringify');\nvar str = require('string-to-stream') ;\n\nvar ucumPkg = require('@lhncbc/ucum-lhc');\nvar UcumLhcUtils = ucumPkg.UcumLhcUtils;\nvar Ucum = ucumPkg.Ucum;\n\n\nexport class UcumFileValidator {\n\n  constructor() {\n    // Make this a singleton.  See UnitTables constructor for details.\n\n    let holdThis = UcumFileValidator.prototype;\n    UcumFileValidator = function () {\n      throw (new Error('UcumFileValidator is a Singleton.  ' +\n          'Use UcumFileValidator.getInstance() instead.'));\n    };\n    if (exports)\n      exports.UcumFileValidator = UcumFileValidator;\n    UcumFileValidator.prototype = holdThis;\n\n    let self = this ;\n    UcumFileValidator.getInstance = function(){return self} ;\n  }\n\n  /**\n   * This method reads the rows of the input csv file, checks the validity\n   * of the unit string in the identified column, and outputs the result of\n   * the test as well as any notes.  New columns are added to the rows, at\n   * the end of each row, to contain confirmation of the unit string tested,\n   * the result of the test, and any notes from the test.\n   *\n   * @param inputFile this is the input file obtained from the HTML file type\n   *  input field\n   * @param sourceCol this is the name of the column containing the unit\n   *  string to be tested.\n   * @param fileSaveFunction the function to be called that will save the\n   *  file.  It will be passed one parameter, which will be the Ojbect URL\n   *  for the data to be written.\n   * @param msgHandler the function to be called on errors.  This function\n   *  should handle error reporting.  It should take 2 parameters - source,\n   *  which receives the name of the stream throwing the error, and err,\n   *  which should be the error text.   See UcumDemo.fileValidationError for\n   *  an example.\n   *\n   * @returns nothing\n   */\n  validateFile(inputFile, sourceCol, fileSaveFunction, msgHandler) {\n\n    var unitTestedCol = 'Unit String Tested';\n    var resultCol = 'Validation Result';\n    var commentCol = 'Notes';\n\n    // The file reader reads the input file into the str readable stream\n    var reader = new FileReader();\n    reader.readAsText(inputFile);\n\n    var utils = UcumLhcUtils.getInstance();\n\n    // The parser pulls each row out of the readable stream and passes it\n    // along the pipeline to the transformer as a hash\n    var parser = parse({columns: true});\n\n    // The transformer receives each row from the parser.  It calls the code\n    // to validate the string found in the specified source\n    // column and places the results in the specified result columns.  The\n    // updated hash is passed along the pipeline to the stringifier.\n    var transformer = transform(function (record) {\n\n      if (record[sourceCol] === undefined) {\n        transformer.emit('error', 'The ' + sourceCol + ' column was not ' +\n                  'found in the file.  Validation is not possible.');\n      }\n      else {\n        let uStr = record[sourceCol];\n        let parseResp = [];\n        record[unitTestedCol] = uStr;\n\n        try {\n          let parseResp = utils.validateUnitString(uStr, true);\n          if (parseResp['status'] === 'valid')\n            record[resultCol] = parseResp['ucumCode'] + \" is a valid UCUM unit.\";\n          else\n            record[resultCol] = uStr + \" is not a valid UCUM unit.\";\n          record[commentCol] = '';\n          if (parseResp['msg'] && parseResp['msg'].length > 0) {\n            record[commentCol] = parseResp['msg'].join('; ');\n            if (parseResp['suggestions'])\n              record[commentCol] += '\\n';\n          }\n          if (parseResp['suggestions']) {\n            let suggSet = parseResp['suggestions'];\n            let suggString = '';\n            for (let s = 0; s < suggSet.length; s++) {\n              suggString += suggSet[s]['msg'] + '\\n';\n              for (let u = 0; u < suggSet[s]['units'].length; u++) {\n                suggString += suggSet[s]['units'][u].join(', ') + '\\n';\n              } // end do for each unit\n            }\n            record[commentCol] = suggString ;\n          }\n        }\n        catch (err) {\n          record[resultCol] = 'ERROR';\n          record[commentCol] = err.message;\n        }\n      }\n      return record;\n    }); // end transform function\n\n    // The stringifier gets the updated hash from the transformer and\n    // puts it into csv format, then passes it along the pipeline to the\n    // output stream.\n    var stringifier = stringify({header: true});\n\n    // The output stream gets the csv formatted row and writes it to the\n    // stream's data buffer.\n    var outStream = new stream.Writable({objectMode: true});\n    outStream.data = '*' + Ucum.bracesMsg_ + '\\r\\n';\n    outStream._write = function (record, encoding, done) {\n      this.data += record;\n      done();\n    };\n\n    // When all the data has been written to the output stream, create a Blob\n    // object from the data string and an Object URL for the Blob.  Then pass\n    // the URL to the function that will actually save the blob to a file.\n    var blob = '';\n    var bUrl = null;\n    outStream.on('finish', function () {\n      blob = new Blob([this.data], {type: 'text/csv'});\n      bUrl = URL.createObjectURL(blob);\n      fileSaveFunction(bUrl);\n    });\n\n    // Start the data moving once the file reader is ready (has read in all\n    // the data).\n    var intSet = setInterval(pipeFunc, 10);\n    function pipeFunc() {\n      if (reader.readyState == FileReader.DONE) {\n        clearInterval(intSet);\n        str(reader.result)\n            .on('error', function (err){msgHandler('inputStream', err)})\n            .pipe(parser).on('error', function (err){msgHandler('parser', err)})\n            .pipe(transformer).on('error', function (err){msgHandler('transformer', err)})\n            .pipe(stringifier).on('error', function (err){msgHandler('stringifier', err)})\n            .pipe(outStream).on('error', function (err){msgHandler('outStream', err)});\n      }\n    }; // end pipeFunc\n  } // end validateFile\n\n} // end UcumFileValidator\n\n\n/**\n *  This function exists ONLY until the original UcumFileValidator constructor\n *  is called for the first time.  It's defined here in case getInstance\n *  is called before the constructor.   This calls the constructor.\n *\n *  The constructor redefines the getInstance function to return the\n *  singleton UcumFileValidator object.  This is based on the UnitTables singleton\n *  implementation; see more detail in the UnitTables constructor description.\n *\n *  @return the singleton UcumFileValidator object.\n */\nUcumFileValidator.getInstance = function(){\n  return new UcumFileValidator();\n}\n\n// Perform the first request for the validator object, to get the\n// getInstance method set.\nUcumFileValidator.getInstance();\n","module.exports={\"license\":\"The following data (prefixes and units) was generated by the UCUM LHC code from the UCUM data and selected LOINC combinations of UCUM units.  The license for the UCUM LHC code (demo and library code as well as the combined units) is located at https://github.com/lhncbc/ucum-lhc/blob/LICENSE.md.\",\"prefixes\":{\"config\":[\"code_\",\"ciCode_\",\"name_\",\"printSymbol_\",\"value_\",\"exp_\"],\"data\":[[\"E\",\"EX\",\"exa\",\"E\",1000000000000000000,\"18\"],[\"G\",\"GA\",\"giga\",\"G\",1000000000,\"9\"],[\"Gi\",\"GIB\",\"gibi\",\"Gi\",1073741824,null],[\"Ki\",\"KIB\",\"kibi\",\"Ki\",1024,null],[\"M\",\"MA\",\"mega\",\"M\",1000000,\"6\"],[\"Mi\",\"MIB\",\"mebi\",\"Mi\",1048576,null],[\"P\",\"PT\",\"peta\",\"P\",1000000000000000,\"15\"],[\"T\",\"TR\",\"tera\",\"T\",1000000000000,\"12\"],[\"Ti\",\"TIB\",\"tebi\",\"Ti\",1099511627776,null],[\"Y\",\"YA\",\"yotta\",\"Y\",1e+24,\"24\"],[\"Z\",\"ZA\",\"zetta\",\"Z\",1e+21,\"21\"],[\"a\",\"A\",\"atto\",\"a\",1e-18,\"-18\"],[\"c\",\"C\",\"centi\",\"c\",0.01,\"-2\"],[\"d\",\"D\",\"deci\",\"d\",0.1,\"-1\"],[\"da\",\"DA\",\"deka\",\"da\",10,\"1\"],[\"f\",\"F\",\"femto\",\"f\",1e-15,\"-15\"],[\"h\",\"H\",\"hecto\",\"h\",100,\"2\"],[\"k\",\"K\",\"kilo\",\"k\",1000,\"3\"],[\"m\",\"M\",\"milli\",\"m\",0.001,\"-3\"],[\"n\",\"N\",\"nano\",\"n\",1e-9,\"-9\"],[\"p\",\"P\",\"pico\",\"p\",1e-12,\"-12\"],[\"u\",\"U\",\"micro\",\"μ\",0.000001,\"-6\"],[\"y\",\"YO\",\"yocto\",\"y\",1.0000000000000001e-24,\"-24\"],[\"z\",\"ZO\",\"zepto\",\"z\",1e-21,\"-21\"]]},\"units\":{\"config\":[\"isBase_\",\"name_\",\"csCode_\",\"ciCode_\",\"property_\",\"magnitude_\",[\"dim_\",\"dimVec_\"],\"printSymbol_\",\"class_\",\"isMetric_\",\"variable_\",\"cnv_\",\"cnvPfx_\",\"isSpecial_\",\"isArbitrary_\",\"moleExp_\",\"synonyms_\",\"source_\",\"loincProperty_\",\"category_\",\"guidance_\",\"csUnitString_\",\"ciUnitString_\",\"baseFactorStr_\",\"baseFactor_\",\"defError_\"],\"data\":[[true,\"meter\",\"m\",\"M\",\"length\",1,[1,0,0,0,0,0,0],\"m\",null,false,\"L\",null,1,false,false,0,\"meters; metres; distance\",\"UCUM\",\"Len\",\"Clinical\",\"unit of length = 1.09361 yards\",null,null,null,null,false],[true,\"second - time\",\"s\",\"S\",\"time\",1,[0,1,0,0,0,0,0],\"s\",null,false,\"T\",null,1,false,false,0,\"seconds\",\"UCUM\",\"Time\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram\",\"g\",\"G\",\"mass\",1,[0,0,1,0,0,0,0],\"g\",null,false,\"M\",null,1,false,false,0,\"grams; gm\",\"UCUM\",\"Mass\",\"Clinical\",\"\",null,null,null,null,false],[true,\"radian\",\"rad\",\"RAD\",\"plane angle\",1,[0,0,0,1,0,0,0],\"rad\",null,false,\"A\",null,1,false,false,0,\"radians\",\"UCUM\",\"Angle\",\"Clinical\",\"unit of angular measure where 1 radian = 1/2π turn =  57.296 degrees. \",null,null,null,null,false],[true,\"degree Kelvin\",\"K\",\"K\",\"temperature\",1,[0,0,0,0,1,0,0],\"K\",null,false,\"C\",null,1,false,false,0,\"Kelvin; degrees\",\"UCUM\",\"Temp\",\"Clinical\",\"absolute, thermodynamic temperature scale \",null,null,null,null,false],[true,\"coulomb\",\"C\",\"C\",\"electric charge\",1,[0,0,0,0,0,1,0],\"C\",null,false,\"Q\",null,1,false,false,0,\"coulombs\",\"UCUM\",\"\",\"Clinical\",\"defined as amount of 1 electron charge = 6.2415093×10^18 e, and equivalent to 1 Ampere-second\",null,null,null,null,false],[true,\"candela\",\"cd\",\"CD\",\"luminous intensity\",1,[0,0,0,0,0,0,1],\"cd\",null,false,\"F\",null,1,false,false,0,\"candelas\",\"UCUM\",\"\",\"Clinical\",\"SI base unit of luminous intensity\",null,null,null,null,false],[false,\"the number ten for arbitrary powers\",\"10*\",\"10*\",\"number\",10,[0,0,0,0,0,0,0],\"10\",\"dimless\",false,null,null,1,false,false,0,\"10^; 10 to the arbitrary powers\",\"UCUM\",\"Num\",\"Clinical\",\"10* by itself is the same as 10, but users can add digits after the *. For example, 10*3 = 1000.\",\"1\",\"1\",\"10\",10,false],[false,\"the number ten for arbitrary powers\",\"10^\",\"10^\",\"number\",10,[0,0,0,0,0,0,0],\"10\",\"dimless\",false,null,null,1,false,false,0,\"10*; 10 to the arbitrary power\",\"UCUM\",\"Num\",\"Clinical\",\"10* by itself is the same as 10, but users can add digits after the *. For example, 10*3 = 1000.\",\"1\",\"1\",\"10\",10,false],[false,\"the number pi\",\"[pi]\",\"[PI]\",\"number\",3.141592653589793,[0,0,0,0,0,0,0],\"π\",\"dimless\",false,null,null,1,false,false,0,\"π\",\"UCUM\",\"\",\"Constant\",\"a mathematical constant; the ratio of a circle's circumference to its diameter ≈ 3.14159\",\"1\",\"1\",\"3.1415926535897932384626433832795028841971693993751058209749445923\",3.141592653589793,false],[false,\"\",\"%\",\"%\",\"fraction\",0.01,[0,0,0,0,0,0,0],\"%\",\"dimless\",false,null,null,1,false,false,0,\"percents\",\"UCUM\",\"FR; NFR; MFR; CFR; SFR Rto; etc. \",\"Clinical\",\"\",\"10*-2\",\"10*-2\",\"1\",1,false],[false,\"parts per thousand\",\"[ppth]\",\"[PPTH]\",\"fraction\",0.001,[0,0,0,0,0,0,0],\"ppth\",\"dimless\",false,null,null,1,false,false,0,\"ppth; 10^-3\",\"UCUM\",\"MCnc; MCnt\",\"Clinical\",\"[ppth] is often used in solution concentrations as 1 g/L or 1 g/kg.\\n\\nCan be ambigous and would be better if the metric units was used directly. \",\"10*-3\",\"10*-3\",\"1\",1,false],[false,\"parts per million\",\"[ppm]\",\"[PPM]\",\"fraction\",0.000001,[0,0,0,0,0,0,0],\"ppm\",\"dimless\",false,null,null,1,false,false,0,\"ppm; 10^-6\",\"UCUM\",\"MCnt; MCnc; SFr\",\"Clinical\",\"[ppm] is often used in solution concentrations as 1 mg/L  or 1 mg/kg. Also used to express mole fractions as 1 mmol/mol.\\n\\n[ppm] is also used in nuclear magnetic resonance (NMR) to represent chemical shift - the difference of a measured frequency in parts per million from the reference frequency.\\n\\nCan be ambigous and would be better if the metric units was used directly. \",\"10*-6\",\"10*-6\",\"1\",1,false],[false,\"parts per billion\",\"[ppb]\",\"[PPB]\",\"fraction\",1e-9,[0,0,0,0,0,0,0],\"ppb\",\"dimless\",false,null,null,1,false,false,0,\"ppb; 10^-9\",\"UCUM\",\"MCnt; MCnc; SFr\",\"Clinical\",\"[ppb] is often used in solution concentrations as 1 ug/L  or 1 ug/kg. Also used to express mole fractions as 1 umol/mol.\\n\\nCan be ambigous and would be better if the metric units was used directly. \",\"10*-9\",\"10*-9\",\"1\",1,false],[false,\"parts per trillion\",\"[pptr]\",\"[PPTR]\",\"fraction\",1e-12,[0,0,0,0,0,0,0],\"pptr\",\"dimless\",false,null,null,1,false,false,0,\"pptr; 10^-12\",\"UCUM\",\"MCnt; MCnc; SFr\",\"Clinical\",\"[pptr] is often used in solution concentrations as 1 ng/L or 1 ng/kg. Also used to express mole fractions as 1 nmol/mol.\\n\\nCan be ambigous and would be better if the metric units was used directly. \",\"10*-12\",\"10*-12\",\"1\",1,false],[false,\"mole\",\"mol\",\"MOL\",\"amount of substance\",6.0221367e+23,[0,0,0,0,0,0,0],\"mol\",\"si\",true,null,null,1,false,false,1,\"moles\",\"UCUM\",\"Sub\",\"Clinical\",\"Measure the number of molecules \",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"steradian - solid angle\",\"sr\",\"SR\",\"solid angle\",1,[0,0,0,2,0,0,0],\"sr\",\"si\",true,null,null,1,false,false,0,\"square radian; rad2; rad^2\",\"UCUM\",\"Angle\",\"Clinical\",\"unit of solid angle in three-dimensional geometry analagous to radian; used in photometry which measures the perceived brightness of object by human eye (e.g. radiant intensity = watt/steradian)\",\"rad2\",\"RAD2\",\"1\",1,false],[false,\"hertz\",\"Hz\",\"HZ\",\"frequency\",1,[0,-1,0,0,0,0,0],\"Hz\",\"si\",true,null,null,1,false,false,0,\"Herz; frequency; frequencies\",\"UCUM\",\"Freq; Num\",\"Clinical\",\"equal to one cycle per second\",\"s-1\",\"S-1\",\"1\",1,false],[false,\"newton\",\"N\",\"N\",\"force\",1000,[1,-2,1,0,0,0,0],\"N\",\"si\",true,null,null,1,false,false,0,\"Newtons\",\"UCUM\",\"Force\",\"Clinical\",\"unit of force with base units kg.m/s2\",\"kg.m/s2\",\"KG.M/S2\",\"1\",1,false],[false,\"pascal\",\"Pa\",\"PAL\",\"pressure\",1000,[-1,-2,1,0,0,0,0],\"Pa\",\"si\",true,null,null,1,false,false,0,\"pascals\",\"UCUM\",\"Pres\",\"Clinical\",\"standard unit of pressure equal to 1 newton per square meter (N/m2)\",\"N/m2\",\"N/M2\",\"1\",1,false],[false,\"joule\",\"J\",\"J\",\"energy\",1000,[2,-2,1,0,0,0,0],\"J\",\"si\",true,null,null,1,false,false,0,\"joules\",\"UCUM\",\"Enrg\",\"Clinical\",\"unit of energy defined as the work required to move an object 1 m with a force of 1 N (N.m) or an electric charge of 1 C through 1 V (C.V), or to produce 1 W for 1 s (W.s) \",\"N.m\",\"N.M\",\"1\",1,false],[false,\"watt\",\"W\",\"W\",\"power\",1000,[2,-3,1,0,0,0,0],\"W\",\"si\",true,null,null,1,false,false,0,\"watts\",\"UCUM\",\"EngRat\",\"Clinical\",\"unit of power equal to 1 Joule per second (J/s) =  kg⋅m2⋅s−3\",\"J/s\",\"J/S\",\"1\",1,false],[false,\"Ampere\",\"A\",\"A\",\"electric current\",1,[0,-1,0,0,0,1,0],\"A\",\"si\",true,null,null,1,false,false,0,\"Amperes\",\"UCUM\",\"ElpotRat\",\"Clinical\",\"unit of electric current equal to flow rate of electrons equal to 16.2415×10^18 elementary charges moving past a boundary in one second or 1 Coulomb/second\",\"C/s\",\"C/S\",\"1\",1,false],[false,\"volt\",\"V\",\"V\",\"electric potential\",1000,[2,-2,1,0,0,-1,0],\"V\",\"si\",true,null,null,1,false,false,0,\"volts\",\"UCUM\",\"Elpot\",\"Clinical\",\"unit of electric potential (voltage) = 1 Joule per Coulomb (J/C)\",\"J/C\",\"J/C\",\"1\",1,false],[false,\"farad\",\"F\",\"F\",\"electric capacitance\",0.001,[-2,2,-1,0,0,2,0],\"F\",\"si\",true,null,null,1,false,false,0,\"farads; electric capacitance\",\"UCUM\",\"\",\"Clinical\",\"CGS unit of electric capacitance with base units C/V (Coulomb per Volt)\",\"C/V\",\"C/V\",\"1\",1,false],[false,\"ohm\",\"Ohm\",\"OHM\",\"electric resistance\",1000,[2,-1,1,0,0,-2,0],\"Ω\",\"si\",true,null,null,1,false,false,0,\"Ω; resistance; ohms\",\"UCUM\",\"\",\"Clinical\",\"unit of electrical resistance with units of Volt per Ampere\",\"V/A\",\"V/A\",\"1\",1,false],[false,\"siemens\",\"S\",\"SIE\",\"electric conductance\",0.001,[-2,1,-1,0,0,2,0],\"S\",\"si\",true,null,null,1,false,false,0,\"Reciprocal ohm; mho; Ω−1; conductance\",\"UCUM\",\"\",\"Clinical\",\"unit of electric conductance (the inverse of electrical resistance) equal to ohm^-1\",\"Ohm-1\",\"OHM-1\",\"1\",1,false],[false,\"weber\",\"Wb\",\"WB\",\"magnetic flux\",1000,[2,-1,1,0,0,-1,0],\"Wb\",\"si\",true,null,null,1,false,false,0,\"magnetic flux; webers\",\"UCUM\",\"\",\"Clinical\",\"unit of magnetic flux equal to Volt second\",\"V.s\",\"V.S\",\"1\",1,false],[false,\"degree Celsius\",\"Cel\",\"CEL\",\"temperature\",1,[0,0,0,0,1,0,0],\"°C\",\"si\",true,null,\"Cel\",1,true,false,0,\"°C; degrees\",\"UCUM\",\"Temp\",\"Clinical\",\"\",\"K\",null,null,1,false],[false,\"tesla\",\"T\",\"T\",\"magnetic flux density\",1000,[0,-1,1,0,0,-1,0],\"T\",\"si\",true,null,null,1,false,false,0,\"Teslas; magnetic field\",\"UCUM\",\"\",\"Clinical\",\"SI unit of magnetic field strength for magnetic field B equal to 1 Weber/square meter =  1 kg/(s2*A)\",\"Wb/m2\",\"WB/M2\",\"1\",1,false],[false,\"henry\",\"H\",\"H\",\"inductance\",1000,[2,0,1,0,0,-2,0],\"H\",\"si\",true,null,null,1,false,false,0,\"henries; inductance\",\"UCUM\",\"\",\"Clinical\",\"unit of electrical inductance; usually expressed in millihenrys (mH) or microhenrys (uH).\",\"Wb/A\",\"WB/A\",\"1\",1,false],[false,\"lumen\",\"lm\",\"LM\",\"luminous flux\",1,[0,0,0,2,0,0,1],\"lm\",\"si\",true,null,null,1,false,false,0,\"luminous flux; lumens\",\"UCUM\",\"\",\"Clinical\",\"unit of luminous flux defined as 1 lm = 1 cd⋅sr (candela times sphere)\",\"cd.sr\",\"CD.SR\",\"1\",1,false],[false,\"lux\",\"lx\",\"LX\",\"illuminance\",1,[-2,0,0,2,0,0,1],\"lx\",\"si\",true,null,null,1,false,false,0,\"illuminance; luxes\",\"UCUM\",\"\",\"Clinical\",\"unit of illuminance equal to one lumen per square meter. \",\"lm/m2\",\"LM/M2\",\"1\",1,false],[false,\"becquerel\",\"Bq\",\"BQ\",\"radioactivity\",1,[0,-1,0,0,0,0,0],\"Bq\",\"si\",true,null,null,1,false,false,0,\"activity; radiation; becquerels\",\"UCUM\",\"\",\"Clinical\",\"measure of the atomic radiation rate with units s^-1\",\"s-1\",\"S-1\",\"1\",1,false],[false,\"gray\",\"Gy\",\"GY\",\"energy dose\",1,[2,-2,0,0,0,0,0],\"Gy\",\"si\",true,null,null,1,false,false,0,\"absorbed doses; ionizing radiation doses; kerma; grays\",\"UCUM\",\"EngCnt\",\"Clinical\",\"unit of ionizing radiation dose with base units of 1 joule of radiation energy per kilogram of matter\",\"J/kg\",\"J/KG\",\"1\",1,false],[false,\"sievert\",\"Sv\",\"SV\",\"dose equivalent\",1,[2,-2,0,0,0,0,0],\"Sv\",\"si\",true,null,null,1,false,false,0,\"sieverts; radiation dose quantities; equivalent doses; effective dose; operational dose; committed dose\",\"UCUM\",\"\",\"Clinical\",\"SI unit for radiation dose equivalent equal to 1 Joule/kilogram.\",\"J/kg\",\"J/KG\",\"1\",1,false],[false,\"degree - plane angle\",\"deg\",\"DEG\",\"plane angle\",0.017453292519943295,[0,0,0,1,0,0,0],\"°\",\"iso1000\",false,null,null,1,false,false,0,\"°; degree of arc; arc degree; arcdegree; angle\",\"UCUM\",\"Angle\",\"Clinical\",\"one degree is equivalent to π/180 radians.\",\"[pi].rad/360\",\"[PI].RAD/360\",\"2\",2,false],[false,\"gon\",\"gon\",\"GON\",\"plane angle\",0.015707963267948967,[0,0,0,1,0,0,0],\"□<sup>g</sup>\",\"iso1000\",false,null,null,1,false,false,0,\"gon (grade); gons\",\"UCUM\",\"Angle\",\"Nonclinical\",\"unit of plane angle measurement equal to 1/400 circle\",\"deg\",\"DEG\",\"0.9\",0.9,false],[false,\"arc minute\",\"'\",\"'\",\"plane angle\",0.0002908882086657216,[0,0,0,1,0,0,0],\"'\",\"iso1000\",false,null,null,1,false,false,0,\"arcminutes; arcmin; arc minutes; arc mins\",\"UCUM\",\"Angle\",\"Clinical\",\"equal to 1/60 degree; used in optometry and opthamology (e.g. visual acuity tests)\",\"deg/60\",\"DEG/60\",\"1\",1,false],[false,\"arc second\",\"''\",\"''\",\"plane angle\",0.00000484813681109536,[0,0,0,1,0,0,0],\"''\",\"iso1000\",false,null,null,1,false,false,0,\"arcseconds; arcsecs\",\"UCUM\",\"Angle\",\"Clinical\",\"equal to 1/60 arcminute = 1/3600 degree; used in optometry and opthamology (e.g. visual acuity tests)\",\"'/60\",\"'/60\",\"1\",1,false],[false,\"Liters\",\"l\",\"L\",\"volume\",0.001,[3,0,0,0,0,0,0],\"l\",\"iso1000\",true,null,null,1,false,false,0,\"cubic decimeters; decimeters cubed; decimetres; dm3; dm^3; litres; liters, LT \",\"UCUM\",\"Vol\",\"Clinical\",\"Because lower case \\\"l\\\" can be read as the number \\\"1\\\", though this is a valid UCUM units. UCUM strongly reccomends using  \\\"L\\\"\",\"dm3\",\"DM3\",\"1\",1,false],[false,\"Liters\",\"L\",\"L\",\"volume\",0.001,[3,0,0,0,0,0,0],\"L\",\"iso1000\",true,null,null,1,false,false,0,\"cubic decimeters; decimeters cubed; decimetres; dm3; dm^3; litres; liters, LT \",\"UCUM\",\"Vol\",\"Clinical\",\"Because lower case \\\"l\\\" can be read as the number \\\"1\\\", though this is a valid UCUM units. UCUM strongly reccomends using  \\\"L\\\"\",\"l\",null,\"1\",1,false],[false,\"are\",\"ar\",\"AR\",\"area\",100,[2,0,0,0,0,0,0],\"a\",\"iso1000\",true,null,null,1,false,false,0,\"100 m2; 100 m^2; 100 square meter; meters squared; metres\",\"UCUM\",\"Area\",\"Clinical\",\"metric base unit for area defined as 100 m^2\",\"m2\",\"M2\",\"100\",100,false],[false,\"minute\",\"min\",\"MIN\",\"time\",60,[0,1,0,0,0,0,0],\"min\",\"iso1000\",false,null,null,1,false,false,0,\"minutes\",\"UCUM\",\"Time\",\"Clinical\",\"\",\"s\",\"S\",\"60\",60,false],[false,\"hour\",\"h\",\"HR\",\"time\",3600,[0,1,0,0,0,0,0],\"h\",\"iso1000\",false,null,null,1,false,false,0,\"hours; hrs; age\",\"UCUM\",\"Time\",\"Clinical\",\"\",\"min\",\"MIN\",\"60\",60,false],[false,\"day\",\"d\",\"D\",\"time\",86400,[0,1,0,0,0,0,0],\"d\",\"iso1000\",false,null,null,1,false,false,0,\"days; age; dy; 24 hours; 24 hrs\",\"UCUM\",\"Time\",\"Clinical\",\"\",\"h\",\"HR\",\"24\",24,false],[false,\"tropical year\",\"a_t\",\"ANN_T\",\"time\",31556925.216,[0,1,0,0,0,0,0],\"a<sub>t</sub>\",\"iso1000\",false,null,null,1,false,false,0,\"solar years; a tropical; years\",\"UCUM\",\"Time\",\"Clinical\",\"has an average of 365.242181 days but is constantly changing.\",\"d\",\"D\",\"365.24219\",365.24219,false],[false,\"mean Julian year\",\"a_j\",\"ANN_J\",\"time\",31557600,[0,1,0,0,0,0,0],\"a<sub>j</sub>\",\"iso1000\",false,null,null,1,false,false,0,\"mean Julian yr; a julian; years\",\"UCUM\",\"Time\",\"Clinical\",\"has an average of 365.25 days, and in everyday use, has been replaced by the Gregorian year. However, this unit is used in astronomy to calculate light year. \",\"d\",\"D\",\"365.25\",365.25,false],[false,\"mean Gregorian year\",\"a_g\",\"ANN_G\",\"time\",31556952,[0,1,0,0,0,0,0],\"a<sub>g</sub>\",\"iso1000\",false,null,null,1,false,false,0,\"mean Gregorian yr; a gregorian; years\",\"UCUM\",\"Time\",\"Clinical\",\"has an average of 365.2425 days and is the most internationally used civil calendar.\",\"d\",\"D\",\"365.2425\",365.2425,false],[false,\"year\",\"a\",\"ANN\",\"time\",31557600,[0,1,0,0,0,0,0],\"a\",\"iso1000\",false,null,null,1,false,false,0,\"years; a; yr, yrs; annum\",\"UCUM\",\"Time\",\"Clinical\",\"\",\"a_j\",\"ANN_J\",\"1\",1,false],[false,\"week\",\"wk\",\"WK\",\"time\",604800,[0,1,0,0,0,0,0],\"wk\",\"iso1000\",false,null,null,1,false,false,0,\"weeks; wks\",\"UCUM\",\"Time\",\"Clinical\",\"\",\"d\",\"D\",\"7\",7,false],[false,\"synodal month\",\"mo_s\",\"MO_S\",\"time\",2551442.976,[0,1,0,0,0,0,0],\"mo<sub>s</sub>\",\"iso1000\",false,null,null,1,false,false,0,\"Moon; synodic month; lunar month; mo-s; mo s; months; moons\",\"UCUM\",\"Time\",\"Nonclinical\",\"has an average of 29.53 days per month, unit used in astronomy\",\"d\",\"D\",\"29.53059\",29.53059,false],[false,\"mean Julian month\",\"mo_j\",\"MO_J\",\"time\",2629800,[0,1,0,0,0,0,0],\"mo<sub>j</sub>\",\"iso1000\",false,null,null,1,false,false,0,\"mo-julian; mo Julian; months\",\"UCUM\",\"Time\",\"Clinical\",\"has an average of 30.435 days per month\",\"a_j/12\",\"ANN_J/12\",\"1\",1,false],[false,\"mean Gregorian month\",\"mo_g\",\"MO_G\",\"time\",2629746,[0,1,0,0,0,0,0],\"mo<sub>g</sub>\",\"iso1000\",false,null,null,1,false,false,0,\"months; month-gregorian; mo-gregorian\",\"UCUM\",\"Time\",\"Clinical\",\"has an average 30.436875 days per month and is from the most internationally used civil calendar.\",\"a_g/12\",\"ANN_G/12\",\"1\",1,false],[false,\"month\",\"mo\",\"MO\",\"time\",2629800,[0,1,0,0,0,0,0],\"mo\",\"iso1000\",false,null,null,1,false,false,0,\"months; duration\",\"UCUM\",\"Time\",\"Clinical\",\"based on Julian calendar which has an average of 30.435 days per month (this unit is used in astronomy but not in everyday life - see mo_g)\",\"mo_j\",\"MO_J\",\"1\",1,false],[false,\"metric ton\",\"t\",\"TNE\",\"mass\",1000000,[0,0,1,0,0,0,0],\"t\",\"iso1000\",true,null,null,1,false,false,0,\"tonnes; megagrams; tons\",\"UCUM\",\"Mass\",\"Nonclinical\",\"equal to 1000 kg used in the US (recognized by NIST as metric ton), and internationally (recognized as tonne)\",\"kg\",\"KG\",\"1e3\",1000,false],[false,\"bar\",\"bar\",\"BAR\",\"pressure\",100000000,[-1,-2,1,0,0,0,0],\"bar\",\"iso1000\",true,null,null,1,false,false,0,\"bars\",\"UCUM\",\"Pres\",\"Nonclinical\",\"unit of pressure equal to 10^5 Pascals, primarily used by meteorologists and in weather forecasting\",\"Pa\",\"PAL\",\"1e5\",100000,false],[false,\"unified atomic mass unit\",\"u\",\"AMU\",\"mass\",1.6605402e-24,[0,0,1,0,0,0,0],\"u\",\"iso1000\",true,null,null,1,false,false,0,\"unified atomic mass units; amu; Dalton; Da\",\"UCUM\",\"Mass\",\"Clinical\",\"the mass of 1/12 of an unbound Carbon-12 atom nuclide equal to 1.6606x10^-27 kg \",\"g\",\"G\",\"1.6605402e-24\",1.6605402e-24,false],[false,\"astronomic unit\",\"AU\",\"ASU\",\"length\",149597870691,[1,0,0,0,0,0,0],\"AU\",\"iso1000\",false,null,null,1,false,false,0,\"AU; units\",\"UCUM\",\"Len\",\"Clinical\",\"unit of length used in astronomy for measuring distance in Solar system\",\"Mm\",\"MAM\",\"149597.870691\",149597.870691,false],[false,\"parsec\",\"pc\",\"PRS\",\"length\",30856780000000000,[1,0,0,0,0,0,0],\"pc\",\"iso1000\",true,null,null,1,false,false,0,\"parsecs\",\"UCUM\",\"Len\",\"Clinical\",\"unit of length equal to 3.26 light years, nad used to measure large distances to objects outside our Solar System\",\"m\",\"M\",\"3.085678e16\",30856780000000000,false],[false,\"velocity of light in a vacuum\",\"[c]\",\"[C]\",\"velocity\",299792458,[1,-1,0,0,0,0,0],\"<i>c</i>\",\"const\",true,null,null,1,false,false,0,\"speed of light\",\"UCUM\",\"Vel\",\"Constant\",\"equal to 299792458 m/s (approximately 3 x 10^8 m/s)\",\"m/s\",\"M/S\",\"299792458\",299792458,false],[false,\"Planck constant\",\"[h]\",\"[H]\",\"action\",6.6260755e-31,[2,-1,1,0,0,0,0],\"<i>h</i>\",\"const\",true,null,null,1,false,false,0,\"Planck's constant\",\"UCUM\",\"\",\"Constant\",\"constant = 6.62607004 × 10-34 m2.kg/s; defined as quantum of action\",\"J.s\",\"J.S\",\"6.6260755e-34\",6.6260755e-34,false],[false,\"Boltzmann constant\",\"[k]\",\"[K]\",\"(unclassified)\",1.380658e-20,[2,-2,1,0,-1,0,0],\"<i>k</i>\",\"const\",true,null,null,1,false,false,0,\"k; kB\",\"UCUM\",\"\",\"Constant\",\"physical constant relating energy at the individual particle level with temperature = 1.38064852 ×10^−23 J/K\",\"J/K\",\"J/K\",\"1.380658e-23\",1.380658e-23,false],[false,\"permittivity of vacuum - electric\",\"[eps_0]\",\"[EPS_0]\",\"electric permittivity\",8.854187817000001e-15,[-3,2,-1,0,0,2,0],\"<i>ε<sub><r>0</r></sub></i>\",\"const\",true,null,null,1,false,false,0,\"ε0; Electric Constant; vacuum permittivity; permittivity of free space \",\"UCUM\",\"\",\"Constant\",\"approximately equal to 8.854 × 10^−12 F/m (farads per meter)\",\"F/m\",\"F/M\",\"8.854187817e-12\",8.854187817e-12,false],[false,\"permeability of vacuum - magnetic\",\"[mu_0]\",\"[MU_0]\",\"magnetic permeability\",0.0012566370614359172,[1,0,1,0,0,-2,0],\"<i>μ<sub><r>0</r></sub></i>\",\"const\",true,null,null,1,false,false,0,\"μ0; vacuum permeability; permeability of free space; magnetic constant\",\"UCUM\",\"\",\"Constant\",\"equal to 4π×10^−7 N/A2 (Newtons per square ampere) ≈ 1.2566×10^−6 H/m (Henry per meter)\",\"N/A2\",\"4.[PI].10*-7.N/A2\",\"1\",0.0000012566370614359173,false],[false,\"elementary charge\",\"[e]\",\"[E]\",\"electric charge\",1.60217733e-19,[0,0,0,0,0,1,0],\"<i>e</i>\",\"const\",true,null,null,1,false,false,0,\"e; q; electric charges\",\"UCUM\",\"\",\"Constant\",\"the magnitude of the electric charge carried by a single electron or proton ≈ 1.60217×10^-19 Coulombs\",\"C\",\"C\",\"1.60217733e-19\",1.60217733e-19,false],[false,\"electronvolt\",\"eV\",\"EV\",\"energy\",1.60217733e-16,[2,-2,1,0,0,0,0],\"eV\",\"iso1000\",true,null,null,1,false,false,0,\"Electron Volts; electronvolts\",\"UCUM\",\"Eng\",\"Clinical\",\"unit of kinetic energy = 1 V * 1.602×10^−19 C = 1.6×10−19 Joules\",\"[e].V\",\"[E].V\",\"1\",1,false],[false,\"electron mass\",\"[m_e]\",\"[M_E]\",\"mass\",9.1093897e-28,[0,0,1,0,0,0,0],\"<i>m<sub><r>e</r></sub></i>\",\"const\",true,null,null,1,false,false,0,\"electron rest mass; me\",\"UCUM\",\"Mass\",\"Constant\",\"approximately equal to 9.10938356 × 10-31 kg; defined as the mass of a stationary electron\",\"g\",\"g\",\"9.1093897e-28\",9.1093897e-28,false],[false,\"proton mass\",\"[m_p]\",\"[M_P]\",\"mass\",1.6726231e-24,[0,0,1,0,0,0,0],\"<i>m<sub><r>p</r></sub></i>\",\"const\",true,null,null,1,false,false,0,\"mp; masses\",\"UCUM\",\"Mass\",\"Constant\",\"approximately equal to 1.672622×10−27 kg\",\"g\",\"g\",\"1.6726231e-24\",1.6726231e-24,false],[false,\"Newtonian constant of gravitation\",\"[G]\",\"[GC]\",\"(unclassified)\",6.67259e-14,[3,-2,-1,0,0,0,0],\"<i>G</i>\",\"const\",true,null,null,1,false,false,0,\"G; gravitational constant; Newton's constant\",\"UCUM\",\"\",\"Constant\",\"gravitational constant = 6.674×10−11 N⋅m2/kg2\",\"m3.kg-1.s-2\",\"M3.KG-1.S-2\",\"6.67259e-11\",6.67259e-11,false],[false,\"standard acceleration of free fall\",\"[g]\",\"[G]\",\"acceleration\",9.80665,[1,-2,0,0,0,0,0],\"<i>g<sub>n</sub></i>\",\"const\",true,null,null,1,false,false,0,\"standard gravity; g; ɡ0; ɡn\",\"UCUM\",\"Accel\",\"Constant\",\"defined by standard = 9.80665 m/s2\",\"m/s2\",\"M/S2\",\"980665e-5\",9.80665,false],[false,\"Torr\",\"Torr\",\"Torr\",\"pressure\",133322,[-1,-2,1,0,0,0,0],\"Torr\",\"const\",false,null,null,1,false,false,0,\"torrs\",\"UCUM\",\"Pres\",\"Clinical\",\"1 torr = 1 mmHg; unit used to measure blood pressure\",\"Pa\",\"PAL\",\"133.322\",133.322,false],[false,\"standard atmosphere\",\"atm\",\"ATM\",\"pressure\",101325000,[-1,-2,1,0,0,0,0],\"atm\",\"const\",false,null,null,1,false,false,0,\"reference pressure; atmos; std atmosphere\",\"UCUM\",\"Pres\",\"Clinical\",\"defined as being precisely equal to 101,325 Pa\",\"Pa\",\"PAL\",\"101325\",101325,false],[false,\"light-year\",\"[ly]\",\"[LY]\",\"length\",9460730472580800,[1,0,0,0,0,0,0],\"l.y.\",\"const\",true,null,null,1,false,false,0,\"light years; ly\",\"UCUM\",\"Len\",\"Constant\",\"unit of astronomal distance = 5.88×10^12 mi\",\"[c].a_j\",\"[C].ANN_J\",\"1\",1,false],[false,\"gram-force\",\"gf\",\"GF\",\"force\",9.80665,[1,-2,1,0,0,0,0],\"gf\",\"const\",true,null,null,1,false,false,0,\"Newtons; gram forces\",\"UCUM\",\"Force\",\"Clinical\",\"May be specific to unit related to cardiac output\",\"g.[g]\",\"G.[G]\",\"1\",1,false],[false,\"Kayser\",\"Ky\",\"KY\",\"lineic number\",100,[-1,0,0,0,0,0,0],\"K\",\"cgs\",true,null,null,1,false,false,0,\"wavenumbers; kaysers\",\"UCUM\",\"InvLen\",\"Clinical\",\"unit of wavelength equal to cm^-1\",\"cm-1\",\"CM-1\",\"1\",1,false],[false,\"Gal\",\"Gal\",\"GL\",\"acceleration\",0.01,[1,-2,0,0,0,0,0],\"Gal\",\"cgs\",true,null,null,1,false,false,0,\"galileos; Gals\",\"UCUM\",\"Accel\",\"Clinical\",\"unit of acceleration used in gravimetry; equivalent to cm/s2 \",\"cm/s2\",\"CM/S2\",\"1\",1,false],[false,\"dyne\",\"dyn\",\"DYN\",\"force\",0.01,[1,-2,1,0,0,0,0],\"dyn\",\"cgs\",true,null,null,1,false,false,0,\"dynes\",\"UCUM\",\"Force\",\"Clinical\",\"unit of force equal to 10^-5 Newtons\",\"g.cm/s2\",\"G.CM/S2\",\"1\",1,false],[false,\"erg\",\"erg\",\"ERG\",\"energy\",0.0001,[2,-2,1,0,0,0,0],\"erg\",\"cgs\",true,null,null,1,false,false,0,\"10^-7 Joules, 10-7 Joules; 100 nJ; 100 nanoJoules; 1 dyne cm; 1 g.cm2/s2\",\"UCUM\",\"Eng\",\"Clinical\",\"unit of energy = 1 dyne centimeter = 10^-7 Joules\",\"dyn.cm\",\"DYN.CM\",\"1\",1,false],[false,\"Poise\",\"P\",\"P\",\"dynamic viscosity\",100,[-1,-1,1,0,0,0,0],\"P\",\"cgs\",true,null,null,1,false,false,0,\"dynamic viscosity; poises\",\"UCUM\",\"Visc\",\"Clinical\",\"unit of dynamic viscosity where 1 Poise = 1/10 Pascal second\",\"dyn.s/cm2\",\"DYN.S/CM2\",\"1\",1,false],[false,\"Biot\",\"Bi\",\"BI\",\"electric current\",10,[0,-1,0,0,0,1,0],\"Bi\",\"cgs\",true,null,null,1,false,false,0,\"Bi; abamperes; abA\",\"UCUM\",\"ElpotRat\",\"Clinical\",\"equal to 10 amperes\",\"A\",\"A\",\"10\",10,false],[false,\"Stokes\",\"St\",\"ST\",\"kinematic viscosity\",0.0001,[2,-1,0,0,0,0,0],\"St\",\"cgs\",true,null,null,1,false,false,0,\"kinematic viscosity\",\"UCUM\",\"Visc\",\"Clinical\",\"unit of kimematic viscosity with units cm2/s\",\"cm2/s\",\"CM2/S\",\"1\",1,false],[false,\"Maxwell\",\"Mx\",\"MX\",\"flux of magnetic induction\",0.00001,[2,-1,1,0,0,-1,0],\"Mx\",\"cgs\",true,null,null,1,false,false,0,\"magnetix flux; Maxwells\",\"UCUM\",\"\",\"Clinical\",\"unit of magnetic flux\",\"Wb\",\"WB\",\"1e-8\",1e-8,false],[false,\"Gauss\",\"G\",\"GS\",\"magnetic flux density\",0.1,[0,-1,1,0,0,-1,0],\"Gs\",\"cgs\",true,null,null,1,false,false,0,\"magnetic fields; magnetic flux density; induction; B\",\"UCUM\",\"magnetic\",\"Clinical\",\"CGS unit of magnetic flux density, known as magnetic field B; defined as one maxwell unit per square centimeter (see Oersted for CGS unit for H field)\",\"T\",\"T\",\"1e-4\",0.0001,false],[false,\"Oersted\",\"Oe\",\"OE\",\"magnetic field intensity\",79.57747154594767,[-1,-1,0,0,0,1,0],\"Oe\",\"cgs\",true,null,null,1,false,false,0,\"H magnetic B field; Oersteds\",\"UCUM\",\"\",\"Clinical\",\"CGS unit of the auxiliary magnetic field H defined as 1 dyne per unit pole = 1000/4π amperes per meter (see Gauss for CGS unit for B field)\",\"A/m\",\"/[PI].A/M\",\"250\",79.57747154594767,false],[false,\"Gilbert\",\"Gb\",\"GB\",\"magnetic tension\",0.7957747154594768,[0,-1,0,0,0,1,0],\"Gb\",\"cgs\",true,null,null,1,false,false,0,\"Gi; magnetomotive force; Gilberts\",\"UCUM\",\"\",\"Clinical\",\"unit of magnetomotive force (magnetic potential)\",\"Oe.cm\",\"OE.CM\",\"1\",1,false],[false,\"stilb\",\"sb\",\"SB\",\"lum. intensity density\",10000,[-2,0,0,0,0,0,1],\"sb\",\"cgs\",true,null,null,1,false,false,0,\"stilbs\",\"UCUM\",\"\",\"Obsolete\",\"unit of luminance; equal to and replaced by unit candela per square centimeter (cd/cm2)\",\"cd/cm2\",\"CD/CM2\",\"1\",1,false],[false,\"Lambert\",\"Lmb\",\"LMB\",\"brightness\",3183.098861837907,[-2,0,0,0,0,0,1],\"L\",\"cgs\",true,null,null,1,false,false,0,\"luminance; lamberts\",\"UCUM\",\"\",\"Clinical\",\"unit of luminance defined as 1 lambert = 1/ π candela per square meter\",\"cd/cm2/[pi]\",\"CD/CM2/[PI]\",\"1\",1,false],[false,\"phot\",\"ph\",\"PHT\",\"illuminance\",0.0001,[-2,0,0,2,0,0,1],\"ph\",\"cgs\",true,null,null,1,false,false,0,\"phots\",\"UCUM\",\"\",\"Clinical\",\"CGS photometric unit of illuminance, or luminous flux through an area equal to 10000 lumens per square meter = 10000 lux\",\"lx\",\"LX\",\"1e-4\",0.0001,false],[false,\"Curie\",\"Ci\",\"CI\",\"radioactivity\",37000000000,[0,-1,0,0,0,0,0],\"Ci\",\"cgs\",true,null,null,1,false,false,0,\"curies\",\"UCUM\",\"\",\"Obsolete\",\"unit for measuring atomic disintegration rate; replaced by the Bequerel (Bq) unit\",\"Bq\",\"BQ\",\"37e9\",37000000000,false],[false,\"Roentgen\",\"R\",\"ROE\",\"ion dose\",2.58e-7,[0,0,-1,0,0,1,0],\"R\",\"cgs\",true,null,null,1,false,false,0,\"röntgen; Roentgens\",\"UCUM\",\"\",\"Clinical\",\"unit of exposure of X-rays and gamma rays in air; unit used primarily in the US but strongly discouraged by NIST\",\"C/kg\",\"C/KG\",\"2.58e-4\",0.000258,false],[false,\"radiation absorbed dose\",\"RAD\",\"[RAD]\",\"energy dose\",0.01,[2,-2,0,0,0,0,0],\"RAD\",\"cgs\",true,null,null,1,false,false,0,\"doses\",\"UCUM\",\"\",\"Clinical\",\"unit of radiation absorbed dose used primarily in the US with base units 100 ergs per gram of material. Also see the SI unit Gray (Gy).\",\"erg/g\",\"ERG/G\",\"100\",100,false],[false,\"radiation equivalent man\",\"REM\",\"[REM]\",\"dose equivalent\",0.01,[2,-2,0,0,0,0,0],\"REM\",\"cgs\",true,null,null,1,false,false,0,\"Roentgen Equivalent in Man; rems; dose equivalents\",\"UCUM\",\"\",\"Clinical\",\"unit of equivalent dose which measures the effect of radiation on humans equal to 0.01 sievert. Used primarily in the US. Also see SI unit Sievert (Sv)\",\"RAD\",\"[RAD]\",\"1\",1,false],[false,\"inch\",\"[in_i]\",\"[IN_I]\",\"length\",0.025400000000000002,[1,0,0,0,0,0,0],\"in\",\"intcust\",false,null,null,1,false,false,0,\"inches; in; international inch; body height\",\"UCUM\",\"Len\",\"Clinical\",\"standard unit for inch in the US and internationally\",\"cm\",\"CM\",\"254e-2\",2.54,false],[false,\"foot\",\"[ft_i]\",\"[FT_I]\",\"length\",0.3048,[1,0,0,0,0,0,0],\"ft\",\"intcust\",false,null,null,1,false,false,0,\"ft; fts; foot; international foot; feet; international feet; height\",\"UCUM\",\"Len\",\"Clinical\",\"unit used in the US and internationally\",\"[in_i]\",\"[IN_I]\",\"12\",12,false],[false,\"yard\",\"[yd_i]\",\"[YD_I]\",\"length\",0.9144000000000001,[1,0,0,0,0,0,0],\"yd\",\"intcust\",false,null,null,1,false,false,0,\"international yards; yds; distance\",\"UCUM\",\"Len\",\"Clinical\",\"standard unit used in the US and internationally\",\"[ft_i]\",\"[FT_I]\",\"3\",3,false],[false,\"mile\",\"[mi_i]\",\"[MI_I]\",\"length\",1609.344,[1,0,0,0,0,0,0],\"mi\",\"intcust\",false,null,null,1,false,false,0,\"international miles; mi I; statute mile\",\"UCUM\",\"Len\",\"Clinical\",\"standard unit used in the US and internationally\",\"[ft_i]\",\"[FT_I]\",\"5280\",5280,false],[false,\"fathom\",\"[fth_i]\",\"[FTH_I]\",\"depth of water\",1.8288000000000002,[1,0,0,0,0,0,0],\"fth\",\"intcust\",false,null,null,1,false,false,0,\"international fathoms\",\"UCUM\",\"Len\",\"Nonclinical\",\"unit used in the US and internationally to measure depth of water; same length as the US fathom\",\"[ft_i]\",\"[FT_I]\",\"6\",6,false],[false,\"nautical mile\",\"[nmi_i]\",\"[NMI_I]\",\"length\",1852,[1,0,0,0,0,0,0],\"n.mi\",\"intcust\",false,null,null,1,false,false,0,\"nautical mile; nautical miles; international nautical mile; international nautical miles; nm; n.m.; nmi\",\"UCUM\",\"Len\",\"Nonclinical\",\"standard unit used in the US and internationally\",\"m\",\"M\",\"1852\",1852,false],[false,\"knot\",\"[kn_i]\",\"[KN_I]\",\"velocity\",0.5144444444444445,[1,-1,0,0,0,0,0],\"knot\",\"intcust\",false,null,null,1,false,false,0,\"kn; kt; international knots\",\"UCUM\",\"Vel\",\"Nonclinical\",\"defined as equal to one nautical mile (1.852 km) per hour\",\"[nmi_i]/h\",\"[NMI_I]/H\",\"1\",1,false],[false,\"square inch\",\"[sin_i]\",\"[SIN_I]\",\"area\",0.0006451600000000001,[2,0,0,0,0,0,0],null,\"intcust\",false,null,null,1,false,false,0,\"in2; in^2; inches squared; sq inch; inches squared; international\",\"UCUM\",\"Area\",\"Clinical\",\"standard unit used in the US and internationally\",\"[in_i]2\",\"[IN_I]2\",\"1\",1,false],[false,\"square foot\",\"[sft_i]\",\"[SFT_I]\",\"area\",0.09290304,[2,0,0,0,0,0,0],null,\"intcust\",false,null,null,1,false,false,0,\"ft2; ft^2; ft squared; sq ft; feet; international\",\"UCUM\",\"Area\",\"Clinical\",\"standard unit used in the US and internationally\",\"[ft_i]2\",\"[FT_I]2\",\"1\",1,false],[false,\"square yard\",\"[syd_i]\",\"[SYD_I]\",\"area\",0.8361273600000002,[2,0,0,0,0,0,0],null,\"intcust\",false,null,null,1,false,false,0,\"yd2; yd^2; sq. yds; yards squared; international\",\"UCUM\",\"Area\",\"Clinical\",\"standard unit used in the US and internationally\",\"[yd_i]2\",\"[YD_I]2\",\"1\",1,false],[false,\"cubic inch\",\"[cin_i]\",\"[CIN_I]\",\"volume\",0.000016387064000000003,[3,0,0,0,0,0,0],null,\"intcust\",false,null,null,1,false,false,0,\"in3; in^3; in*3; inches^3; inches*3; cu. in; cu in; cubic inches; inches cubed; cin\",\"UCUM\",\"Vol\",\"Clinical\",\"standard unit used in the US and internationally\",\"[in_i]3\",\"[IN_I]3\",\"1\",1,false],[false,\"cubic foot\",\"[cft_i]\",\"[CFT_I]\",\"volume\",0.028316846592000004,[3,0,0,0,0,0,0],null,\"intcust\",false,null,null,1,false,false,0,\"ft3; ft^3; ft*3; cu. ft; cubic feet; cubed; [ft_i]3; international\",\"UCUM\",\"Vol\",\"Clinical\",\"\",\"[ft_i]3\",\"[FT_I]3\",\"1\",1,false],[false,\"cubic yard\",\"[cyd_i]\",\"[CYD_I]\",\"volume\",0.7645548579840002,[3,0,0,0,0,0,0],\"cu.yd\",\"intcust\",false,null,null,1,false,false,0,\"cubic yards; cubic yds; cu yards; CYs; yards^3; yd^3; yds^3; yd3; yds3\",\"UCUM\",\"Vol\",\"Nonclinical\",\"standard unit used in the US and internationally\",\"[yd_i]3\",\"[YD_I]3\",\"1\",1,false],[false,\"board foot\",\"[bf_i]\",\"[BF_I]\",\"volume\",0.002359737216,[3,0,0,0,0,0,0],null,\"intcust\",false,null,null,1,false,false,0,\"BDFT; FBM; BF; board feet; international\",\"UCUM\",\"Vol\",\"Nonclinical\",\"unit of volume used to measure lumber\",\"[in_i]3\",\"[IN_I]3\",\"144\",144,false],[false,\"cord\",\"[cr_i]\",\"[CR_I]\",\"volume\",3.6245563637760005,[3,0,0,0,0,0,0],null,\"intcust\",false,null,null,1,false,false,0,\"crd I; international cords\",\"UCUM\",\"Vol\",\"Nonclinical\",\"unit of measure of dry volume used to measure firewood equal 128 ft3\",\"[ft_i]3\",\"[FT_I]3\",\"128\",128,false],[false,\"mil\",\"[mil_i]\",\"[MIL_I]\",\"length\",0.000025400000000000004,[1,0,0,0,0,0,0],\"mil\",\"intcust\",false,null,null,1,false,false,0,\"thou, thousandth; mils; international\",\"UCUM\",\"Len\",\"Clinical\",\"equal to 0.001 international inch\",\"[in_i]\",\"[IN_I]\",\"1e-3\",0.001,false],[false,\"circular mil\",\"[cml_i]\",\"[CML_I]\",\"area\",5.067074790974979e-10,[2,0,0,0,0,0,0],\"circ.mil\",\"intcust\",false,null,null,1,false,false,0,\"circular mils; cml I; international\",\"UCUM\",\"Area\",\"Clinical\",\"\",\"[pi]/4.[mil_i]2\",\"[PI]/4.[MIL_I]2\",\"1\",1,false],[false,\"hand\",\"[hd_i]\",\"[HD_I]\",\"height of horses\",0.10160000000000001,[1,0,0,0,0,0,0],\"hd\",\"intcust\",false,null,null,1,false,false,0,\"hands; international\",\"UCUM\",\"Len\",\"Nonclinical\",\"used to measure horse height\",\"[in_i]\",\"[IN_I]\",\"4\",4,false],[false,\"foot - US\",\"[ft_us]\",\"[FT_US]\",\"length\",0.3048006096012192,[1,0,0,0,0,0,0],\"ft<sub>us</sub>\",\"us-lengths\",false,null,null,1,false,false,0,\"US foot; foot US; us ft; ft us; height; visual distance; feet\",\"UCUM\",\"Len\",\"Obsolete\",\"Better to use [ft_i] which refers to the length used worldwide, including in the US;  [ft_us] may be confused with land survey units. \",\"m/3937\",\"M/3937\",\"1200\",1200,false],[false,\"yard - US\",\"[yd_us]\",\"[YD_US]\",\"length\",0.9144018288036575,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"US yards; us yds; distance\",\"UCUM\",\"Len; Nrat\",\"Obsolete\",\"Better to use [yd_i] which refers to the length used worldwide, including in the US; [yd_us] refers to unit used in land surveys in the US\",\"[ft_us]\",\"[FT_US]\",\"3\",3,false],[false,\"inch - US\",\"[in_us]\",\"[IN_US]\",\"length\",0.0254000508001016,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"US inches; in us; us in; inch US\",\"UCUM\",\"Len\",\"Obsolete\",\"Better to use [in_i] which refers to the length used worldwide, including in the US\",\"[ft_us]/12\",\"[FT_US]/12\",\"1\",1,false],[false,\"rod - US\",\"[rd_us]\",\"[RD_US]\",\"length\",5.029210058420117,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"US rod; US rods; rd US; US rd\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[ft_us]\",\"[FT_US]\",\"16.5\",16.5,false],[false,\"Gunter's chain - US\",\"[ch_us]\",\"[CH_US]\",\"length\",20.116840233680467,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"surveyor's chain; Surveyor's chain USA; Gunter’s measurement; surveyor’s measurement; Gunter's Chain USA\",\"UCUM\",\"Len\",\"Obsolete\",\"historical unit used for land survey used only in the US\",\"[rd_us]\",\"[RD_US]\",\"4\",4,false],[false,\"link for Gunter's chain - US\",\"[lk_us]\",\"[LK_US]\",\"length\",0.20116840233680466,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"Links for Gunter's Chain USA\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[ch_us]/100\",\"[CH_US]/100\",\"1\",1,false],[false,\"Ramden's chain - US\",\"[rch_us]\",\"[RCH_US]\",\"length\",30.480060960121918,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"Ramsden's chain; engineer's chains\",\"UCUM\",\"Len\",\"Obsolete\",\"distance measuring device used for land survey\",\"[ft_us]\",\"[FT_US]\",\"100\",100,false],[false,\"link for Ramden's chain - US\",\"[rlk_us]\",\"[RLK_US]\",\"length\",0.3048006096012192,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"links for Ramsden's chain\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[rch_us]/100\",\"[RCH_US]/100\",\"1\",1,false],[false,\"fathom - US\",\"[fth_us]\",\"[FTH_US]\",\"length\",1.828803657607315,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"US fathoms; fathom USA; fth us\",\"UCUM\",\"Len\",\"Obsolete\",\"same length as the international fathom - better to use international fathom ([fth_i])\",\"[ft_us]\",\"[FT_US]\",\"6\",6,false],[false,\"furlong - US\",\"[fur_us]\",\"[FUR_US]\",\"length\",201.16840233680466,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"US furlongs; fur us\",\"UCUM\",\"Len\",\"Nonclinical\",\"distance unit in horse racing\",\"[rd_us]\",\"[RD_US]\",\"40\",40,false],[false,\"mile - US\",\"[mi_us]\",\"[MI_US]\",\"length\",1609.3472186944373,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"U.S. Survey Miles; US statute miles; survey mi; US mi; distance\",\"UCUM\",\"Len\",\"Nonclinical\",\"Better to use [mi_i] which refers to the length used worldwide, including in the US\",\"[fur_us]\",\"[FUR_US]\",\"8\",8,false],[false,\"acre - US\",\"[acr_us]\",\"[ACR_US]\",\"area\",4046.872609874252,[2,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"Acre USA Survey; Acre USA; survey acres\",\"UCUM\",\"Area\",\"Nonclinical\",\"an older unit based on pre 1959 US statute lengths that is still sometimes used in the US only for land survey purposes. \",\"[rd_us]2\",\"[RD_US]2\",\"160\",160,false],[false,\"square rod - US\",\"[srd_us]\",\"[SRD_US]\",\"area\",25.292953811714074,[2,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"rod2; rod^2; sq. rod; rods squared\",\"UCUM\",\"Area\",\"Nonclinical\",\"Used only in the US to measure land area, based on US statute land survey length units\",\"[rd_us]2\",\"[RD_US]2\",\"1\",1,false],[false,\"square mile - US\",\"[smi_us]\",\"[SMI_US]\",\"area\",2589998.470319521,[2,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"mi2; mi^2; sq mi; miles squared\",\"UCUM\",\"Area\",\"Nonclinical\",\"historical unit used only in the US for land survey purposes (based on the US survey mile), not the internationally recognized [mi_i]\",\"[mi_us]2\",\"[MI_US]2\",\"1\",1,false],[false,\"section\",\"[sct]\",\"[SCT]\",\"area\",2589998.470319521,[2,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"sct; sections\",\"UCUM\",\"Area\",\"Nonclinical\",\"tract of land approximately equal to 1 mile square containing 640 acres\",\"[mi_us]2\",\"[MI_US]2\",\"1\",1,false],[false,\"township\",\"[twp]\",\"[TWP]\",\"area\",93239944.93150276,[2,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"twp; townships\",\"UCUM\",\"Area\",\"Nonclinical\",\"land measurement equal to 6 mile square\",\"[sct]\",\"[SCT]\",\"36\",36,false],[false,\"mil - US\",\"[mil_us]\",\"[MIL_US]\",\"length\",0.0000254000508001016,[1,0,0,0,0,0,0],null,\"us-lengths\",false,null,null,1,false,false,0,\"thou, thousandth; mils\",\"UCUM\",\"Len\",\"Obsolete\",\"better to use [mil_i] which is based on the internationally recognized inch\",\"[in_us]\",\"[IN_US]\",\"1e-3\",0.001,false],[false,\"inch - British\",\"[in_br]\",\"[IN_BR]\",\"length\",0.025399980000000003,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"imperial inches; imp in; br in; british inches\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"cm\",\"CM\",\"2.539998\",2.539998,false],[false,\"foot - British\",\"[ft_br]\",\"[FT_BR]\",\"length\",0.30479976000000003,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"British Foot; Imperial Foot; feet; imp fts; br fts\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[in_br]\",\"[IN_BR]\",\"12\",12,false],[false,\"rod - British\",\"[rd_br]\",\"[RD_BR]\",\"length\",5.02919604,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"British rods; br rd\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[ft_br]\",\"[FT_BR]\",\"16.5\",16.5,false],[false,\"Gunter's chain - British\",\"[ch_br]\",\"[CH_BR]\",\"length\",20.11678416,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"Gunter's Chain British; Gunters Chain British; Surveyor's Chain British\",\"UCUM\",\"Len\",\"Obsolete\",\"historical unit used for land survey used only in Great Britain\",\"[rd_br]\",\"[RD_BR]\",\"4\",4,false],[false,\"link for Gunter's chain - British\",\"[lk_br]\",\"[LK_BR]\",\"length\",0.2011678416,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"Links for Gunter's Chain British\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[ch_br]/100\",\"[CH_BR]/100\",\"1\",1,false],[false,\"fathom - British\",\"[fth_br]\",\"[FTH_BR]\",\"length\",1.82879856,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"British fathoms; imperial fathoms; br fth; imp fth\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[ft_br]\",\"[FT_BR]\",\"6\",6,false],[false,\"pace - British\",\"[pc_br]\",\"[PC_BR]\",\"length\",0.7619994000000001,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"British paces; br pc\",\"UCUM\",\"Len\",\"Nonclinical\",\"traditional unit of length equal to 152.4 centimeters, or 1.52 meter. \",\"[ft_br]\",\"[FT_BR]\",\"2.5\",2.5,false],[false,\"yard - British\",\"[yd_br]\",\"[YD_BR]\",\"length\",0.91439928,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"British yards; Br yds; distance\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[ft_br]\",\"[FT_BR]\",\"3\",3,false],[false,\"mile - British\",\"[mi_br]\",\"[MI_BR]\",\"length\",1609.3427328000002,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"imperial miles; British miles; English statute miles; imp mi, br mi\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[ft_br]\",\"[FT_BR]\",\"5280\",5280,false],[false,\"nautical mile - British\",\"[nmi_br]\",\"[NMI_BR]\",\"length\",1853.1825408000002,[1,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"British nautical miles; Imperial nautical miles; Admiralty miles; n.m. br; imp nm\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[ft_br]\",\"[FT_BR]\",\"6080\",6080,false],[false,\"knot - British\",\"[kn_br]\",\"[KN_BR]\",\"velocity\",0.5147729280000001,[1,-1,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"British knots; kn br; kt\",\"UCUM\",\"Vel\",\"Obsolete\",\"based on obsolete British nautical mile \",\"[nmi_br]/h\",\"[NMI_BR]/H\",\"1\",1,false],[false,\"acre\",\"[acr_br]\",\"[ACR_BR]\",\"area\",4046.850049400269,[2,0,0,0,0,0,0],null,\"brit-length\",false,null,null,1,false,false,0,\"Imperial acres; British; a; ac; ar; acr\",\"UCUM\",\"Area\",\"Nonclinical\",\"the standard unit for acre used in the US and internationally\",\"[yd_br]2\",\"[YD_BR]2\",\"4840\",4840,false],[false,\"gallon - US\",\"[gal_us]\",\"[GAL_US]\",\"fluid volume\",0.0037854117840000006,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"US gallons; US liquid gallon; gal us; Queen Anne's wine gallon\",\"UCUM\",\"Vol\",\"Nonclinical\",\"only gallon unit used in the US; [gal_us] is only used in some other countries in South American and Africa to measure gasoline volume\",\"[in_i]3\",\"[IN_I]3\",\"231\",231,false],[false,\"barrel - US\",\"[bbl_us]\",\"[BBL_US]\",\"fluid volume\",0.158987294928,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"bbl\",\"UCUM\",\"Vol\",\"Nonclinical\",\"[bbl_us] is the standard unit for oil barrel, which is a unit only used in the US to measure the volume oil. \",\"[gal_us]\",\"[GAL_US]\",\"42\",42,false],[false,\"quart - US\",\"[qt_us]\",\"[QT_US]\",\"fluid volume\",0.0009463529460000001,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"US quarts; us qts\",\"UCUM\",\"Vol\",\"Clinical\",\"Used only in the US\",\"[gal_us]/4\",\"[GAL_US]/4\",\"1\",1,false],[false,\"pint - US\",\"[pt_us]\",\"[PT_US]\",\"fluid volume\",0.00047317647300000007,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"US pints; pint US; liquid pint; pt us; us pt\",\"UCUM\",\"Vol\",\"Clinical\",\"Used only in the US\",\"[qt_us]/2\",\"[QT_US]/2\",\"1\",1,false],[false,\"gill - US\",\"[gil_us]\",\"[GIL_US]\",\"fluid volume\",0.00011829411825000002,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"US gills; gil us\",\"UCUM\",\"Vol\",\"Nonclinical\",\"only used in the context of alcohol volume in the US\",\"[pt_us]/4\",\"[PT_US]/4\",\"1\",1,false],[false,\"fluid ounce - US\",\"[foz_us]\",\"[FOZ_US]\",\"fluid volume\",0.000029573529562500005,[3,0,0,0,0,0,0],\"oz fl\",\"us-volumes\",false,null,null,1,false,false,0,\"US fluid ounces; fl ozs; FO; fl. oz.; foz us\",\"UCUM\",\"Vol\",\"Clinical\",\"unit used only in the US\",\"[gil_us]/4\",\"[GIL_US]/4\",\"1\",1,false],[false,\"fluid dram - US\",\"[fdr_us]\",\"[FDR_US]\",\"fluid volume\",0.0000036966911953125006,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"US fluid drams; fdr us\",\"UCUM\",\"Vol\",\"Nonclinical\",\"equal to 1/8 US fluid ounce = 3.69 mL; used informally to mean small amount of liquor, especially Scotch whiskey\",\"[foz_us]/8\",\"[FOZ_US]/8\",\"1\",1,false],[false,\"minim - US\",\"[min_us]\",\"[MIN_US]\",\"fluid volume\",6.1611519921875e-8,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"min US; US min; ♏ US\",\"UCUM\",\"Vol\",\"Obsolete\",\"\",\"[fdr_us]/60\",\"[FDR_US]/60\",\"1\",1,false],[false,\"cord - US\",\"[crd_us]\",\"[CRD_US]\",\"fluid volume\",3.6245563637760005,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"US cord; US cords; crd us; us crd\",\"UCUM\",\"Vol\",\"Nonclinical\",\"unit of measure of dry volume used to measure firewood equal 128 ft3 (the same as international cord [cr_i])\",\"[ft_i]3\",\"[FT_I]3\",\"128\",128,false],[false,\"bushel - US\",\"[bu_us]\",\"[BU_US]\",\"dry volume\",0.03523907016688001,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"US bushels; US bsh; US bu\",\"UCUM\",\"Vol\",\"Obsolete\",\"Historical unit of dry volume that is rarely used today\",\"[in_i]3\",\"[IN_I]3\",\"2150.42\",2150.42,false],[false,\"gallon - historical\",\"[gal_wi]\",\"[GAL_WI]\",\"dry volume\",0.004404883770860001,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"Corn Gallon British; Dry Gallon US; Gallons Historical; Grain Gallon British; Winchester Corn Gallon; historical winchester gallons; wi gal\",\"UCUM\",\"Vol\",\"Obsolete\",\"historical unit of dry volume no longer used\",\"[bu_us]/8\",\"[BU_US]/8\",\"1\",1,false],[false,\"peck - US\",\"[pk_us]\",\"[PK_US]\",\"dry volume\",0.008809767541720002,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"US pecks; US pk\",\"UCUM\",\"Vol\",\"Nonclinical\",\"unit of dry volume rarely used today (can be used to measure volume of apples)\",\"[bu_us]/4\",\"[BU_US]/4\",\"1\",1,false],[false,\"dry quart - US\",\"[dqt_us]\",\"[DQT_US]\",\"dry volume\",0.0011012209427150002,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"dry quarts; dry quart US; US dry quart; dry qt; us dry qt; dqt; dqt us\",\"UCUM\",\"Vol\",\"Nonclinical\",\"historical unit of dry volume only in the US, but is rarely used today\",\"[pk_us]/8\",\"[PK_US]/8\",\"1\",1,false],[false,\"dry pint - US\",\"[dpt_us]\",\"[DPT_US]\",\"dry volume\",0.0005506104713575001,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"dry pints; dry pint US; US dry pint; dry pt; dpt; dpt us\",\"UCUM\",\"Vol\",\"Nonclinical\",\"historical unit of dry volume only in the US, but is rarely used today\",\"[dqt_us]/2\",\"[DQT_US]/2\",\"1\",1,false],[false,\"tablespoon - US\",\"[tbs_us]\",\"[TBS_US]\",\"volume\",0.000014786764781250002,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"Tbs; tbsp; tbs us; US tablespoons\",\"UCUM\",\"Vol\",\"Clinical\",\"unit defined as 0.5 US fluid ounces or 3 teaspoons - used only in the US. See [tbs_m] for the unit used internationally and in the US for nutrional labelling. \",\"[foz_us]/2\",\"[FOZ_US]/2\",\"1\",1,false],[false,\"teaspoon - US\",\"[tsp_us]\",\"[TSP_US]\",\"volume\",0.0000049289215937500005,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"tsp; t; US teaspoons\",\"UCUM\",\"Vol\",\"Nonclinical\",\"unit defined as 1/6 US fluid ounces - used only in the US. See [tsp_m] for the unit used internationally and in the US for nutrional labelling. \",\"[tbs_us]/3\",\"[TBS_US]/3\",\"1\",1,false],[false,\"cup - US customary\",\"[cup_us]\",\"[CUP_US]\",\"volume\",0.00023658823650000004,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"cup us; us cups\",\"UCUM\",\"Vol\",\"Nonclinical\",\"Unit defined as 1/2 US pint or 16 US tablespoons ≈ 236.59 mL, which is not the standard unit defined by the FDA of 240 mL - see [cup_m] (metric cup)\",\"[tbs_us]\",\"[TBS_US]\",\"16\",16,false],[false,\"fluid ounce - metric\",\"[foz_m]\",\"[FOZ_M]\",\"fluid volume\",0.000029999999999999997,[3,0,0,0,0,0,0],\"oz fl\",\"us-volumes\",false,null,null,1,false,false,0,\"metric fluid ounces; fozs m; fl ozs m\",\"UCUM\",\"Vol\",\"Clinical\",\"unit used only in the US for nutritional labelling, as set by the FDA\",\"mL\",\"ML\",\"30\",30,false],[false,\"cup - US legal\",\"[cup_m]\",\"[CUP_M]\",\"volume\",0.00023999999999999998,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"cup m; metric cups\",\"UCUM\",\"Vol\",\"Clinical\",\"standard unit equal to 240 mL used in the US for nutritional labelling, as defined by the FDA. Note that this is different from the US customary cup (236.59 mL) and the metric cup used in Commonwealth nations (250 mL).\",\"mL\",\"ML\",\"240\",240,false],[false,\"teaspoon - metric\",\"[tsp_m]\",\"[TSP_M]\",\"volume\",0.0000049999999999999996,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"tsp; t; metric teaspoons\",\"UCUM\",\"Vol\",\"Clinical\",\"standard unit used in the US and internationally\",\"mL\",\"mL\",\"5\",5,false],[false,\"tablespoon - metric\",\"[tbs_m]\",\"[TBS_M]\",\"volume\",0.000014999999999999999,[3,0,0,0,0,0,0],null,\"us-volumes\",false,null,null,1,false,false,0,\"metric tablespoons; Tbs; tbsp; T; tbs m\",\"UCUM\",\"Vol\",\"Clinical\",\"standard unit used in the US and internationally\",\"mL\",\"mL\",\"15\",15,false],[false,\"gallon- British\",\"[gal_br]\",\"[GAL_BR]\",\"volume\",0.004546090000000001,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"imperial gallons, UK gallons; British gallons; br gal; imp gal\",\"UCUM\",\"Vol\",\"Nonclinical\",\"Used only in Great Britain and other Commonwealth countries\",\"l\",\"L\",\"4.54609\",4.54609,false],[false,\"peck - British\",\"[pk_br]\",\"[PK_BR]\",\"volume\",0.009092180000000002,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"imperial pecks; British pecks; br pk; imp pk\",\"UCUM\",\"Vol\",\"Nonclinical\",\"unit of dry volume rarely used today (can be used to measure volume of apples)\",\"[gal_br]\",\"[GAL_BR]\",\"2\",2,false],[false,\"bushel - British\",\"[bu_br]\",\"[BU_BR]\",\"volume\",0.03636872000000001,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"British bushels; imperial; br bsh; br bu; imp\",\"UCUM\",\"Vol\",\"Obsolete\",\"Historical unit of dry volume that is rarely used today\",\"[pk_br]\",\"[PK_BR]\",\"4\",4,false],[false,\"quart - British\",\"[qt_br]\",\"[QT_BR]\",\"volume\",0.0011365225000000002,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"British quarts; imperial quarts; br qts\",\"UCUM\",\"Vol\",\"Clinical\",\"Used only in Great Britain and other Commonwealth countries\",\"[gal_br]/4\",\"[GAL_BR]/4\",\"1\",1,false],[false,\"pint - British\",\"[pt_br]\",\"[PT_BR]\",\"volume\",0.0005682612500000001,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"British pints; imperial pints; pt br; br pt; imp pt; pt imp\",\"UCUM\",\"Vol\",\"Clinical\",\"Used only in Great Britain and other Commonwealth countries\",\"[qt_br]/2\",\"[QT_BR]/2\",\"1\",1,false],[false,\"gill - British\",\"[gil_br]\",\"[GIL_BR]\",\"volume\",0.00014206531250000003,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"imperial gills; British gills; imp gill, br gill\",\"UCUM\",\"Vol\",\"Nonclinical\",\"only used in the context of alcohol volume in Great Britain\",\"[pt_br]/4\",\"[PT_BR]/4\",\"1\",1,false],[false,\"fluid ounce - British\",\"[foz_br]\",\"[FOZ_BR]\",\"volume\",0.000028413062500000005,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"British fluid ounces; Imperial fluid ounces; br fozs; imp fozs; br fl ozs\",\"UCUM\",\"Vol\",\"Clinical\",\"Used only in Great Britain and other Commonwealth countries\",\"[gil_br]/5\",\"[GIL_BR]/5\",\"1\",1,false],[false,\"fluid dram - British\",\"[fdr_br]\",\"[FDR_BR]\",\"volume\",0.0000035516328125000006,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"British fluid drams; fdr br\",\"UCUM\",\"Vol\",\"Nonclinical\",\"equal to 1/8 Imperial fluid ounce = 3.55 mL; used informally to mean small amount of liquor, especially Scotch whiskey\",\"[foz_br]/8\",\"[FOZ_BR]/8\",\"1\",1,false],[false,\"minim - British\",\"[min_br]\",\"[MIN_BR]\",\"volume\",5.919388020833334e-8,[3,0,0,0,0,0,0],null,\"brit-volumes\",false,null,null,1,false,false,0,\"min br; br min; ♏ br\",\"UCUM\",\"Vol\",\"Obsolete\",\"\",\"[fdr_br]/60\",\"[FDR_BR]/60\",\"1\",1,false],[false,\"grain\",\"[gr]\",\"[GR]\",\"mass\",0.06479891,[0,0,1,0,0,0,0],null,\"avoirdupois\",false,null,null,1,false,false,0,\"gr; grains\",\"UCUM\",\"Mass\",\"Nonclinical\",\"an apothecary measure of mass rarely used today\",\"mg\",\"MG\",\"64.79891\",64.79891,false],[false,\"pound\",\"[lb_av]\",\"[LB_AV]\",\"mass\",453.59237,[0,0,1,0,0,0,0],\"lb\",\"avoirdupois\",false,null,null,1,false,false,0,\"avoirdupois pounds, international pounds; av lbs; pounds\",\"UCUM\",\"Mass\",\"Clinical\",\"standard unit used in the US and internationally\",\"[gr]\",\"[GR]\",\"7000\",7000,false],[false,\"pound force - US\",\"[lbf_av]\",\"[LBF_AV]\",\"force\",4448.2216152605,[1,-2,1,0,0,0,0],\"lbf\",\"const\",false,null,null,1,false,false,0,\"lbfs; US lbf; US pound forces\",\"UCUM\",\"Force\",\"Clinical\",\"only rarely needed in health care - see [lb_av] which is the more common unit to express weight\",\"[lb_av].[g]\",\"[LB_AV].[G]\",\"1\",1,false],[false,\"ounce\",\"[oz_av]\",\"[OZ_AV]\",\"mass\",28.349523125,[0,0,1,0,0,0,0],\"oz\",\"avoirdupois\",false,null,null,1,false,false,0,\"ounces; international ounces; avoirdupois ounces; av ozs\",\"UCUM\",\"Mass\",\"Clinical\",\"standard unit used in the US and internationally\",\"[lb_av]/16\",\"[LB_AV]/16\",\"1\",1,false],[false,\"Dram mass unit\",\"[dr_av]\",\"[DR_AV]\",\"mass\",1.7718451953125,[0,0,1,0,0,0,0],null,\"avoirdupois\",false,null,null,1,false,false,0,\"Dram; drams avoirdupois; avoidupois dram; international dram\",\"UCUM\",\"Mass\",\"Clinical\",\"unit from the avoirdupois system, which is used in the US and internationally\",\"[oz_av]/16\",\"[OZ_AV]/16\",\"1\",1,false],[false,\"short hundredweight\",\"[scwt_av]\",\"[SCWT_AV]\",\"mass\",45359.237,[0,0,1,0,0,0,0],null,\"avoirdupois\",false,null,null,1,false,false,0,\"hundredweights; s cwt; scwt; avoirdupois\",\"UCUM\",\"Mass\",\"Nonclinical\",\"Used only in the US to equal 100 pounds\",\"[lb_av]\",\"[LB_AV]\",\"100\",100,false],[false,\"long hundredweight\",\"[lcwt_av]\",\"[LCWT_AV]\",\"mass\",50802.345440000005,[0,0,1,0,0,0,0],null,\"avoirdupois\",false,null,null,1,false,false,0,\"imperial hundredweights; imp cwt; lcwt; avoirdupois\",\"UCUM\",\"Mass\",\"Obsolete\",\"\",\"[lb_av]\",\"[LB_AV]\",\"112\",112,false],[false,\"short ton - US\",\"[ston_av]\",\"[STON_AV]\",\"mass\",907184.74,[0,0,1,0,0,0,0],null,\"avoirdupois\",false,null,null,1,false,false,0,\"ton; US tons; avoirdupois tons\",\"UCUM\",\"Mass\",\"Clinical\",\"Used only in the US\",\"[scwt_av]\",\"[SCWT_AV]\",\"20\",20,false],[false,\"long ton - British\",\"[lton_av]\",\"[LTON_AV]\",\"mass\",1016046.9088000001,[0,0,1,0,0,0,0],null,\"avoirdupois\",false,null,null,1,false,false,0,\"imperial tons; weight tons; British long tons; long ton avoirdupois\",\"UCUM\",\"Mass\",\"Nonclinical\",\"Used only in Great Britain and other Commonwealth countries\",\"[lcwt_av]\",\"[LCWT_AV]\",\"20\",20,false],[false,\"stone - British\",\"[stone_av]\",\"[STONE_AV]\",\"mass\",6350.293180000001,[0,0,1,0,0,0,0],null,\"avoirdupois\",false,null,null,1,false,false,0,\"British stones; avoirdupois\",\"UCUM\",\"Mass\",\"Nonclinical\",\"Used primarily in the UK and Ireland to measure body weight\",\"[lb_av]\",\"[LB_AV]\",\"14\",14,false],[false,\"pennyweight - troy\",\"[pwt_tr]\",\"[PWT_TR]\",\"mass\",1.5551738400000001,[0,0,1,0,0,0,0],null,\"troy\",false,null,null,1,false,false,0,\"dwt; denarius weights\",\"UCUM\",\"Mass\",\"Obsolete\",\"historical unit used to measure mass and cost of precious metals\",\"[gr]\",\"[GR]\",\"24\",24,false],[false,\"ounce - troy\",\"[oz_tr]\",\"[OZ_TR]\",\"mass\",31.103476800000003,[0,0,1,0,0,0,0],null,\"troy\",false,null,null,1,false,false,0,\"troy ounces; tr ozs\",\"UCUM\",\"Mass\",\"Nonclinical\",\"unit of mass for precious metals and gemstones only\",\"[pwt_tr]\",\"[PWT_TR]\",\"20\",20,false],[false,\"pound - troy\",\"[lb_tr]\",\"[LB_TR]\",\"mass\",373.2417216,[0,0,1,0,0,0,0],null,\"troy\",false,null,null,1,false,false,0,\"troy pounds; tr lbs\",\"UCUM\",\"Mass\",\"Nonclinical\",\"only used for weighing precious metals\",\"[oz_tr]\",\"[OZ_TR]\",\"12\",12,false],[false,\"scruple\",\"[sc_ap]\",\"[SC_AP]\",\"mass\",1.2959782,[0,0,1,0,0,0,0],null,\"apoth\",false,null,null,1,false,false,0,\"scruples; sc ap\",\"UCUM\",\"Mass\",\"Obsolete\",\"\",\"[gr]\",\"[GR]\",\"20\",20,false],[false,\"dram - apothecary\",\"[dr_ap]\",\"[DR_AP]\",\"mass\",3.8879346,[0,0,1,0,0,0,0],null,\"apoth\",false,null,null,1,false,false,0,\"ʒ; drachm; apothecaries drams; dr ap; dram ap\",\"UCUM\",\"Mass\",\"Nonclinical\",\"unit still used in the US occasionally to measure amount of drugs in pharmacies\",\"[sc_ap]\",\"[SC_AP]\",\"3\",3,false],[false,\"ounce - apothecary\",\"[oz_ap]\",\"[OZ_AP]\",\"mass\",31.1034768,[0,0,1,0,0,0,0],null,\"apoth\",false,null,null,1,false,false,0,\"apothecary ounces; oz ap; ap ozs; ozs ap\",\"UCUM\",\"Mass\",\"Obsolete\",\"\",\"[dr_ap]\",\"[DR_AP]\",\"8\",8,false],[false,\"pound - apothecary\",\"[lb_ap]\",\"[LB_AP]\",\"mass\",373.2417216,[0,0,1,0,0,0,0],null,\"apoth\",false,null,null,1,false,false,0,\"apothecary pounds; apothecaries pounds; ap lb; lb ap; ap lbs; lbs ap\",\"UCUM\",\"Mass\",\"Obsolete\",\"\",\"[oz_ap]\",\"[OZ_AP]\",\"12\",12,false],[false,\"ounce - metric\",\"[oz_m]\",\"[OZ_M]\",\"mass\",28,[0,0,1,0,0,0,0],null,\"apoth\",false,null,null,1,false,false,0,\"metric ounces; m ozs\",\"UCUM\",\"Mass\",\"Clinical\",\"see [oz_av] (the avoirdupois ounce) for the standard ounce used internationally; [oz_m] is equal to 28 grams and is based on the apothecaries' system of mass units which is used in some US pharmacies. \",\"g\",\"g\",\"28\",28,false],[false,\"line\",\"[lne]\",\"[LNE]\",\"length\",0.002116666666666667,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"British lines; br L; L; l\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[in_i]/12\",\"[IN_I]/12\",\"1\",1,false],[false,\"point (typography)\",\"[pnt]\",\"[PNT]\",\"length\",0.0003527777777777778,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"DTP points; desktop publishing point; pt; pnt\",\"UCUM\",\"Len\",\"Nonclinical\",\"typography unit for typesetter's length\",\"[lne]/6\",\"[LNE]/6\",\"1\",1,false],[false,\"pica (typography)\",\"[pca]\",\"[PCA]\",\"length\",0.004233333333333334,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"picas\",\"UCUM\",\"Len\",\"Nonclinical\",\"typography unit for typesetter's length\",\"[pnt]\",\"[PNT]\",\"12\",12,false],[false,\"Printer's point (typography)\",\"[pnt_pr]\",\"[PNT_PR]\",\"length\",0.00035145980000000004,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"pnt pr\",\"UCUM\",\"Len\",\"Nonclinical\",\"typography unit for typesetter's length\",\"[in_i]\",\"[IN_I]\",\"0.013837\",0.013837,false],[false,\"Printer's pica  (typography)\",\"[pca_pr]\",\"[PCA_PR]\",\"length\",0.004217517600000001,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"pca pr; Printer's picas\",\"UCUM\",\"Len\",\"Nonclinical\",\"typography unit for typesetter's length\",\"[pnt_pr]\",\"[PNT_PR]\",\"12\",12,false],[false,\"pied\",\"[pied]\",\"[PIED]\",\"length\",0.3248,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"pieds du roi; Paris foot; royal; French; feet\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"cm\",\"CM\",\"32.48\",32.48,false],[false,\"pouce\",\"[pouce]\",\"[POUCE]\",\"length\",0.027066666666666666,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"historical French inches; French royal inches\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[pied]/12\",\"[PIED]/12\",\"1\",1,false],[false,\"ligne\",\"[ligne]\",\"[LIGNE]\",\"length\",0.0022555555555555554,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"Paris lines; lignes\",\"UCUM\",\"Len\",\"Obsolete\",\"\",\"[pouce]/12\",\"[POUCE]/12\",\"1\",1,false],[false,\"didot\",\"[didot]\",\"[DIDOT]\",\"length\",0.0003759259259259259,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"Didot point; dd; Didots Point; didots; points\",\"UCUM\",\"Len\",\"Obsolete\",\"typography unit for typesetter's length\",\"[ligne]/6\",\"[LIGNE]/6\",\"1\",1,false],[false,\"cicero\",\"[cicero]\",\"[CICERO]\",\"length\",0.004511111111111111,[1,0,0,0,0,0,0],null,\"typeset\",false,null,null,1,false,false,0,\"Didot's pica; ciceros; picas\",\"UCUM\",\"Len\",\"Obsolete\",\"typography unit for typesetter's length\",\"[didot]\",\"[DIDOT]\",\"12\",12,false],[false,\"degrees Fahrenheit\",\"[degF]\",\"[DEGF]\",\"temperature\",0.5555555555555556,[0,0,0,0,1,0,0],\"°F\",\"heat\",false,null,\"degF\",1,true,false,0,\"°F; deg F\",\"UCUM\",\"Temp\",\"Clinical\",\"\",\"K\",null,null,0.5555555555555556,false],[false,\"degrees Rankine\",\"[degR]\",\"[degR]\",\"temperature\",0.5555555555555556,[0,0,0,0,1,0,0],\"°R\",\"heat\",false,null,null,1,false,false,0,\"°R; °Ra; Rankine\",\"UCUM\",\"Temp\",\"Obsolete\",\"Replaced by Kelvin\",\"K/9\",\"K/9\",\"5\",5,false],[false,\"degrees Réaumur\",\"[degRe]\",\"[degRe]\",\"temperature\",1.25,[0,0,0,0,1,0,0],\"°Ré\",\"heat\",false,null,\"degRe\",1,true,false,0,\"°Ré, °Re, °r; Réaumur; degree Reaumur; Reaumur\",\"UCUM\",\"Temp\",\"Obsolete\",\"replaced by Celsius\",\"K\",null,null,1.25,false],[false,\"calorie at 15°C\",\"cal_[15]\",\"CAL_[15]\",\"energy\",4185.8,[2,-2,1,0,0,0,0],\"cal<sub>15°C</sub>\",\"heat\",true,null,null,1,false,false,0,\"calorie 15 C; cals 15 C; calories at 15 C\",\"UCUM\",\"Enrg\",\"Nonclinical\",\"equal to 4.1855 joules; calorie most often used in engineering\",\"J\",\"J\",\"4.18580\",4.1858,false],[false,\"calorie at 20°C\",\"cal_[20]\",\"CAL_[20]\",\"energy\",4181.9,[2,-2,1,0,0,0,0],\"cal<sub>20°C</sub>\",\"heat\",true,null,null,1,false,false,0,\"calorie 20 C; cal 20 C; calories at 20 C\",\"UCUM\",\"Enrg\",\"Clinical\",\"equal to 4.18190  joules. \",\"J\",\"J\",\"4.18190\",4.1819,false],[false,\"mean calorie\",\"cal_m\",\"CAL_M\",\"energy\",4190.0199999999995,[2,-2,1,0,0,0,0],\"cal<sub>m</sub>\",\"heat\",true,null,null,1,false,false,0,\"mean cals; mean calories\",\"UCUM\",\"Enrg\",\"Clinical\",\"equal to 4.19002 joules. \",\"J\",\"J\",\"4.19002\",4.19002,false],[false,\"international table calorie\",\"cal_IT\",\"CAL_IT\",\"energy\",4186.8,[2,-2,1,0,0,0,0],\"cal<sub>IT</sub>\",\"heat\",true,null,null,1,false,false,0,\"calories IT; IT cals; international steam table calories\",\"UCUM\",\"Enrg\",\"Nonclinical\",\"used in engineering steam tables and defined as 1/860 international watt-hour; equal to 4.1868 joules\",\"J\",\"J\",\"4.1868\",4.1868,false],[false,\"thermochemical calorie\",\"cal_th\",\"CAL_TH\",\"energy\",4184,[2,-2,1,0,0,0,0],\"cal<sub>th</sub>\",\"heat\",true,null,null,1,false,false,0,\"thermochemical calories; th cals\",\"UCUM\",\"Enrg\",\"Clinical\",\"equal to 4.184 joules; used as the unit in medicine and biochemistry (equal to cal)\",\"J\",\"J\",\"4.184\",4.184,false],[false,\"calorie\",\"cal\",\"CAL\",\"energy\",4184,[2,-2,1,0,0,0,0],\"cal\",\"heat\",true,null,null,1,false,false,0,\"gram calories; small calories\",\"UCUM\",\"Enrg\",\"Clinical\",\"equal to 4.184 joules (the same value as the thermochemical calorie, which is the most common calorie used in medicine and biochemistry)\",\"cal_th\",\"CAL_TH\",\"1\",1,false],[false,\"nutrition label Calories\",\"[Cal]\",\"[CAL]\",\"energy\",4184000,[2,-2,1,0,0,0,0],\"Cal\",\"heat\",false,null,null,1,false,false,0,\"food calories; Cal; kcal\",\"UCUM\",\"Eng\",\"Clinical\",\"\",\"kcal_th\",\"KCAL_TH\",\"1\",1,false],[false,\"British thermal unit at 39°F\",\"[Btu_39]\",\"[BTU_39]\",\"energy\",1059670,[2,-2,1,0,0,0,0],\"Btu<sub>39°F</sub>\",\"heat\",false,null,null,1,false,false,0,\"BTU 39F; BTU 39 F; B.T.U. 39 F; B.Th.U. 39 F; BThU 39 F; British thermal units\",\"UCUM\",\"Eng\",\"Nonclinical\",\"equal to 1.05967 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries\",\"kJ\",\"kJ\",\"1.05967\",1.05967,false],[false,\"British thermal unit at 59°F\",\"[Btu_59]\",\"[BTU_59]\",\"energy\",1054800,[2,-2,1,0,0,0,0],\"Btu<sub>59°F</sub>\",\"heat\",false,null,null,1,false,false,0,\"BTU 59 F; BTU 59F; B.T.U. 59 F; B.Th.U. 59 F; BThU 59F; British thermal units\",\"UCUM\",\"Eng\",\"Nonclinical\",\"equal to  1.05480 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries\",\"kJ\",\"kJ\",\"1.05480\",1.0548,false],[false,\"British thermal unit at 60°F\",\"[Btu_60]\",\"[BTU_60]\",\"energy\",1054680,[2,-2,1,0,0,0,0],\"Btu<sub>60°F</sub>\",\"heat\",false,null,null,1,false,false,0,\"BTU 60 F; BTU 60F; B.T.U. 60 F; B.Th.U. 60 F; BThU 60 F; British thermal units 60 F\",\"UCUM\",\"Eng\",\"Nonclinical\",\"equal to 1.05468 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries\",\"kJ\",\"kJ\",\"1.05468\",1.05468,false],[false,\"mean British thermal unit\",\"[Btu_m]\",\"[BTU_M]\",\"energy\",1055870,[2,-2,1,0,0,0,0],\"Btu<sub>m</sub>\",\"heat\",false,null,null,1,false,false,0,\"BTU mean; B.T.U. mean; B.Th.U. mean; BThU mean; British thermal units mean; \",\"UCUM\",\"Eng\",\"Nonclinical\",\"equal to 1.05587 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries\",\"kJ\",\"kJ\",\"1.05587\",1.05587,false],[false,\"international table British thermal unit\",\"[Btu_IT]\",\"[BTU_IT]\",\"energy\",1055055.85262,[2,-2,1,0,0,0,0],\"Btu<sub>IT</sub>\",\"heat\",false,null,null,1,false,false,0,\"BTU IT; B.T.U. IT; B.Th.U. IT; BThU IT; British thermal units IT\",\"UCUM\",\"Eng\",\"Nonclinical\",\"equal to 1.055 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries\",\"kJ\",\"kJ\",\"1.05505585262\",1.05505585262,false],[false,\"thermochemical British thermal unit\",\"[Btu_th]\",\"[BTU_TH]\",\"energy\",1054350,[2,-2,1,0,0,0,0],\"Btu<sub>th</sub>\",\"heat\",false,null,null,1,false,false,0,\"BTU Th; B.T.U. Th; B.Th.U. Th; BThU Th; thermochemical British thermal units\",\"UCUM\",\"Eng\",\"Nonclinical\",\"equal to 1.054350 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries\",\"kJ\",\"kJ\",\"1.054350\",1.05435,false],[false,\"British thermal unit\",\"[Btu]\",\"[BTU]\",\"energy\",1054350,[2,-2,1,0,0,0,0],\"btu\",\"heat\",false,null,null,1,false,false,0,\"BTU; B.T.U. ; B.Th.U.; BThU; British thermal units\",\"UCUM\",\"Eng\",\"Nonclinical\",\"equal to the thermochemical British thermal unit equal to 1.054350 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries\",\"[Btu_th]\",\"[BTU_TH]\",\"1\",1,false],[false,\"horsepower - mechanical\",\"[HP]\",\"[HP]\",\"power\",745699.8715822703,[2,-3,1,0,0,0,0],null,\"heat\",false,null,null,1,false,false,0,\"imperial horsepowers\",\"UCUM\",\"EngRat\",\"Nonclinical\",\"refers to mechanical horsepower, which is unit used to measure engine power primarily in the US. \",\"[ft_i].[lbf_av]/s\",\"[FT_I].[LBF_AV]/S\",\"550\",550,false],[false,\"tex\",\"tex\",\"TEX\",\"linear mass density (of textile thread)\",0.001,[-1,0,1,0,0,0,0],\"tex\",\"heat\",true,null,null,1,false,false,0,\"linear mass density; texes\",\"UCUM\",\"\",\"Clinical\",\"unit of linear mass density for fibers equal to gram per 1000 meters\",\"g/km\",\"G/KM\",\"1\",1,false],[false,\"Denier (linear mass density)\",\"[den]\",\"[DEN]\",\"linear mass density (of textile thread)\",0.0001111111111111111,[-1,0,1,0,0,0,0],\"den\",\"heat\",false,null,null,1,false,false,0,\"den; deniers\",\"UCUM\",\"\",\"Nonclinical\",\"equal to the mass in grams per 9000 meters of the fiber (1 denier = 1 strand of silk)\",\"g/9/km\",\"G/9/KM\",\"1\",1,false],[false,\"meter of water column\",\"m[H2O]\",\"M[H2O]\",\"pressure\",9806650,[-1,-2,1,0,0,0,0],\"m HO<sub><r>2</r></sub>\",\"clinical\",true,null,null,1,false,false,0,\"mH2O; m H2O; meters of water column; metres; pressure\",\"UCUM\",\"Pres\",\"Clinical\",\"\",\"kPa\",\"KPAL\",\"980665e-5\",9.80665,false],[false,\"meter of mercury column\",\"m[Hg]\",\"M[HG]\",\"pressure\",133322000,[-1,-2,1,0,0,0,0],\"m Hg\",\"clinical\",true,null,null,1,false,false,0,\"mHg; m Hg; meters of mercury column; metres; pressure\",\"UCUM\",\"Pres\",\"Clinical\",\"\",\"kPa\",\"KPAL\",\"133.3220\",133.322,false],[false,\"inch of water column\",\"[in_i'H2O]\",\"[IN_I'H2O]\",\"pressure\",249088.91000000003,[-1,-2,1,0,0,0,0],\"in HO<sub><r>2</r></sub>\",\"clinical\",false,null,null,1,false,false,0,\"inches WC; inAq; in H2O; inch of water gauge; iwg; pressure\",\"UCUM\",\"Pres\",\"Clinical\",\"unit of pressure, especially in respiratory and ventilation care\",\"m[H2O].[in_i]/m\",\"M[H2O].[IN_I]/M\",\"1\",1,false],[false,\"inch of mercury column\",\"[in_i'Hg]\",\"[IN_I'HG]\",\"pressure\",3386378.8000000003,[-1,-2,1,0,0,0,0],\"in Hg\",\"clinical\",false,null,null,1,false,false,0,\"inHg; in Hg; pressure; inches\",\"UCUM\",\"Pres\",\"Clinical\",\"unit of pressure used in US to measure barometric pressure and occasionally blood pressure (see mm[Hg] for unit used internationally)\",\"m[Hg].[in_i]/m\",\"M[HG].[IN_I]/M\",\"1\",1,false],[false,\"peripheral vascular resistance unit\",\"[PRU]\",\"[PRU]\",\"fluid resistance\",133322000000,[-4,-1,1,0,0,0,0],\"P.R.U.\",\"clinical\",false,null,null,1,false,false,0,\"peripheral vascular resistance units; peripheral resistance unit; peripheral resistance units; PRU\",\"UCUM\",\"FldResist\",\"Clinical\",\"used to assess blood flow in the capillaries; equal to 1 mmH.min/mL = 133.3 Pa·min/mL\",\"mm[Hg].s/ml\",\"MM[HG].S/ML\",\"1\",1,false],[false,\"Wood unit\",\"[wood'U]\",\"[WOOD'U]\",\"fluid resistance\",7999320000,[-4,-1,1,0,0,0,0],\"Wood U.\",\"clinical\",false,null,null,1,false,false,0,\"hybrid reference units; HRU; mmHg.min/L; vascular resistance\",\"UCUM\",\"Pres\",\"Clinical\",\"simplified unit of measurement for for measuring pulmonary vascular resistance that uses pressure; equal to mmHg.min/L\",\"mm[Hg].min/L\",\"MM[HG].MIN/L\",\"1\",1,false],[false,\"diopter (lens)\",\"[diop]\",\"[DIOP]\",\"refraction of a lens\",1,[1,0,0,0,0,0,0],\"dpt\",\"clinical\",false,null,\"inv\",1,false,false,0,\"diopters; diop; dioptre; dpt; refractive power\",\"UCUM\",\"InvLen\",\"Clinical\",\"unit of optical power of lens represented by inverse meters (m^-1)\",\"m\",\"/M\",\"1\",1,false],[false,\"prism diopter (magnifying power)\",\"[p'diop]\",\"[P'DIOP]\",\"refraction of a prism\",1,[0,0,0,1,0,0,0],\"PD\",\"clinical\",false,null,\"tanTimes100\",1,true,false,0,\"diopters; dioptres; p diops; pdiop; dpt; pdptr; Δ; cm/m; centimeter per meter; centimetre; metre\",\"UCUM\",\"Angle\",\"Clinical\",\"unit for prism correction in eyeglass prescriptions\",\"rad\",null,null,1,false],[false,\"percent of slope\",\"%[slope]\",\"%[SLOPE]\",\"slope\",0.017453292519943295,[0,0,0,1,0,0,0],\"%\",\"clinical\",false,null,\"100tan\",1,true,false,0,\"% slope; %slope; percents slopes\",\"UCUM\",\"VelFr; ElpotRatFr; VelRtoFr; AccelFr\",\"Clinical\",\"\",\"deg\",null,null,1,false],[false,\"mesh\",\"[mesh_i]\",\"[MESH_I]\",\"lineic number\",0.025400000000000002,[1,0,0,0,0,0,0],null,\"clinical\",false,null,\"inv\",1,false,false,0,\"meshes\",\"UCUM\",\"NLen (lineic number)\",\"Clinical\",\"traditional unit of length defined as the number of strands or particles per inch\",\"[in_i]\",\"/[IN_I]\",\"1\",1,false],[false,\"French (catheter gauge) \",\"[Ch]\",\"[CH]\",\"gauge of catheters\",0.0003333333333333333,[1,0,0,0,0,0,0],\"Ch\",\"clinical\",false,null,null,1,false,false,0,\"Charrières, French scales; French gauges; Fr, Fg, Ga, FR, Ch\",\"UCUM\",\"Len; Circ; Diam\",\"Clinical\",\"\",\"mm/3\",\"MM/3\",\"1\",1,false],[false,\"drop - metric (1/20 mL)\",\"[drp]\",\"[DRP]\",\"volume\",5e-8,[3,0,0,0,0,0,0],\"drp\",\"clinical\",false,null,null,1,false,false,0,\"drop dosing units; metric drops; gtt\",\"UCUM\",\"Vol\",\"Clinical\",\"standard unit used in the US and internationally for clinical medicine but note that although [drp] is defined as 1/20 milliliter, in practice, drop sizes will vary due to external factors\",\"ml/20\",\"ML/20\",\"1\",1,false],[false,\"Hounsfield unit\",\"[hnsf'U]\",\"[HNSF'U]\",\"x-ray attenuation\",1,[0,0,0,0,0,0,0],\"HF\",\"clinical\",false,null,null,1,false,false,0,\"HU; units\",\"UCUM\",\"\",\"Clinical\",\"used to measure X-ray attenuation, especially in CT scans.\",\"1\",\"1\",\"1\",1,false],[false,\"Metabolic Equivalent of Task \",\"[MET]\",\"[MET]\",\"metabolic cost of physical activity\",5.833333333333334e-11,[3,-1,-1,0,0,0,0],\"MET\",\"clinical\",false,null,null,1,false,false,0,\"metabolic equivalents\",\"UCUM\",\"RelEngRat\",\"Clinical\",\"unit used to measure rate of energy expenditure per power in treadmill and other functional tests\",\"mL/min/kg\",\"ML/MIN/KG\",\"3.5\",3.5,false],[false,\"homeopathic potency of decimal series (retired)\",\"[hp'_X]\",\"[HP'_X]\",\"homeopathic potency (retired)\",1,[0,0,0,0,0,0,0],\"X\",\"clinical\",false,null,\"hpX\",1,true,false,0,null,\"UCUM\",null,null,null,\"1\",null,null,1,false],[false,\"homeopathic potency of centesimal series (retired)\",\"[hp'_C]\",\"[HP'_C]\",\"homeopathic potency (retired)\",1,[0,0,0,0,0,0,0],\"C\",\"clinical\",false,null,\"hpC\",1,true,false,0,null,\"UCUM\",null,null,null,\"1\",null,null,1,false],[false,\"homeopathic potency of millesimal series (retired)\",\"[hp'_M]\",\"[HP'_M]\",\"homeopathic potency (retired)\",1,[0,0,0,0,0,0,0],\"M\",\"clinical\",false,null,\"hpM\",1,true,false,0,null,\"UCUM\",null,null,null,\"1\",null,null,1,false],[false,\"homeopathic potency of quintamillesimal series (retired)\",\"[hp'_Q]\",\"[HP'_Q]\",\"homeopathic potency (retired)\",1,[0,0,0,0,0,0,0],\"Q\",\"clinical\",false,null,\"hpQ\",1,true,false,0,null,\"UCUM\",null,null,null,\"1\",null,null,1,false],[false,\"homeopathic potency of decimal hahnemannian series\",\"[hp_X]\",\"[HP_X]\",\"homeopathic potency (Hahnemann)\",1,[0,0,0,0,0,0,0],\"X\",\"clinical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"homeopathic potency of centesimal hahnemannian series\",\"[hp_C]\",\"[HP_C]\",\"homeopathic potency (Hahnemann)\",1,[0,0,0,0,0,0,0],\"C\",\"clinical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"homeopathic potency of millesimal hahnemannian series\",\"[hp_M]\",\"[HP_M]\",\"homeopathic potency (Hahnemann)\",1,[0,0,0,0,0,0,0],\"M\",\"clinical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"homeopathic potency of quintamillesimal hahnemannian series\",\"[hp_Q]\",\"[HP_Q]\",\"homeopathic potency (Hahnemann)\",1,[0,0,0,0,0,0,0],\"Q\",\"clinical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"homeopathic potency of decimal korsakovian series\",\"[kp_X]\",\"[KP_X]\",\"homeopathic potency (Korsakov)\",1,[0,0,0,0,0,0,0],\"X\",\"clinical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"homeopathic potency of centesimal korsakovian series\",\"[kp_C]\",\"[KP_C]\",\"homeopathic potency (Korsakov)\",1,[0,0,0,0,0,0,0],\"C\",\"clinical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"homeopathic potency of millesimal korsakovian series\",\"[kp_M]\",\"[KP_M]\",\"homeopathic potency (Korsakov)\",1,[0,0,0,0,0,0,0],\"M\",\"clinical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"homeopathic potency of quintamillesimal korsakovian series\",\"[kp_Q]\",\"[KP_Q]\",\"homeopathic potency (Korsakov)\",1,[0,0,0,0,0,0,0],\"Q\",\"clinical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"equivalent\",\"eq\",\"EQ\",\"amount of substance\",6.0221367e+23,[0,0,0,0,0,0,0],\"eq\",\"chemical\",true,null,null,1,false,false,1,\"equivalents\",\"UCUM\",\"Sub\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"osmole\",\"osm\",\"OSM\",\"amount of substance (dissolved particles)\",6.0221367e+23,[0,0,0,0,0,0,0],\"osm\",\"chemical\",true,null,null,1,false,false,1,\"osmoles; osmols\",\"UCUM\",\"Osmol\",\"Clinical\",\"the number of moles of solute that contribute to the osmotic pressure of a solution\",\"mol\",\"MOL\",\"1\",1,false],[false,\"pH\",\"[pH]\",\"[PH]\",\"acidity\",6.0221366999999994e+26,[-3,0,0,0,0,0,0],\"pH\",\"chemical\",false,null,\"pH\",1,true,false,0,\"pH scale\",\"UCUM\",\"LogCnc\",\"Clinical\",\"Log concentration of H+\",\"mol/l\",null,null,1,false],[false,\"gram percent\",\"g%\",\"G%\",\"mass concentration\",10000,[-3,0,1,0,0,0,0],\"g%\",\"chemical\",true,null,null,1,false,false,0,\"gram %; gram%; grams per deciliter; g/dL; gm per dL; gram percents\",\"UCUM\",\"MCnc\",\"Clinical\",\"equivalent to unit gram per deciliter (g/dL), a unit often used in medical tests to represent solution concentrations\",\"g/dl\",\"G/DL\",\"1\",1,false],[false,\"Svedberg unit\",\"[S]\",\"[S]\",\"sedimentation coefficient\",1e-13,[0,1,0,0,0,0,0],\"S\",\"chemical\",false,null,null,1,false,false,0,\"Sv; 10^-13 seconds; 100 fs; 100 femtoseconds\",\"UCUM\",\"Time\",\"Clinical\",\"unit of time used in measuring particle's sedimentation rate, usually after centrifugation. \",\"s\",\"10*-13.S\",\"1\",1e-13,false],[false,\"high power field (microscope)\",\"[HPF]\",\"[HPF]\",\"view area in microscope\",1,[0,0,0,0,0,0,0],\"HPF\",\"chemical\",false,null,null,1,false,false,0,\"HPF\",\"UCUM\",\"Area\",\"Clinical\",\"area visible under the maximum magnification power of the objective in microscopy (usually 400x)\\n\",\"1\",\"1\",\"1\",1,false],[false,\"low power field (microscope)\",\"[LPF]\",\"[LPF]\",\"view area in microscope\",1,[0,0,0,0,0,0,0],\"LPF\",\"chemical\",false,null,null,1,false,false,0,\"LPF; fields\",\"UCUM\",\"Area\",\"Clinical\",\"area visible under the low magnification of the objective in microscopy (usually 100 x)\\n\",\"1\",\"1\",\"100\",100,false],[false,\"katal\",\"kat\",\"KAT\",\"catalytic activity\",6.0221367e+23,[0,-1,0,0,0,0,0],\"kat\",\"chemical\",true,null,null,1,false,false,1,\"mol/secs; moles per second; mol*sec-1; mol*s-1; mol.s-1; katals; catalytic activity; enzymatic; enzyme units; activities\",\"UCUM\",\"CAct\",\"Clinical\",\"kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.\",\"mol/s\",\"MOL/S\",\"1\",1,false],[false,\"enzyme unit\",\"U\",\"U\",\"catalytic activity\",10036894500000000,[0,-1,0,0,0,0,0],\"U\",\"chemical\",true,null,null,1,false,false,1,\"micromoles per minute; umol/min; umol per minute; umol min-1; enzymatic activity; enzyme activity\",\"UCUM\",\"CAct\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"international unit - arbitrary\",\"[iU]\",\"[IU]\",\"arbitrary\",1,[0,0,0,0,0,0,0],\"IU\",\"chemical\",true,null,null,1,false,true,0,\"international units; IE; F2\",\"UCUM\",\"Arb\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"1\",\"1\",\"1\",1,false],[false,\"international unit - arbitrary\",\"[IU]\",\"[IU]\",\"arbitrary\",1,[0,0,0,0,0,0,0],\"i.U.\",\"chemical\",true,null,null,1,false,true,0,\"international units; IE; F2\",\"UCUM\",\"Arb\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"arbitary unit\",\"[arb'U]\",\"[ARB'U]\",\"arbitrary\",1,[0,0,0,0,0,0,0],\"arb. U\",\"chemical\",false,null,null,1,false,true,0,\"arbitary units; arb units; arbU\",\"UCUM\",\"Arb\",\"Clinical\",\"relative unit of measurement to show the ratio of test measurement to reference measurement\",\"1\",\"1\",\"1\",1,false],[false,\"United States Pharmacopeia unit\",\"[USP'U]\",\"[USP'U]\",\"arbitrary\",1,[0,0,0,0,0,0,0],\"U.S.P.\",\"chemical\",false,null,null,1,false,true,0,\"USP U; USP'U\",\"UCUM\",\"Arb\",\"Clinical\",\"a dose unit to express potency of drugs and vitamins defined by the United States Pharmacopoeia; usually 1 USP = 1 IU\",\"1\",\"1\",\"1\",1,false],[false,\"GPL unit\",\"[GPL'U]\",\"[GPL'U]\",\"biologic activity of anticardiolipin IgG\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"GPL Units; GPL U; IgG anticardiolipin units; IgG Phospholipid\",\"UCUM\",\"ACnc; AMass\",\"Clinical\",\"Units for an antiphospholipid test\",\"1\",\"1\",\"1\",1,false],[false,\"MPL unit\",\"[MPL'U]\",\"[MPL'U]\",\"biologic activity of anticardiolipin IgM\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"MPL units; MPL U; MPL'U; IgM anticardiolipin units; IgM Phospholipid Units \",\"UCUM\",\"ACnc\",\"Clinical\",\"units for antiphospholipid test\",\"1\",\"1\",\"1\",1,false],[false,\"APL unit\",\"[APL'U]\",\"[APL'U]\",\"biologic activity of anticardiolipin IgA\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"APL units; APL U; IgA anticardiolipin; IgA Phospholipid; biologic activity of\",\"UCUM\",\"AMass; ACnc\",\"Clinical\",\"Units for an anti phospholipid syndrome test\",\"1\",\"1\",\"1\",1,false],[false,\"Bethesda unit\",\"[beth'U]\",\"[BETH'U]\",\"biologic activity of factor VIII inhibitor\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"BU\",\"UCUM\",\"ACnc\",\"Clinical\",\"measures of blood coagulation inhibitior for many blood factors\",\"1\",\"1\",\"1\",1,false],[false,\"anti factor Xa unit\",\"[anti'Xa'U]\",\"[ANTI'XA'U]\",\"biologic activity of factor Xa inhibitor (heparin)\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"units\",\"UCUM\",\"ACnc\",\"Clinical\",\"[anti'Xa'U] unit is equivalent to and can be converted to IU/mL. \",\"1\",\"1\",\"1\",1,false],[false,\"Todd unit\",\"[todd'U]\",\"[TODD'U]\",\"biologic activity antistreptolysin O\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"units\",\"UCUM\",\"InvThres; RtoThres\",\"Clinical\",\"the unit for the results of the testing for antistreptolysin O (ASO)\",\"1\",\"1\",\"1\",1,false],[false,\"Dye unit\",\"[dye'U]\",\"[DYE'U]\",\"biologic activity of amylase\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"units\",\"UCUM\",\"CCnc\",\"Obsolete\",\"equivalent to the Somogyi unit, which is an enzyme unit for amylase but better to use U, the standard enzyme unit for measuring catalytic activity\",\"1\",\"1\",\"1\",1,false],[false,\"Somogyi unit\",\"[smgy'U]\",\"[SMGY'U]\",\"biologic activity of amylase\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"Somogyi units; smgy U\",\"UCUM\",\"CAct\",\"Clinical\",\"measures the enzymatic activity of amylase in blood serum - better to use base units mg/mL \",\"1\",\"1\",\"1\",1,false],[false,\"Bodansky unit\",\"[bdsk'U]\",\"[BDSK'U]\",\"biologic activity of phosphatase\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"\",\"UCUM\",\"ACnc\",\"Obsolete\",\"Enzyme unit specific to alkaline phosphatase - better to use standard enzyme unit of U\",\"1\",\"1\",\"1\",1,false],[false,\"King-Armstrong unit\",\"[ka'U]\",\"[KA'U]\",\"biologic activity of phosphatase\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"King-Armstrong Units; King units\",\"UCUM\",\"AMass\",\"Obsolete\",\"enzyme units for acid phosphatase - better to use enzyme unit [U]\",\"1\",\"1\",\"1\",1,false],[false,\"Kunkel unit\",\"[knk'U]\",\"[KNK'U]\",\"arbitrary biologic activity\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,null,\"UCUM\",null,null,null,\"1\",\"1\",\"1\",1,false],[false,\"Mac Lagan unit\",\"[mclg'U]\",\"[MCLG'U]\",\"arbitrary biologic activity\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"galactose index; galactose tolerance test; thymol turbidity test unit; mclg U; units; indexes\",\"UCUM\",\"ACnc\",\"Obsolete\",\"unit for liver tests - previously used in thymol turbidity tests for liver disease diagnoses, and now is sometimes referred to in the oral galactose tolerance test\",\"1\",\"1\",\"1\",1,false],[false,\"tuberculin unit\",\"[tb'U]\",\"[TB'U]\",\"biologic activity of tuberculin\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"TU; units\",\"UCUM\",\"Arb\",\"Clinical\",\"amount of tuberculin antigen -usually in reference to a TB skin test \",\"1\",\"1\",\"1\",1,false],[false,\"50% cell culture infectious dose\",\"[CCID_50]\",\"[CCID_50]\",\"biologic activity (infectivity) of an infectious agent preparation\",1,[0,0,0,0,0,0,0],\"CCID<sub>50</sub>\",\"chemical\",false,null,null,1,false,true,0,\"CCID50; 50% cell culture infective doses\",\"UCUM\",\"NumThres\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"50% tissue culture infectious dose\",\"[TCID_50]\",\"[TCID_50]\",\"biologic activity (infectivity) of an infectious agent preparation\",1,[0,0,0,0,0,0,0],\"TCID<sub>50</sub>\",\"chemical\",false,null,null,1,false,true,0,\"TCID50; 50% tissue culture infective dose\",\"UCUM\",\"NumThres\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"50% embryo infectious dose\",\"[EID_50]\",\"[EID_50]\",\"biologic activity (infectivity) of an infectious agent preparation\",1,[0,0,0,0,0,0,0],\"EID<sub>50</sub>\",\"chemical\",false,null,null,1,false,true,0,\"EID50; 50% embryo infective doses; EID50 Egg Infective Dosage\",\"UCUM\",\"thresNum\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"plaque forming units\",\"[PFU]\",\"[PFU]\",\"amount of an infectious agent\",1,[0,0,0,0,0,0,0],\"PFU\",\"chemical\",false,null,null,1,false,true,0,\"PFU\",\"UCUM\",\"ACnc\",\"Clinical\",\"tests usually report unit as number of PFU per unit volume\",\"1\",\"1\",\"1\",1,false],[false,\"focus forming units (cells)\",\"[FFU]\",\"[FFU]\",\"amount of an infectious agent\",1,[0,0,0,0,0,0,0],\"FFU\",\"chemical\",false,null,null,1,false,true,0,\"FFU\",\"UCUM\",\"EntNum\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"colony forming units\",\"[CFU]\",\"[CFU]\",\"amount of a proliferating organism\",1,[0,0,0,0,0,0,0],\"CFU\",\"chemical\",false,null,null,1,false,true,0,\"CFU\",\"UCUM\",\"Num\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"index of reactivity (allergen)\",\"[IR]\",\"[IR]\",\"amount of an allergen callibrated through in-vivo testing using the Stallergenes® method.\",1,[0,0,0,0,0,0,0],\"IR\",\"chemical\",false,null,null,1,false,true,0,\"IR; indexes\",\"UCUM\",\"Acnc\",\"Clinical\",\"amount of an allergen callibrated through in-vivo testing using the Stallergenes method. Usually reported in tests as IR/mL\",\"1\",\"1\",\"1\",1,false],[false,\"bioequivalent allergen unit\",\"[BAU]\",\"[BAU]\",\"amount of an allergen callibrated through in-vivo testing based on the ID50EAL method of (intradermal dilution for 50mm sum of erythema diameters\",1,[0,0,0,0,0,0,0],\"BAU\",\"chemical\",false,null,null,1,false,true,0,\"BAU; Bioequivalent Allergy Units; bioequivalent allergen units\",\"UCUM\",\"Arb\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"allergy unit\",\"[AU]\",\"[AU]\",\"procedure defined amount of an allergen using some reference standard\",1,[0,0,0,0,0,0,0],\"AU\",\"chemical\",false,null,null,1,false,true,0,\"allergy units; allergen units; AU\",\"UCUM\",\"Arb\",\"Clinical\",\"Most standard test allergy units are reported as [IU] or as %. \",\"1\",\"1\",\"1\",1,false],[false,\"allergen unit for Ambrosia artemisiifolia\",\"[Amb'a'1'U]\",\"[AMB'A'1'U]\",\"procedure defined amount of the major allergen of ragweed.\",1,[0,0,0,0,0,0,0],\"Amb a 1 U\",\"chemical\",false,null,null,1,false,true,0,\"Amb a 1 unit; Antigen E; AgE U; allergen units\",\"UCUM\",\"Arb\",\"Clinical\",\"Amb a 1 is the major allergen in short ragweed, and can be converted Bioequivalent allergen units (BAU) where 350 Amb a 1 U/mL = 100,000 BAU/mL\",\"1\",\"1\",\"1\",1,false],[false,\"protein nitrogen unit (allergen testing)\",\"[PNU]\",\"[PNU]\",\"procedure defined amount of a protein substance\",1,[0,0,0,0,0,0,0],\"PNU\",\"chemical\",false,null,null,1,false,true,0,\"protein nitrogen units; PNU\",\"UCUM\",\"Mass\",\"Clinical\",\"defined as 0.01 ug of phosphotungstic acid-precipitable protein nitrogen. Being replaced by bioequivalent allergy units (BAU).\",\"1\",\"1\",\"1\",1,false],[false,\"Limit of flocculation\",\"[Lf]\",\"[LF]\",\"procedure defined amount of an antigen substance\",1,[0,0,0,0,0,0,0],\"Lf\",\"chemical\",false,null,null,1,false,true,0,\"Lf doses\",\"UCUM\",\"Arb\",\"Clinical\",\"the antigen content  forming 1:1 ratio against 1 unit of antitoxin\",\"1\",\"1\",\"1\",1,false],[false,\"D-antigen unit (polio)\",\"[D'ag'U]\",\"[D'AG'U]\",\"procedure defined amount of a poliomyelitis d-antigen substance\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"DAgU; units\",\"UCUM\",\"Acnc\",\"Clinical\",\"unit of potency of poliovirus vaccine used for poliomyelitis prevention reported as D antigen units/mL. The unit is poliovirus type-specific.\",\"1\",\"1\",\"1\",1,false],[false,\"fibrinogen equivalent units\",\"[FEU]\",\"[FEU]\",\"amount of fibrinogen broken down into the measured d-dimers\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"FEU\",\"UCUM\",\"MCnc\",\"Clinical\",\"Note both the FEU and DDU units are used to report D-dimer measurements. 1 DDU = 1/2 FFU\",\"1\",\"1\",\"1\",1,false],[false,\"ELISA unit\",\"[ELU]\",\"[ELU]\",\"arbitrary ELISA unit\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"Enzyme-Linked Immunosorbent Assay Units; ELU; EL. U\",\"UCUM\",\"ACnc\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"Ehrlich units (urobilinogen)\",\"[EU]\",\"[EU]\",\"Ehrlich unit\",1,[0,0,0,0,0,0,0],null,\"chemical\",false,null,null,1,false,true,0,\"EU/dL; mg{urobilinogen}/dL\",\"UCUM\",\"ACnc\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"neper\",\"Np\",\"NEP\",\"level\",1,[0,0,0,0,0,0,0],\"Np\",\"levels\",true,null,\"ln\",1,true,false,0,\"nepers\",\"UCUM\",\"LogRto\",\"Clinical\",\"logarithmic unit for ratios of measurements of physical field and power quantities, such as gain and loss of electronic signals\",\"1\",null,null,1,false],[false,\"bel\",\"B\",\"B\",\"level\",1,[0,0,0,0,0,0,0],\"B\",\"levels\",true,null,\"lg\",1,true,false,0,\"bels\",\"UCUM\",\"LogRto\",\"Clinical\",\"Logarithm of the ratio of power- or field-type quantities; usually expressed in decibels \",\"1\",null,null,1,false],[false,\"bel sound pressure\",\"B[SPL]\",\"B[SPL]\",\"pressure level\",0.02,[-1,-2,1,0,0,0,0],\"B(SPL)\",\"levels\",true,null,\"lgTimes2\",1,true,false,0,\"bel SPL; B SPL; sound pressure bels\",\"UCUM\",\"LogRto\",\"Clinical\",\"used to measure sound level in acoustics\",\"Pa\",null,null,0.00002,false],[false,\"bel volt\",\"B[V]\",\"B[V]\",\"electric potential level\",1000,[2,-2,1,0,0,-1,0],\"B(V)\",\"levels\",true,null,\"lgTimes2\",1,true,false,0,\"bel V; B V; volts bels\",\"UCUM\",\"LogRtoElp\",\"Clinical\",\"used to express power gain in electrical circuits\",\"V\",null,null,1,false],[false,\"bel millivolt\",\"B[mV]\",\"B[MV]\",\"electric potential level\",1,[2,-2,1,0,0,-1,0],\"B(mV)\",\"levels\",true,null,\"lgTimes2\",1,true,false,0,\"bel mV; B mV; millivolt bels; 10^-3V bels; 10*-3V \",\"UCUM\",\"LogRtoElp\",\"Clinical\",\"used to express power gain in electrical circuits\",\"mV\",null,null,1,false],[false,\"bel microvolt\",\"B[uV]\",\"B[UV]\",\"electric potential level\",0.001,[2,-2,1,0,0,-1,0],\"B(μV)\",\"levels\",true,null,\"lgTimes2\",1,true,false,0,\"bel uV; B uV; microvolts bels; 10^-6V bel; 10*-6V bel\",\"UCUM\",\"LogRto\",\"Clinical\",\"used to express power gain in electrical circuits\",\"uV\",null,null,1,false],[false,\"bel 10 nanovolt\",\"B[10.nV]\",\"B[10.NV]\",\"electric potential level\",0.000010000000000000003,[2,-2,1,0,0,-1,0],\"B(10 nV)\",\"levels\",true,null,\"lgTimes2\",1,true,false,0,\"bel 10 nV; B 10 nV; 10 nanovolts bels\",\"UCUM\",\"LogRtoElp\",\"Clinical\",\"used to express power gain in electrical circuits\",\"nV\",null,null,10,false],[false,\"bel watt\",\"B[W]\",\"B[W]\",\"power level\",1000,[2,-3,1,0,0,0,0],\"B(W)\",\"levels\",true,null,\"lg\",1,true,false,0,\"bel W; b W; b Watt; Watts bels\",\"UCUM\",\"LogRto\",\"Clinical\",\"used to express power\",\"W\",null,null,1,false],[false,\"bel kilowatt\",\"B[kW]\",\"B[KW]\",\"power level\",1000000,[2,-3,1,0,0,0,0],\"B(kW)\",\"levels\",true,null,\"lg\",1,true,false,0,\"bel kW; B kW; kilowatt bel; kW bel; kW B\",\"UCUM\",\"LogRto\",\"Clinical\",\"used to express power\",\"kW\",null,null,1,false],[false,\"stere\",\"st\",\"STR\",\"volume\",1,[3,0,0,0,0,0,0],\"st\",\"misc\",true,null,null,1,false,false,0,\"stère; m3; cubic meter; m^3; meters cubed; metre\",\"UCUM\",\"Vol\",\"Nonclinical\",\"equal to one cubic meter, usually used for measuring firewoord\",\"m3\",\"M3\",\"1\",1,false],[false,\"Ångström\",\"Ao\",\"AO\",\"length\",1.0000000000000002e-10,[1,0,0,0,0,0,0],\"Å\",\"misc\",false,null,null,1,false,false,0,\"Å; Angstroms; Ao; Ångströms\",\"UCUM\",\"Len\",\"Clinical\",\"equal to 10^-10 meters; used to express wave lengths and atom scaled differences \",\"nm\",\"NM\",\"0.1\",0.1,false],[false,\"barn\",\"b\",\"BRN\",\"action area\",9.999999999999999e-29,[2,0,0,0,0,0,0],\"b\",\"misc\",false,null,null,1,false,false,0,\"barns\",\"UCUM\",\"Area\",\"Clinical\",\"used in high-energy physics to express cross-sectional areas\",\"fm2\",\"FM2\",\"100\",100,false],[false,\"technical atmosphere\",\"att\",\"ATT\",\"pressure\",98066499.99999999,[-1,-2,1,0,0,0,0],\"at\",\"misc\",false,null,null,1,false,false,0,\"at; tech atm; tech atmosphere; kgf/cm2; atms; atmospheres\",\"UCUM\",\"Pres\",\"Obsolete\",\"non-SI unit of pressure equal to one kilogram-force per square centimeter\",\"kgf/cm2\",\"KGF/CM2\",\"1\",1,false],[false,\"mho\",\"mho\",\"MHO\",\"electric conductance\",0.001,[-2,1,-1,0,0,2,0],\"mho\",\"misc\",true,null,null,1,false,false,0,\"siemens; ohm reciprocals; Ω^−1; Ω-1 \",\"UCUM\",\"\",\"Obsolete\",\"unit of electric conductance (the inverse of electrical resistance) equal to ohm^-1\",\"S\",\"S\",\"1\",1,false],[false,\"pound per square inch\",\"[psi]\",\"[PSI]\",\"pressure\",6894757.293168359,[-1,-2,1,0,0,0,0],\"psi\",\"misc\",false,null,null,1,false,false,0,\"psi; lb/in2; lb per in2\",\"UCUM\",\"Pres\",\"Clinical\",\"\",\"[lbf_av]/[in_i]2\",\"[LBF_AV]/[IN_I]2\",\"1\",1,false],[false,\"circle - plane angle\",\"circ\",\"CIRC\",\"plane angle\",6.283185307179586,[0,0,0,1,0,0,0],\"circ\",\"misc\",false,null,null,1,false,false,0,\"angles; circles\",\"UCUM\",\"Angle\",\"Clinical\",\"\",\"[pi].rad\",\"[PI].RAD\",\"2\",2,false],[false,\"spere - solid angle\",\"sph\",\"SPH\",\"solid angle\",12.566370614359172,[0,0,0,2,0,0,0],\"sph\",\"misc\",false,null,null,1,false,false,0,\"speres\",\"UCUM\",\"Angle\",\"Clinical\",\"equal to the solid angle of an entire sphere = 4πsr (sr = steradian) \",\"[pi].sr\",\"[PI].SR\",\"4\",4,false],[false,\"metric carat\",\"[car_m]\",\"[CAR_M]\",\"mass\",0.2,[0,0,1,0,0,0,0],\"ct<sub>m</sub>\",\"misc\",false,null,null,1,false,false,0,\"carats; ct; car m\",\"UCUM\",\"Mass\",\"Nonclinical\",\"unit of mass for gemstones\",\"g\",\"G\",\"2e-1\",0.2,false],[false,\"carat of gold alloys\",\"[car_Au]\",\"[CAR_AU]\",\"mass fraction\",0.041666666666666664,[0,0,0,0,0,0,0],\"ct<sub><r>Au</r></sub>\",\"misc\",false,null,null,1,false,false,0,\"karats; k; kt; car au; carats\",\"UCUM\",\"MFr\",\"Nonclinical\",\"unit of purity for gold alloys\",\"/24\",\"/24\",\"1\",1,false],[false,\"Smoot\",\"[smoot]\",\"[SMOOT]\",\"length\",1.7018000000000002,[1,0,0,0,0,0,0],null,\"misc\",false,null,null,1,false,false,0,\"\",\"UCUM\",\"Len\",\"Nonclinical\",\"prank unit of length from MIT\",\"[in_i]\",\"[IN_I]\",\"67\",67,false],[false,\"meter per square seconds per square root of hertz\",\"[m/s2/Hz^(1/2)]\",\"[M/S2/HZ^(1/2)]\",\"amplitude spectral density\",1,[2,-3,0,0,0,0,0],null,\"misc\",false,null,\"sqrt\",1,true,false,0,\"m/s2/(Hz^.5); m/s2/(Hz^(1/2)); m per s2 per Hz^1/2\",\"UCUM\",\"\",\"Constant\",\"measures amplitude spectral density, and is equal to the square root of power spectral density\\n \",\"m2/s4/Hz\",null,null,1,false],[false,\"bit - logarithmic\",\"bit_s\",\"BIT_S\",\"amount of information\",1,[0,0,0,0,0,0,0],\"bit<sub>s</sub>\",\"infotech\",false,null,\"ld\",1,true,false,0,\"bit-s; bit s; bit logarithmic\",\"UCUM\",\"LogA\",\"Nonclinical\",\"defined as the log base 2 of the number of distinct signals; cannot practically be used to express more than 1000 bits\\n\\nIn information theory, the definition of the amount of self-information and information entropy is often expressed with the binary logarithm (log base 2)\",\"1\",null,null,1,false],[false,\"bit\",\"bit\",\"BIT\",\"amount of information\",1,[0,0,0,0,0,0,0],\"bit\",\"infotech\",true,null,null,1,false,false,0,\"bits\",\"UCUM\",\"\",\"Nonclinical\",\"dimensionless information unit of 1 used in computing and digital communications\",\"1\",\"1\",\"1\",1,false],[false,\"byte\",\"By\",\"BY\",\"amount of information\",8,[0,0,0,0,0,0,0],\"B\",\"infotech\",true,null,null,1,false,false,0,\"bytes\",\"UCUM\",\"\",\"Nonclinical\",\"equal to 8 bits\",\"bit\",\"bit\",\"8\",8,false],[false,\"baud\",\"Bd\",\"BD\",\"signal transmission rate\",1,[0,1,0,0,0,0,0],\"Bd\",\"infotech\",true,null,\"inv\",1,false,false,0,\"Bd; bauds\",\"UCUM\",\"Freq\",\"Nonclinical\",\"unit to express rate in symbols per second or pulses per second. \",\"s\",\"/s\",\"1\",1,false],[false,\"per twelve hour\",\"/(12.h)\",\"/HR\",\"\",0.000023148148148148147,[0,-1,0,0,0,0,0],\"/h\",null,false,null,null,1,false,false,0,\"per 12 hours; 12hrs; 12 hrs; /12hrs\",\"LOINC\",\"Rat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per arbitrary unit\",\"/[arb'U]\",\"/[ARB'U]\",\"\",1,[0,0,0,0,0,0,0],\"/arb/ U\",null,false,null,null,1,false,true,0,\"/arbU\",\"LOINC\",\"InvA \",\"Clinical\",\"\",null,null,null,null,false],[false,\"per high power field\",\"/[HPF]\",\"/[HPF]\",\"\",1,[0,0,0,0,0,0,0],\"/HPF\",null,false,null,null,1,false,false,0,\"/HPF; per HPF\",\"LOINC\",\"Naric\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per international unit\",\"/[IU]\",\"/[IU]\",\"\",1,[0,0,0,0,0,0,0],\"/i/U.\",null,false,null,null,1,false,true,0,\"international units; /IU; per IU\",\"LOINC\",\"InvA\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",null,null,null,null,false],[false,\"per low power field\",\"/[LPF]\",\"/[LPF]\",\"\",1,[0,0,0,0,0,0,0],\"/LPF\",null,false,null,null,1,false,false,0,\"/LPF; per LPF\",\"LOINC\",\"Naric\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per 10 billion  \",\"/10*10\",\"/10*10\",\"\",1e-10,[0,0,0,0,0,0,0],\"/10<sup>10<.sup>\",null,false,null,null,1,false,false,0,\"/10^10; per 10*10\",\"LOINC\",\"NFr\",\"Clinical\",\"used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator\",null,null,null,null,false],[false,\"per trillion \",\"/10*12\",\"/10*12\",\"\",1e-12,[0,0,0,0,0,0,0],\"/10<sup>12<.sup>\",null,false,null,null,1,false,false,0,\"/10^12; per 10*12\",\"LOINC\",\"NFr\",\"Clinical\",\"used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator\",null,null,null,null,false],[false,\"per thousand\",\"/10*3\",\"/10*3\",\"\",0.001,[0,0,0,0,0,0,0],\"/10<sup>3<.sup>\",null,false,null,null,1,false,false,0,\"/10^3; per 10*3\",\"LOINC\",\"NFr\",\"Clinical\",\"used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator\",null,null,null,null,false],[false,\"per million\",\"/10*6\",\"/10*6\",\"\",0.000001,[0,0,0,0,0,0,0],\"/10<sup>6<.sup>\",null,false,null,null,1,false,false,0,\"/10^6; per 10*6;\",\"LOINC\",\"NFr\",\"Clinical\",\"used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator\",null,null,null,null,false],[false,\"per billion\",\"/10*9\",\"/10*9\",\"\",1e-9,[0,0,0,0,0,0,0],\"/10<sup>9<.sup>\",null,false,null,null,1,false,false,0,\"/10^9; per 10*9\",\"LOINC\",\"NFr\",\"Clinical\",\"used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator\",null,null,null,null,false],[false,\"per 100\",\"/100\",\"\",\"\",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"per hundred; 10^2; 10*2\",\"LOINC\",\"NFr\",\"Clinical\",\"used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator\",null,null,null,null,false],[false,\"per 100 cells\",\"/100{cells}\",\"\",\"\",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"/100 cells; /100cells; per hundred\",\"LOINC\",\"EntMass; EntNum; NFr\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per 100 neutrophils\",\"/100{neutrophils}\",\"\",\"\",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"/100 neutrophils; /100neutrophils; per hundred\",\"LOINC\",\"EntMass; EntNum; NFr\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per 100 spermatozoa\",\"/100{spermatozoa}\",\"\",\"\",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"/100 spermatozoa; /100spermatozoa; per hundred\",\"LOINC\",\"NFr\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per 100 white blood cells\",\"/100{WBCs}\",\"\",\"\",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"/100 WBCs; /100WBCs; per hundred\",\"LOINC\",\"Ratio; NFr\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per year\",\"/a\",\"/ANN\",\"\",3.168808781402895e-8,[0,-1,0,0,0,0,0],\"/a\",null,false,null,null,1,false,false,0,\"/Years; /yrs; yearly\",\"LOINC\",\"NRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per centimeter of water\",\"/cm[H2O]\",\"/CM[H2O]\",\"\",0.000010197162129779282,[1,2,-1,0,0,0,0],\"/cm HO<sub><r>2<.r></sub>\",null,false,null,null,1,false,false,0,\"/cmH2O; /cm H2O; centimeters; centimetres\",\"LOINC\",\"InvPress\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per day\",\"/d\",\"/D\",\"\",0.000011574074074074073,[0,-1,0,0,0,0,0],\"/d\",null,false,null,null,1,false,false,0,\"/dy; per day\",\"LOINC\",\"NRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per deciliter\",\"/dL\",\"/DL\",\"\",10000,[-3,0,0,0,0,0,0],\"/dL\",null,false,null,null,1,false,false,0,\"per dL; /deciliter; decilitre\",\"LOINC\",\"NCnc\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per gram\",\"/g\",\"/G\",\"\",1,[0,0,-1,0,0,0,0],\"/g\",null,false,null,null,1,false,false,0,\"/gm; /gram; per g\",\"LOINC\",\"NCnt\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per hour\",\"/h\",\"/HR\",\"\",0.0002777777777777778,[0,-1,0,0,0,0,0],\"/h\",null,false,null,null,1,false,false,0,\"/hr; /hour; per hr\",\"LOINC\",\"NRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per kilogram\",\"/kg\",\"/KG\",\"\",0.001,[0,0,-1,0,0,0,0],\"/kg\",null,false,null,null,1,false,false,0,\"per kg; per kilogram\",\"LOINC\",\"NCnt\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per liter\",\"/L\",\"/L\",\"\",1000,[-3,0,0,0,0,0,0],\"/L\",null,false,null,null,1,false,false,0,\"/liter; litre\",\"LOINC\",\"NCnc\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per square meter\",\"/m2\",\"/M2\",\"\",1,[-2,0,0,0,0,0,0],\"/m<sup>2<.sup>\",null,false,null,null,1,false,false,0,\"/m^2; /m*2; /sq. m; per square meter; meter squared; metre\",\"LOINC\",\"Naric\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per cubic meter\",\"/m3\",\"/M3\",\"\",1,[-3,0,0,0,0,0,0],\"/m<sup>3<.sup>\",null,false,null,null,1,false,false,0,\"/m^3; /m*3; /cu. m; per cubic meter; meter cubed; per m3; metre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per milligram\",\"/mg\",\"/MG\",\"\",1000,[0,0,-1,0,0,0,0],\"/mg\",null,false,null,null,1,false,false,0,\"/milligram; per mg\",\"LOINC\",\"NCnt\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per minute\",\"/min\",\"/MIN\",\"\",0.016666666666666666,[0,-1,0,0,0,0,0],\"/min\",null,false,null,null,1,false,false,0,\"/minute; per mins; breaths beats per minute\",\"LOINC\",\"NRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per milliliter\",\"/mL\",\"/ML\",\"\",1000000,[-3,0,0,0,0,0,0],\"/mL\",null,false,null,null,1,false,false,0,\"/milliliter; per mL; millilitre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per millimeter\",\"/mm\",\"/MM\",\"\",1000,[-1,0,0,0,0,0,0],\"/mm\",null,false,null,null,1,false,false,0,\"/millimeter; per mm; millimetre\",\"LOINC\",\"InvLen\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per month\",\"/mo\",\"/MO\",\"\",3.802570537683474e-7,[0,-1,0,0,0,0,0],\"/mo\",null,false,null,null,1,false,false,0,\"/month; per mo; monthly; month\",\"LOINC\",\"NRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per second\",\"/s\",\"/S\",\"\",1,[0,-1,0,0,0,0,0],\"/s\",null,false,null,null,1,false,false,0,\"/second; /sec; per sec; frequency; Hertz; Herz; Hz; becquerels; Bq; s-1; s^-1\",\"LOINC\",\"NRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per enzyme unit\",\"/U\",\"/U\",\"\",9.963241120049633e-17,[0,1,0,0,0,0,0],\"/U\",null,false,null,null,1,false,false,-1,\"/enzyme units; per U\",\"LOINC\",\"InvC; NCat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",null,null,null,null,false],[false,\"per microliter\",\"/uL\",\"/UL\",\"\",999999999.9999999,[-3,0,0,0,0,0,0],\"/μL\",null,false,null,null,1,false,false,0,\"/microliter; microlitre; /mcl; per uL\",\"LOINC\",\"ACnc\",\"Clinical\",\"\",null,null,null,null,false],[false,\"per week\",\"/wk\",\"/WK\",\"\",0.0000016534391534391535,[0,-1,0,0,0,0,0],\"/wk\",null,false,null,null,1,false,false,0,\"/week; per wk; weekly, weeks\",\"LOINC\",\"NRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"APL unit per milliliter\",\"[APL'U]/mL\",\"[APL'U]/ML\",\"biologic activity of anticardiolipin IgA\",1000000,[-3,0,0,0,0,0,0],\"/mL\",\"chemical\",false,null,null,1,false,true,0,\"APL/mL; APL'U/mL; APL U/mL; APL/milliliter; IgA anticardiolipin units per milliliter; IgA Phospholipid Units; millilitre; biologic activity of\",\"LOINC\",\"ACnc\",\"Clinical\",\"Units for an anti phospholipid syndrome test\",\"1\",\"1\",\"1\",1,false],[false,\"arbitrary unit per milliliter\",\"[arb'U]/mL\",\"[ARB'U]/ML\",\"arbitrary\",1000000,[-3,0,0,0,0,0,0],\"(arb. U)/mL\",\"chemical\",false,null,null,1,false,true,0,\"arb'U/mL; arbU/mL; arb U/mL; arbitrary units per milliliter; millilitre\",\"LOINC\",\"ACnc\",\"Clinical\",\"relative unit of measurement to show the ratio of test measurement to reference measurement\",\"1\",\"1\",\"1\",1,false],[false,\"colony forming units per liter\",\"[CFU]/L\",\"[CFU]/L\",\"amount of a proliferating organism\",1000,[-3,0,0,0,0,0,0],\"CFU/L\",\"chemical\",false,null,null,1,false,true,0,\"CFU per Liter; CFU/L\",\"LOINC\",\"NCnc\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"colony forming units per milliliter\",\"[CFU]/mL\",\"[CFU]/ML\",\"amount of a proliferating organism\",1000000,[-3,0,0,0,0,0,0],\"CFU/mL\",\"chemical\",false,null,null,1,false,true,0,\"CFU per mL; CFU/mL\",\"LOINC\",\"NCnc\",\"Clinical\",\"\",\"1\",\"1\",\"1\",1,false],[false,\"foot per foot - US\",\"[ft_us]/[ft_us]\",\"[FT_US]/[FT_US]\",\"length\",1,[0,0,0,0,0,0,0],\"(ft<sub>us</sub>)/(ft<sub>us</sub>)\",\"us-lengths\",false,null,null,1,false,false,0,\"ft/ft; ft per ft; feet per feet; visual acuity\",\"\",\"LenRto\",\"Clinical\",\"distance ratio to measure 20:20 vision\",\"m/3937\",\"M/3937\",\"1200\",1200,false],[false,\"GPL unit per milliliter\",\"[GPL'U]/mL\",\"[GPL'U]/ML\",\"biologic activity of anticardiolipin IgG\",1000000,[-3,0,0,0,0,0,0],\"/mL\",\"chemical\",false,null,null,1,false,true,0,\"GPL U/mL; GPL'U/mL; GPL/mL; GPL U per mL; IgG Phospholipid Units per milliliters; IgG anticardiolipin units; millilitres \",\"LOINC\",\"ACnc; AMass\",\"Clinical\",\"Units for an antiphospholipid test\",\"1\",\"1\",\"1\",1,false],[false,\"international unit per 2 hour\",\"[IU]/(2.h)\",\"[IU]/HR\",\"arbitrary\",0.0001388888888888889,[0,-1,0,0,0,0,0],\"(i.U.)/h\",\"chemical\",true,null,null,1,false,true,0,\"IU/2hrs; IU/2 hours; IU per 2 hrs; international units per 2 hours\",\"LOINC\",\"ARat\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per 24 hour\",\"[IU]/(24.h)\",\"[IU]/HR\",\"arbitrary\",0.000011574074074074073,[0,-1,0,0,0,0,0],\"(i.U.)/h\",\"chemical\",true,null,null,1,false,true,0,\"IU/24hr; IU/24 hours; IU per 24 hrs; international units per 24 hours\",\"LOINC\",\"ARat\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per day\",\"[IU]/d\",\"[IU]/D\",\"arbitrary\",0.000011574074074074073,[0,-1,0,0,0,0,0],\"(i.U.)/d\",\"chemical\",true,null,null,1,false,true,0,\"IU/dy; IU/days; IU per dys; international units per day\",\"LOINC\",\"ARat\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per deciliter\",\"[IU]/dL\",\"[IU]/DL\",\"arbitrary\",10000,[-3,0,0,0,0,0,0],\"(i.U.)/dL\",\"chemical\",true,null,null,1,false,true,0,\"IU/dL; IU per dL; international units per deciliters; decilitres\",\"LOINC\",\"ACnc\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per gram\",\"[IU]/g\",\"[IU]/G\",\"arbitrary\",1,[0,0,-1,0,0,0,0],\"(i.U.)/g\",\"chemical\",true,null,null,1,false,true,0,\"IU/gm; IU/gram; IU per gm; IU per g; international units per gram\",\"LOINC\",\"ACnt\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per hour\",\"[IU]/h\",\"[IU]/HR\",\"arbitrary\",0.0002777777777777778,[0,-1,0,0,0,0,0],\"(i.U.)/h\",\"chemical\",true,null,null,1,false,true,0,\"IU/hrs; IU per hours; international units per hour\",\"LOINC\",\"ARat\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per kilogram\",\"[IU]/kg\",\"[IU]/KG\",\"arbitrary\",0.001,[0,0,-1,0,0,0,0],\"(i.U.)/kg\",\"chemical\",true,null,null,1,false,true,0,\"IU/kg; IU/kilogram; IU per kg; units\",\"LOINC\",\"ACnt\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per kilogram per day\",\"[IU]/kg/d\",\"[IU]/KG/D\",\"arbitrary\",1.1574074074074074e-8,[0,-1,-1,0,0,0,0],\"(i.U.)/kg/d\",\"chemical\",true,null,null,1,false,true,0,\"IU/kg/dy; IU/kg/day; IU/kilogram/day; IU per kg per day; units\",\"LOINC\",\"ACntRat\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per liter\",\"[IU]/L\",\"[IU]/L\",\"arbitrary\",1000,[-3,0,0,0,0,0,0],\"(i.U.)/L\",\"chemical\",true,null,null,1,false,true,0,\"IU/L; IU/liter; IU per liter; units; litre\",\"LOINC\",\"ACnc\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per minute\",\"[IU]/min\",\"[IU]/MIN\",\"arbitrary\",0.016666666666666666,[0,-1,0,0,0,0,0],\"(i.U.)/min\",\"chemical\",true,null,null,1,false,true,0,\"IU/min; IU/minute; IU per minute; international units\",\"LOINC\",\"ARat\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"international unit per milliliter\",\"[IU]/mL\",\"[IU]/ML\",\"arbitrary\",1000000,[-3,0,0,0,0,0,0],\"(i.U.)/mL\",\"chemical\",true,null,null,1,false,true,0,\"IU/mL; IU per mL; international units per milliliter; millilitre\",\"LOINC\",\"ACnc\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"MPL unit per milliliter\",\"[MPL'U]/mL\",\"[MPL'U]/ML\",\"biologic activity of anticardiolipin IgM\",1000000,[-3,0,0,0,0,0,0],\"/mL\",\"chemical\",false,null,null,1,false,true,0,\"MPL/mL; MPL U/mL; MPL'U/mL; IgM anticardiolipin units; IgM Phospholipid Units; millilitre \",\"LOINC\",\"ACnc\",\"Clinical\",\"units for antiphospholipid test\\n\",\"1\",\"1\",\"1\",1,false],[false,\"number per high power field\",\"{#}/[HPF]\",\"/[HPF]\",\"\",1,[0,0,0,0,0,0,0],\"/HPF\",null,false,null,null,1,false,false,0,\"#/HPF; # per HPF; number/HPF; numbers per high power field\",\"LOINC\",\"Naric\",\"Clinical\",\"\",null,null,null,null,false],[false,\"number per low power field\",\"{#}/[LPF]\",\"/[LPF]\",\"\",1,[0,0,0,0,0,0,0],\"/LPF\",null,false,null,null,1,false,false,0,\"#/LPF; # per LPF; number/LPF; numbers per low power field\",\"LOINC\",\"Naric\",\"Clinical\",\"\",null,null,null,null,false],[false,\"IgA antiphosphatidylserine unit \",\"{APS'U}\",\"\",\"\",1,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"APS Unit; Phosphatidylserine Antibody IgA Units\",\"LOINC\",\"ACnc\",\"Clinical\",\"unit for antiphospholipid test\",null,null,null,null,false],[false,\"EIA index\",\"{EIA_index}\",\"\",\"\",1,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"enzyme immunoassay index\",\"LOINC\",\"ACnc\",\"Clinical\",\"\",null,null,null,null,false],[false,\"kaolin clotting time\",\"{KCT'U}\",\"\",\"\",1,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"KCT\",\"LOINC\",\"Time\",\"Clinical\",\"sensitive test to detect lupus anticoagulants; measured in seconds\",null,null,null,null,false],[false,\"IgM antiphosphatidylserine unit\",\"{MPS'U}\",\"\",\"\",1,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,\"Phosphatidylserine Antibody IgM Measurement \",\"LOINC\",\"ACnc\",\"Clinical\",\"\",null,null,null,null,false],[false,\"trillion per liter\",\"10*12/L\",\"(10*12)/L\",\"number\",1000000000000000,[-3,0,0,0,0,0,0],\"(10<sup>12</sup>)/L\",\"dimless\",false,null,null,1,false,false,0,\"10^12/L; 10*12 per Liter; trillion per liter; litre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"10^3 (used for cell count)\",\"10*3\",\"10*3\",\"number\",1000,[0,0,0,0,0,0,0],\"10<sup>3</sup>\",\"dimless\",false,null,null,1,false,false,0,\"10^3; thousand\",\"LOINC\",\"Num\",\"Clinical\",\"usually used for counting entities (e.g. blood cells) per volume\",\"1\",\"1\",\"10\",10,false],[false,\"thousand per liter\",\"10*3/L\",\"(10*3)/L\",\"number\",1000000,[-3,0,0,0,0,0,0],\"(10<sup>3</sup>)/L\",\"dimless\",false,null,null,1,false,false,0,\"10^3/L; 10*3 per liter; litre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"thousand per milliliter\",\"10*3/mL\",\"(10*3)/ML\",\"number\",1000000000,[-3,0,0,0,0,0,0],\"(10<sup>3</sup>)/mL\",\"dimless\",false,null,null,1,false,false,0,\"10^3/mL; 10*3 per mL; thousand per milliliter; millilitre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"thousand per microliter\",\"10*3/uL\",\"(10*3)/UL\",\"number\",999999999999.9999,[-3,0,0,0,0,0,0],\"(10<sup>3</sup>)/μL\",\"dimless\",false,null,null,1,false,false,0,\"10^3/uL; 10*3 per uL; thousand per microliter; microlitre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"10 thousand per microliter\",\"10*4/uL\",\"(10*4)/UL\",\"number\",10000000000000,[-3,0,0,0,0,0,0],\"(10<sup>4</sup>)/μL\",\"dimless\",false,null,null,1,false,false,0,\"10^4/uL; 10*4 per uL; microlitre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"10^5 \",\"10*5\",\"10*5\",\"number\",100000,[0,0,0,0,0,0,0],\"10<sup>5</sup>\",\"dimless\",false,null,null,1,false,false,0,\"one hundred thousand\",\"LOINC\",\"Num\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"10^6\",\"10*6\",\"10*6\",\"number\",1000000,[0,0,0,0,0,0,0],\"10<sup>6</sup>\",\"dimless\",false,null,null,1,false,false,0,\"\",\"LOINC\",\"Num\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"million colony forming unit per liter\",\"10*6.[CFU]/L\",\"(10*6).[CFU]/L\",\"number\",1000000000,[-3,0,0,0,0,0,0],\"(10<sup>6</sup>).CFU/L\",\"dimless\",false,null,null,1,false,true,0,\"10*6 CFU/L; 10^6 CFU/L; 10^6CFU; 10^6 CFU per liter; million colony forming units; litre\",\"LOINC\",\"ACnc\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"million international unit\",\"10*6.[IU]\",\"(10*6).[IU]\",\"number\",1000000,[0,0,0,0,0,0,0],\"(10<sup>6</sup>).(i.U.)\",\"dimless\",false,null,null,1,false,true,0,\"10*6 IU; 10^6 IU; international units\",\"LOINC\",\"arb\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"1\",\"1\",\"10\",10,false],[false,\"million per 24 hour\",\"10*6/(24.h)\",\"(10*6)/HR\",\"number\",11.574074074074074,[0,-1,0,0,0,0,0],\"(10<sup>6</sup>)/h\",\"dimless\",false,null,null,1,false,false,0,\"10*6/24hrs; 10^6/24 hrs; 10*6 per 24 hrs; 10^6 per 24 hours\",\"LOINC\",\"NRat\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"million per kilogram\",\"10*6/kg\",\"(10*6)/KG\",\"number\",1000,[0,0,-1,0,0,0,0],\"(10<sup>6</sup>)/kg\",\"dimless\",false,null,null,1,false,false,0,\"10^6/kg; 10*6 per kg; 10*6 per kilogram; millions\",\"LOINC\",\"NCnt\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"million per liter\",\"10*6/L\",\"(10*6)/L\",\"number\",1000000000,[-3,0,0,0,0,0,0],\"(10<sup>6</sup>)/L\",\"dimless\",false,null,null,1,false,false,0,\"10^6/L; 10*6 per Liter; 10^6 per Liter; litre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"million per milliliter\",\"10*6/mL\",\"(10*6)/ML\",\"number\",1000000000000,[-3,0,0,0,0,0,0],\"(10<sup>6</sup>)/mL\",\"dimless\",false,null,null,1,false,false,0,\"10^6/mL; 10*6 per mL; 10*6 per milliliter; millilitre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"million per microliter\",\"10*6/uL\",\"(10*6)/UL\",\"number\",1000000000000000,[-3,0,0,0,0,0,0],\"(10<sup>6</sup>)/μL\",\"dimless\",false,null,null,1,false,false,0,\"10^6/uL; 10^6 per uL; 10^6/mcl; 10^6 per mcl; 10^6 per microliter; microlitre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"10^8\",\"10*8\",\"10*8\",\"number\",100000000,[0,0,0,0,0,0,0],\"10<sup>8</sup>\",\"dimless\",false,null,null,1,false,false,0,\"100 million; one hundred million; 10^8\",\"LOINC\",\"Num\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"billion per liter\",\"10*9/L\",\"(10*9)/L\",\"number\",1000000000000,[-3,0,0,0,0,0,0],\"(10<sup>9</sup>)/L\",\"dimless\",false,null,null,1,false,false,0,\"10^9/L; 10*9 per Liter; litre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"billion per milliliter\",\"10*9/mL\",\"(10*9)/ML\",\"number\",1000000000000000,[-3,0,0,0,0,0,0],\"(10<sup>9</sup>)/mL\",\"dimless\",false,null,null,1,false,false,0,\"10^9/mL; 10*9 per mL; 10^9 per mL; 10*9 per milliliter; millilitre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"billion per microliter\",\"10*9/uL\",\"(10*9)/UL\",\"number\",1000000000000000000,[-3,0,0,0,0,0,0],\"(10<sup>9</sup>)/μL\",\"dimless\",false,null,null,1,false,false,0,\"10^9/uL; 10^9 per uL; 10^9/mcl; 10^9 per mcl; 10*9 per uL; 10*9 per mcl; 10*9/mcl; 10^9 per microliter; microlitre\",\"LOINC\",\"NCncn\",\"Clinical\",\"\",\"1\",\"1\",\"10\",10,false],[false,\"10 liter per minute per square meter\",\"10.L/(min.m2)\",\"L/(MIN.M2)\",\"\",0.00016666666666666666,[1,-1,0,0,0,0,0],\"L/(min.(m<sup>2</sup>))\",null,false,null,null,1,false,false,0,\"10 liters per minutes per square meter; 10 L per min per m2; m^2; 10 L/(min*m2); 10L/(min*m^2); litres; sq. meter; metre; meters squared\",\"LOINC\",\"ArVRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"10 liter per minute\",\"10.L/min\",\"L/MIN\",\"\",0.00016666666666666666,[3,-1,0,0,0,0,0],\"L/min\",null,false,null,null,1,false,false,0,\"10 liters per minute; 10 L per min; 10L; 10 L/min; litre\",\"LOINC\",\"VRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"10 micronewton second per centimeter to the fifth power per square meter\",\"10.uN.s/(cm5.m2)\",\"(UN.S)/(CM5.M2)\",\"\",100000000,[-6,-1,1,0,0,0,0],\"(μN.s)/(cm<sup>5</sup>).(m<sup>2</sup>)\",null,false,null,null,1,false,false,0,\"dyne seconds per centimeter5 and square meter; dyn.s/(cm5.m2); dyn.s/cm5/m2; cm^5; m^2\",\"LOINC\",\"\",\"Clinical\",\"unit to measure systemic vascular resistance per body surface area\",null,null,null,null,false],[false,\"24 hour\",\"24.h\",\"HR\",\"\",86400,[0,1,0,0,0,0,0],\"h\",null,false,null,null,1,false,false,0,\"24hrs; 24 hrs; 24 hours; days; dy\",\"LOINC\",\"Time\",\"Clinical\",\"\",null,null,null,null,false],[false,\"ampere per meter\",\"A/m\",\"A/M\",\"electric current\",1,[-1,-1,0,0,0,1,0],\"A/m\",\"si\",true,null,null,1,false,false,0,\"A/m; amp/meter; magnetic field strength; H; B; amperes per meter; metre\",\"LOINC\",\"\",\"Clinical\",\"unit of magnetic field strength\",\"C/s\",\"C/S\",\"1\",1,false],[true,\"centigram\",\"cg\",\"CG\",\"mass\",0.01,[0,0,1,0,0,0,0],\"cg\",null,false,\"M\",null,1,false,false,0,\"centigrams; cg; cgm\",\"LOINC\",\"Mass\",\"Clinical\",\"\",null,null,null,null,false],[false,\"centiliter\",\"cL\",\"CL\",\"volume\",0.00001,[3,0,0,0,0,0,0],\"cL\",\"iso1000\",true,null,null,1,false,false,0,\"centiliters; centilitres\",\"LOINC\",\"Vol\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[true,\"centimeter\",\"cm\",\"CM\",\"length\",0.01,[1,0,0,0,0,0,0],\"cm\",null,false,\"L\",null,1,false,false,0,\"centimeters; centimetres\",\"LOINC\",\"Len\",\"Clinical\",\"\",null,null,null,null,false],[false,\"centimeter of water\",\"cm[H2O]\",\"CM[H2O]\",\"pressure\",98066.5,[-1,-2,1,0,0,0,0],\"cm HO<sub><r>2</r></sub>\",\"clinical\",true,null,null,1,false,false,0,\"cm H2O; cmH2O; centimetres; pressure\",\"LOINC\",\"Pres\",\"Clinical\",\"unit of pressure mostly applies to blood pressure\",\"kPa\",\"KPAL\",\"980665e-5\",9.80665,false],[false,\"centimeter of water per liter per second\",\"cm[H2O]/L/s\",\"(CM[H2O]/L)/S\",\"pressure\",98066500,[-4,-3,1,0,0,0,0],\"(cm HO<sub><r>2</r></sub>)/L/s\",\"clinical\",true,null,null,1,false,false,0,\"cm[H2O]/(L/s); cm[H2O].s/L; cm H2O/L/sec; cmH2O/L/sec; cmH2O/Liter; cmH2O per L per secs; centimeters of water per liters per second; centimetres; litres; cm[H2O]/(L/s)\",\"LOINC\",\"PresRat\",\"Clinical\",\"unit used to measure mean pulmonary resistance\",\"kPa\",\"KPAL\",\"980665e-5\",9.80665,false],[false,\"centimeter of water per second per meter\",\"cm[H2O]/s/m\",\"(CM[H2O]/S)/M\",\"pressure\",98066.5,[-2,-3,1,0,0,0,0],\"(cm HO<sub><r>2</r></sub>)/s/m\",\"clinical\",true,null,null,1,false,false,0,\"cm[H2O]/(s.m); cm H2O/s/m; cmH2O; cmH2O/sec/m; cmH2O per secs per meters; centimeters of water per seconds per meter; centimetres; metre\",\"LOINC\",\"PresRat\",\"Clinical\",\"unit used to measure pulmonary pressure time product\",\"kPa\",\"KPAL\",\"980665e-5\",9.80665,false],[false,\"centimeter of mercury\",\"cm[Hg]\",\"CM[HG]\",\"pressure\",1333220,[-1,-2,1,0,0,0,0],\"cm Hg\",\"clinical\",true,null,null,1,false,false,0,\"centimeters of mercury; centimetres; cmHg; cm Hg\",\"LOINC\",\"Pres\",\"Clinical\",\"unit of pressure where 1 cmHg = 10 torr\",\"kPa\",\"KPAL\",\"133.3220\",133.322,false],[true,\"square centimeter\",\"cm2\",\"CM2\",\"length\",0.0001,[2,0,0,0,0,0,0],\"cm<sup>2</sup>\",null,false,\"L\",null,1,false,false,0,\"cm^2; sq cm; centimeters squared; square centimeters; centimetre; area\",\"LOINC\",\"Area\",\"Clinical\",\"\",null,null,null,null,false],[true,\"square centimeter per second\",\"cm2/s\",\"CM2/S\",\"length\",0.0001,[2,-1,0,0,0,0,0],\"(cm<sup>2</sup>)/s\",null,false,\"L\",null,1,false,false,0,\"cm^2/sec; square centimeters per second; sq cm per sec; cm2; centimeters squared; centimetres\",\"LOINC\",\"AreaRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"centipoise\",\"cP\",\"CP\",\"dynamic viscosity\",1,[-1,-1,1,0,0,0,0],\"cP\",\"cgs\",true,null,null,1,false,false,0,\"cps; centiposes\",\"LOINC\",\"Visc\",\"Clinical\",\"unit of dynamic viscosity in the CGS system with base units: 10^−3 Pa.s = 1 mPa·.s (1 millipascal second)\",\"dyn.s/cm2\",\"DYN.S/CM2\",\"1\",1,false],[false,\"centistoke\",\"cSt\",\"CST\",\"kinematic viscosity\",0.0000010000000000000002,[2,-1,0,0,0,0,0],\"cSt\",\"cgs\",true,null,null,1,false,false,0,\"centistokes\",\"LOINC\",\"Visc\",\"Clinical\",\"unit for kinematic viscosity with base units of mm^2/s (square millimeter per second)\",\"cm2/s\",\"CM2/S\",\"1\",1,false],[false,\"dekaliter per minute\",\"daL/min\",\"DAL/MIN\",\"volume\",0.00016666666666666666,[3,-1,0,0,0,0,0],\"daL/min\",\"iso1000\",true,null,null,1,false,false,0,\"dekalitres; dekaliters per minute; per min\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"dekaliter per minute per square meter\",\"daL/min/m2\",\"(DAL/MIN)/M2\",\"volume\",0.00016666666666666666,[1,-1,0,0,0,0,0],\"(daL/min)/(m<sup>2</sup>)\",\"iso1000\",true,null,null,1,false,false,0,\"daL/min/m^2; daL/minute/m2; sq. meter; dekaliters per minutes per square meter; meter squared; dekalitres; metre\",\"LOINC\",\"ArVRat\",\"Clinical\",\"The area usually is the body surface area used to normalize cardiovascular measures for patient's size\",\"l\",null,\"1\",1,false],[false,\"decibel\",\"dB\",\"DB\",\"level\",1,[0,0,0,0,0,0,0],\"dB\",\"levels\",true,null,\"lg\",0.1,true,false,0,\"decibels\",\"LOINC\",\"LogRto\",\"Clinical\",\"unit most commonly used in acoustics as unit of sound pressure level. (also see B[SPL] or bel sound pressure level). \",\"1\",null,null,1,false],[false,\"degree per second\",\"deg/s\",\"DEG/S\",\"plane angle\",0.017453292519943295,[0,-1,0,1,0,0,0],\"°/s\",\"iso1000\",false,null,null,1,false,false,0,\"deg/sec; deg per sec; °/sec; twist rate; angular speed; rotational speed\",\"LOINC\",\"ARat\",\"Clinical\",\"unit of angular (rotational) speed used to express turning rate\",\"[pi].rad/360\",\"[PI].RAD/360\",\"2\",2,false],[true,\"decigram\",\"dg\",\"DG\",\"mass\",0.1,[0,0,1,0,0,0,0],\"dg\",null,false,\"M\",null,1,false,false,0,\"decigrams; dgm; 0.1 grams; 1/10 gm\",\"LOINC\",\"Mass\",\"Clinical\",\"equal to 1/10 gram\",null,null,null,null,false],[false,\"deciliter\",\"dL\",\"DL\",\"volume\",0.0001,[3,0,0,0,0,0,0],\"dL\",\"iso1000\",true,null,null,1,false,false,0,\"deciliters; decilitres; 0.1 liters; 1/10 L\",\"LOINC\",\"Vol\",\"Clinical\",\"equal to 1/10 liter\",\"l\",null,\"1\",1,false],[true,\"decimeter\",\"dm\",\"DM\",\"length\",0.1,[1,0,0,0,0,0,0],\"dm\",null,false,\"L\",null,1,false,false,0,\"decimeters; decimetres; 0.1 meters; 1/10 m; 10 cm; centimeters\",\"LOINC\",\"Len\",\"Clinical\",\"equal to 1/10 meter or 10 centimeters\",null,null,null,null,false],[true,\"square decimeter per square second\",\"dm2/s2\",\"DM2/S2\",\"length\",0.010000000000000002,[2,-2,0,0,0,0,0],\"(dm<sup>2</sup>)/(s<sup>2</sup>)\",null,false,\"L\",null,1,false,false,0,\"dm2 per s2; dm^2/s^2; decimeters squared per second squared; sq dm; sq sec\",\"LOINC\",\"EngMass (massic energy)\",\"Clinical\",\"units for energy per unit mass or Joules per kilogram (J/kg = kg.m2/s2/kg = m2/s2) \",null,null,null,null,false],[false,\"dyne second per centimeter per square meter\",\"dyn.s/(cm.m2)\",\"(DYN.S)/(CM.M2)\",\"force\",1,[-2,-1,1,0,0,0,0],\"(dyn.s)/(cm.(m<sup>2</sup>))\",\"cgs\",true,null,null,1,false,false,0,\"(dyn*s)/(cm*m2); (dyn*s)/(cm*m^2); dyn s per cm per m2; m^2; dyne seconds per centimeters per square meter; centimetres; sq. meter; squared\",\"LOINC\",\"\",\"Clinical\",\"\",\"g.cm/s2\",\"G.CM/S2\",\"1\",1,false],[false,\"dyne second per centimeter\",\"dyn.s/cm\",\"(DYN.S)/CM\",\"force\",1,[0,-1,1,0,0,0,0],\"(dyn.s)/cm\",\"cgs\",true,null,null,1,false,false,0,\"(dyn*s)/cm; dyn sec per cm; seconds; centimetre; dyne seconds\",\"LOINC\",\"\",\"Clinical\",\"\",\"g.cm/s2\",\"G.CM/S2\",\"1\",1,false],[false,\"equivalent per liter\",\"eq/L\",\"EQ/L\",\"amount of substance\",6.0221366999999994e+26,[-3,0,0,0,0,0,0],\"eq/L\",\"chemical\",true,null,null,1,false,false,1,\"eq/liter; eq/litre; eqs; equivalents per liter; litre\",\"LOINC\",\"SCnc\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"equivalent per milliliter\",\"eq/mL\",\"EQ/ML\",\"amount of substance\",6.0221367e+29,[-3,0,0,0,0,0,0],\"eq/mL\",\"chemical\",true,null,null,1,false,false,1,\"equivalent/milliliter; equivalents per milliliter; eq per mL; millilitre\",\"LOINC\",\"SCnc\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"equivalent per millimole\",\"eq/mmol\",\"EQ/MMOL\",\"amount of substance\",1000,[0,0,0,0,0,0,0],\"eq/mmol\",\"chemical\",true,null,null,1,false,false,0,\"equivalent/millimole; equivalents per millimole; eq per mmol\",\"LOINC\",\"SRto\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"equivalent per micromole\",\"eq/umol\",\"EQ/UMOL\",\"amount of substance\",1000000,[0,0,0,0,0,0,0],\"eq/μmol\",\"chemical\",true,null,null,1,false,false,0,\"equivalent/micromole; equivalents per micromole; eq per umol\",\"LOINC\",\"SRto\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[true,\"femtogram\",\"fg\",\"FG\",\"mass\",1e-15,[0,0,1,0,0,0,0],\"fg\",null,false,\"M\",null,1,false,false,0,\"fg; fgm; femtograms; weight\",\"LOINC\",\"Mass\",\"Clinical\",\"equal to 10^-15 grams\",null,null,null,null,false],[false,\"femtoliter\",\"fL\",\"FL\",\"volume\",1e-18,[3,0,0,0,0,0,0],\"fL\",\"iso1000\",true,null,null,1,false,false,0,\"femtolitres; femtoliters\",\"LOINC\",\"Vol; EntVol\",\"Clinical\",\"equal to 10^-15 liters\",\"l\",null,\"1\",1,false],[true,\"femtometer\",\"fm\",\"FM\",\"length\",1e-15,[1,0,0,0,0,0,0],\"fm\",null,false,\"L\",null,1,false,false,0,\"femtometres; femtometers\",\"LOINC\",\"Len\",\"Clinical\",\"equal to 10^-15 meters\",null,null,null,null,false],[false,\"femtomole\",\"fmol\",\"FMOL\",\"amount of substance\",602213670,[0,0,0,0,0,0,0],\"fmol\",\"si\",true,null,null,1,false,false,1,\"femtomoles\",\"LOINC\",\"EntSub\",\"Clinical\",\"equal to 10^-15 moles\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"femtomole per gram\",\"fmol/g\",\"FMOL/G\",\"amount of substance\",602213670,[0,0,-1,0,0,0,0],\"fmol/g\",\"si\",true,null,null,1,false,false,1,\"femtomoles; fmol/gm; fmol per gm\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"femtomole per liter\",\"fmol/L\",\"FMOL/L\",\"amount of substance\",602213670000,[-3,0,0,0,0,0,0],\"fmol/L\",\"si\",true,null,null,1,false,false,1,\"femtomoles; fmol per liter; litre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"femtomole per milligram\",\"fmol/mg\",\"FMOL/MG\",\"amount of substance\",602213670000,[0,0,-1,0,0,0,0],\"fmol/mg\",\"si\",true,null,null,1,false,false,1,\"fmol per mg; femtomoles\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"femtomole per milliliter\",\"fmol/mL\",\"FMOL/ML\",\"amount of substance\",602213670000000,[-3,0,0,0,0,0,0],\"fmol/mL\",\"si\",true,null,null,1,false,false,1,\"femtomoles; millilitre; fmol per mL; fmol per milliliter\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[true,\"gram meter\",\"g.m\",\"G.M\",\"mass\",1,[1,0,1,0,0,0,0],\"g.m\",null,false,\"M\",null,1,false,false,0,\"g*m; gxm; meters; metres\",\"LOINC\",\"Enrg\",\"Clinical\",\"Unit for measuring stroke work (heart work)\",null,null,null,null,false],[true,\"gram per 100 gram\",\"g/(100.g)\",\"G/G\",\"mass\",0.01,[0,0,0,0,0,0,0],\"g/g\",null,false,\"M\",null,1,false,false,0,\"g/100 gm; 100gm; grams per 100 grams; gm per 100 gm\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per 12 hour\",\"g/(12.h)\",\"G/HR\",\"mass\",0.000023148148148148147,[0,-1,1,0,0,0,0],\"g/h\",null,false,\"M\",null,1,false,false,0,\"gm/12hrs; 12 hrs; gm per 12 hrs; 12hrs; grams per 12 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per 24 hour\",\"g/(24.h)\",\"G/HR\",\"mass\",0.000011574074074074073,[0,-1,1,0,0,0,0],\"g/h\",null,false,\"M\",null,1,false,false,0,\"gm/24hrs; gm/24 hrs; gm per 24 hrs; 24hrs; grams per 24 hours; gm/dy; gm per dy; grams per day\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per 3 days\",\"g/(3.d)\",\"G/D\",\"mass\",0.000003858024691358025,[0,-1,1,0,0,0,0],\"g/d\",null,false,\"M\",null,1,false,false,0,\"gm/3dy; gm/3 dy; gm per 3 days; grams\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per 4 hour\",\"g/(4.h)\",\"G/HR\",\"mass\",0.00006944444444444444,[0,-1,1,0,0,0,0],\"g/h\",null,false,\"M\",null,1,false,false,0,\"gm/4hrs; gm/4 hrs; gm per 4 hrs; 4hrs; grams per 4 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per 48 hour\",\"g/(48.h)\",\"G/HR\",\"mass\",0.000005787037037037037,[0,-1,1,0,0,0,0],\"g/h\",null,false,\"M\",null,1,false,false,0,\"gm/48hrs; gm/48 hrs; gm per 48 hrs; 48hrs; grams per 48 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per 5 hour\",\"g/(5.h)\",\"G/HR\",\"mass\",0.00005555555555555556,[0,-1,1,0,0,0,0],\"g/h\",null,false,\"M\",null,1,false,false,0,\"gm/5hrs; gm/5 hrs; gm per 5 hrs; 5hrs; grams per 5 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per 6 hour\",\"g/(6.h)\",\"G/HR\",\"mass\",0.000046296296296296294,[0,-1,1,0,0,0,0],\"g/h\",null,false,\"M\",null,1,false,false,0,\"gm/6hrs; gm/6 hrs; gm per 6 hrs; 6hrs; grams per 6 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per 72 hour\",\"g/(72.h)\",\"G/HR\",\"mass\",0.000003858024691358025,[0,-1,1,0,0,0,0],\"g/h\",null,false,\"M\",null,1,false,false,0,\"gm/72hrs; gm/72 hrs; gm per 72 hrs; 72hrs; grams per 72 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per cubic centimeter\",\"g/cm3\",\"G/CM3\",\"mass\",999999.9999999999,[-3,0,1,0,0,0,0],\"g/(cm<sup>3</sup>)\",null,false,\"M\",null,1,false,false,0,\"g/cm^3; gm per cm3; g per cm^3; grams per centimeter cubed; cu. cm; centimetre; g/mL; gram per milliliter; millilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"g/cm3 = g/mL\",null,null,null,null,false],[true,\"gram per day\",\"g/d\",\"G/D\",\"mass\",0.000011574074074074073,[0,-1,1,0,0,0,0],\"g/d\",null,false,\"M\",null,1,false,false,0,\"gm/dy; gm per dy; grams per day; gm/24hrs; gm/24 hrs; gm per 24 hrs; 24hrs; grams per 24 hours; serving\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per deciliter\",\"g/dL\",\"G/DL\",\"mass\",10000,[-3,0,1,0,0,0,0],\"g/dL\",null,false,\"M\",null,1,false,false,0,\"gm/dL; gm per dL; grams per deciliter; decilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per gram\",\"g/g\",\"G/G\",\"mass\",1,[0,0,0,0,0,0,0],\"g/g\",null,false,\"M\",null,1,false,false,0,\"gm; grams\",\"LOINC\",\"MRto \",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per hour\",\"g/h\",\"G/HR\",\"mass\",0.0002777777777777778,[0,-1,1,0,0,0,0],\"g/h\",null,false,\"M\",null,1,false,false,0,\"gm/hr; gm per hr; grams; intake; output\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per hour per square meter\",\"g/h/m2\",\"(G/HR)/M2\",\"mass\",0.0002777777777777778,[-2,-1,1,0,0,0,0],\"(g/h)/(m<sup>2</sup>)\",null,false,\"M\",null,1,false,false,0,\"gm/hr/m2; gm/h/m2; /m^2; sq. m; g per hr per m2; grams per hours per square meter; meter squared; metre\",\"LOINC\",\"ArMRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per kilogram\",\"g/kg \",\"G/KG\",\"mass\",0.001,[0,0,0,0,0,0,0],\"g/kg\",null,false,\"M\",null,1,false,false,0,\"g per kg; gram per kilograms\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per kilogram per 8 hour \",\"g/kg/(8.h)\",\"(G/KG)/HR\",\"mass\",3.472222222222222e-8,[0,-1,0,0,0,0,0],\"(g/kg)/h\",null,false,\"M\",null,1,false,false,0,\"g/(8.kg.h); gm/kg/8hrs; 8 hrs; g per kg per 8 hrs; 8hrs; grams per kilograms per 8 hours; shift\",\"LOINC\",\"MCntRat; RelMRat\",\"Clinical\",\"unit often used to describe mass in grams of protein consumed in a 8 hours, divided by the subject's body weight in kilograms. Also used to measure mass dose rate per body mass\",null,null,null,null,false],[true,\"gram per kilogram per day\",\"g/kg/d\",\"(G/KG)/D\",\"mass\",1.1574074074074074e-8,[0,-1,0,0,0,0,0],\"(g/kg)/d\",null,false,\"M\",null,1,false,false,0,\"g/(kg.d); gm/kg/dy; gm per kg per dy; grams per kilograms per day\",\"LOINC\",\"RelMRat\",\"Clinical\",\"unit often used to describe mass in grams of protein consumed in a day, divided by the subject's body weight in kilograms. Also used to measure mass dose rate per body mass\",null,null,null,null,false],[true,\"gram per kilogram per hour\",\"g/kg/h\",\"(G/KG)/HR\",\"mass\",2.7777777777777776e-7,[0,-1,0,0,0,0,0],\"(g/kg)/h\",null,false,\"M\",null,1,false,false,0,\"g/(kg.h); g/kg/hr; g per kg per hrs; grams per kilograms per hour\",\"LOINC\",\"MCntRat; RelMRat\",\"Clinical\",\"unit used to measure mass dose rate per body mass\",null,null,null,null,false],[true,\"gram per kilogram per minute\",\"g/kg/min\",\"(G/KG)/MIN\",\"mass\",0.000016666666666666667,[0,-1,0,0,0,0,0],\"(g/kg)/min\",null,false,\"M\",null,1,false,false,0,\"g/(kg.min); g/kg/min; g per kg per min; grams per kilograms per minute\",\"LOINC\",\"MCntRat; RelMRat\",\"Clinical\",\"unit used to measure mass dose rate per body mass\",null,null,null,null,false],[true,\"gram per liter\",\"g/L\",\"G/L\",\"mass\",1000,[-3,0,1,0,0,0,0],\"g/L\",null,false,\"M\",null,1,false,false,0,\"gm per liter; g/liter; grams per liter; litre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per square meter\",\"g/m2\",\"G/M2\",\"mass\",1,[-2,0,1,0,0,0,0],\"g/(m<sup>2</sup>)\",null,false,\"M\",null,1,false,false,0,\"g/m^2; gram/square meter; g/sq m; g per m2; g per m^2; grams per square meter; meters squared; metre\",\"LOINC\",\"ArMass\",\"Clinical\",\"Tests measure myocardial mass (heart ventricle system) per body surface area; unit used to measure mass dose per body surface area\",null,null,null,null,false],[true,\"gram per milligram\",\"g/mg\",\"G/MG\",\"mass\",1000,[0,0,0,0,0,0,0],\"g/mg\",null,false,\"M\",null,1,false,false,0,\"g per mg; grams per milligram\",\"LOINC\",\"MCnt; MRto\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per minute\",\"g/min\",\"G/MIN\",\"mass\",0.016666666666666666,[0,-1,1,0,0,0,0],\"g/min\",null,false,\"M\",null,1,false,false,0,\"g per min; grams per minute; gram/minute\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per milliliter\",\"g/mL\",\"G/ML\",\"mass\",1000000,[-3,0,1,0,0,0,0],\"g/mL\",null,false,\"M\",null,1,false,false,0,\"g per mL; grams per milliliter; millilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"gram per millimole\",\"g/mmol\",\"G/MMOL\",\"mass\",1.6605401866749388e-21,[0,0,1,0,0,0,0],\"g/mmol\",null,false,\"M\",null,1,false,false,-1,\"grams per millimole; g per mmol\",\"LOINC\",\"Ratio\",\"Clinical\",\"\",null,null,null,null,false],[false,\"joule per liter\",\"J/L\",\"J/L\",\"energy\",1000000,[-1,-2,1,0,0,0,0],\"J/L\",\"si\",true,null,null,1,false,false,0,\"joules per liter; litre; J per L\",\"LOINC\",\"EngCnc\",\"Clinical\",\"\",\"N.m\",\"N.M\",\"1\",1,false],[true,\"degree Kelvin per Watt\",\"K/W\",\"K/W\",\"temperature\",0.001,[-2,3,-1,0,1,0,0],\"K/W\",null,false,\"C\",null,1,false,false,0,\"degree Kelvin/Watt; K per W; thermal ohm; thermal resistance; degrees\",\"LOINC\",\"TempEngRat\",\"Clinical\",\"unit for absolute thermal resistance equal to the reciprocal of thermal conductance. Unit used for tests to measure work of breathing\",null,null,null,null,false],[false,\"kilo international unit per liter\",\"k[IU]/L\",\"K[IU]/L\",\"arbitrary\",1000000,[-3,0,0,0,0,0,0],\"(ki.U.)/L\",\"chemical\",true,null,null,1,false,true,0,\"kIU/L; kIU per L; kIU per liter; kilo international units; litre; allergens; allergy units\",\"LOINC\",\"ACnc\",\"Clinical\",\"IgE has an WHO reference standard so IgE allergen testing can be reported as k[IU]/L\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"kilo international unit per milliliter\",\"k[IU]/mL\",\"K[IU]/ML\",\"arbitrary\",1000000000,[-3,0,0,0,0,0,0],\"(ki.U.)/mL\",\"chemical\",true,null,null,1,false,true,0,\"kIU/mL; kIU per mL; kIU per milliliter; kilo international units; millilitre; allergens; allergy units\",\"LOINC\",\"ACnc\",\"Clinical\",\"IgE has an WHO reference standard so IgE allergen testing can be reported as k[IU]/mL\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"katal per kilogram\",\"kat/kg\",\"KAT/KG\",\"catalytic activity\",602213670000000000000,[0,-1,-1,0,0,0,0],\"kat/kg\",\"chemical\",true,null,null,1,false,false,1,\"kat per kg; katals per kilogram; mol/s/kg; moles per seconds per kilogram\",\"LOINC\",\"CCnt\",\"Clinical\",\"kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.\",\"mol/s\",\"MOL/S\",\"1\",1,false],[false,\"katal per liter\",\"kat/L\",\"KAT/L\",\"catalytic activity\",6.0221366999999994e+26,[-3,-1,0,0,0,0,0],\"kat/L\",\"chemical\",true,null,null,1,false,false,1,\"kat per L; katals per liter; litre; mol/s/L; moles per seconds per liter\",\"LOINC\",\"CCnc\",\"Clinical\",\"kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.\",\"mol/s\",\"MOL/S\",\"1\",1,false],[false,\"kilocalorie\",\"kcal\",\"KCAL\",\"energy\",4184000,[2,-2,1,0,0,0,0],\"kcal\",\"heat\",true,null,null,1,false,false,0,\"kilogram calories; large calories; food calories; kcals\",\"LOINC\",\"EngRat\",\"Clinical\",\"It is equal to 1000 calories (equal to 4.184 kJ). But in practical usage, kcal refers to food calories which excludes caloric content in fiber and other constitutes that is not digestible by humans. Also see nutrition label Calories ([Cal])\",\"cal_th\",\"CAL_TH\",\"1\",1,false],[false,\"kilocalorie per 24 hour\",\"kcal/(24.h)\",\"KCAL/HR\",\"energy\",48.425925925925924,[2,-3,1,0,0,0,0],\"kcal/h\",\"heat\",true,null,null,1,false,false,0,\"kcal/24hrs; kcal/24 hrs; kcal per 24hrs; kilocalories per 24 hours; kilojoules; kJ/24hr; kJ/(24.h); kJ/dy; kilojoules per days; intake; calories burned; metabolic rate; food calories\",\"\",\"EngRat\",\"Clinical\",\"\",\"cal_th\",\"CAL_TH\",\"1\",1,false],[false,\"kilocalorie per ounce\",\"kcal/[oz_av]\",\"KCAL/[OZ_AV]\",\"energy\",147586.25679704445,[2,-2,0,0,0,0,0],\"kcal/oz\",\"heat\",true,null,null,1,false,false,0,\"kcal/oz; kcal per ozs; large calories per ounces; food calories; servings; international\",\"LOINC\",\"EngCnt\",\"Clinical\",\"used in nutrition to represent calorie of food\",\"cal_th\",\"CAL_TH\",\"1\",1,false],[false,\"kilocalorie per day\",\"kcal/d\",\"KCAL/D\",\"energy\",48.425925925925924,[2,-3,1,0,0,0,0],\"kcal/d\",\"heat\",true,null,null,1,false,false,0,\"kcal/dy; kcal per day; kilocalories per days; kilojoules; kJ/dy; kilojoules per days; intake; calories burned; metabolic rate; food calories\",\"LOINC\",\"EngRat\",\"Clinical\",\"unit in nutrition for food intake (measured in calories) in a day\",\"cal_th\",\"CAL_TH\",\"1\",1,false],[false,\"kilocalorie per hour\",\"kcal/h\",\"KCAL/HR\",\"energy\",1162.2222222222222,[2,-3,1,0,0,0,0],\"kcal/h\",\"heat\",true,null,null,1,false,false,0,\"kcal/hrs; kcals per hr; intake; kilocalories per hours; kilojoules\",\"LOINC\",\"EngRat\",\"Clinical\",\"used in nutrition to represent caloric requirement or consumption\",\"cal_th\",\"CAL_TH\",\"1\",1,false],[false,\"kilocalorie per kilogram per 24 hour\",\"kcal/kg/(24.h)\",\"(KCAL/KG)/HR\",\"energy\",0.04842592592592593,[2,-3,0,0,0,0,0],\"(kcal/kg)/h\",\"heat\",true,null,null,1,false,false,0,\"kcal/kg/24hrs; 24 hrs; kcal per kg per 24hrs; kilocalories per kilograms per 24 hours; kilojoules\",\"LOINC\",\"EngCntRat\",\"Clinical\",\"used in nutrition to represent caloric requirement per day based on subject's body weight in kilograms\",\"cal_th\",\"CAL_TH\",\"1\",1,false],[true,\"kilogram\",\"kg\",\"KG\",\"mass\",1000,[0,0,1,0,0,0,0],\"kg\",null,false,\"M\",null,1,false,false,0,\"kilograms; kgs\",\"LOINC\",\"Mass\",\"Clinical\",\"\",null,null,null,null,false],[true,\"kilogram meter per second\",\"kg.m/s\",\"(KG.M)/S\",\"mass\",1000,[1,-1,1,0,0,0,0],\"(kg.m)/s\",null,false,\"M\",null,1,false,false,0,\"kg*m/s; kg.m per sec; kg*m per sec; p; momentum\",\"LOINC\",\"\",\"Clinical\",\"unit for momentum =  mass times velocity\",null,null,null,null,false],[true,\"kilogram per second per square meter\",\"kg/(s.m2)\",\"KG/(S.M2)\",\"mass\",1000,[-2,-1,1,0,0,0,0],\"kg/(s.(m<sup>2</sup>))\",null,false,\"M\",null,1,false,false,0,\"kg/(s*m2); kg/(s*m^2); kg per s per m2; per sec; per m^2; kilograms per seconds per square meter; meter squared; metre\",\"LOINC\",\"ArMRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"kilogram per hour\",\"kg/h\",\"KG/HR\",\"mass\",0.2777777777777778,[0,-1,1,0,0,0,0],\"kg/h\",null,false,\"M\",null,1,false,false,0,\"kg/hr; kg per hr; kilograms per hour\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"kilogram per liter\",\"kg/L\",\"KG/L\",\"mass\",1000000,[-3,0,1,0,0,0,0],\"kg/L\",null,false,\"M\",null,1,false,false,0,\"kg per liter; litre; kilograms\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"kilogram per square meter\",\"kg/m2\",\"KG/M2\",\"mass\",1000,[-2,0,1,0,0,0,0],\"kg/(m<sup>2</sup>)\",null,false,\"M\",null,1,false,false,0,\"kg/m^2; kg/sq. m; kg per m2; per m^2; per sq. m; kilograms; meter squared; metre; BMI\",\"LOINC\",\"Ratio\",\"Clinical\",\"units for body mass index (BMI)\",null,null,null,null,false],[true,\"kilogram per cubic meter\",\"kg/m3\",\"KG/M3\",\"mass\",1000,[-3,0,1,0,0,0,0],\"kg/(m<sup>3</sup>)\",null,false,\"M\",null,1,false,false,0,\"kg/m^3; kg/cu. m; kg per m3; per m^3; per cu. m; kilograms; meters cubed; metre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"kilogram per minute\",\"kg/min\",\"KG/MIN\",\"mass\",16.666666666666668,[0,-1,1,0,0,0,0],\"kg/min\",null,false,\"M\",null,1,false,false,0,\"kilogram/minute; kg per min; kilograms per minute\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"kilogram per mole\",\"kg/mol\",\"KG/MOL\",\"mass\",1.6605401866749388e-21,[0,0,1,0,0,0,0],\"kg/mol\",null,false,\"M\",null,1,false,false,-1,\"kilogram/mole; kg per mol; kilograms per mole\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"kilogram per second\",\"kg/s\",\"KG/S\",\"mass\",1000,[0,-1,1,0,0,0,0],\"kg/s\",null,false,\"M\",null,1,false,false,0,\"kg/sec; kilogram/second; kg per sec; kilograms; second\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"kiloliter\",\"kL\",\"KL\",\"volume\",1,[3,0,0,0,0,0,0],\"kL\",\"iso1000\",true,null,null,1,false,false,0,\"kiloliters; kilolitres; m3; m^3; meters cubed; metre\",\"LOINC\",\"Vol\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[true,\"kilometer\",\"km\",\"KM\",\"length\",1000,[1,0,0,0,0,0,0],\"km\",null,false,\"L\",null,1,false,false,0,\"kilometers; kilometres; distance\",\"LOINC\",\"Len\",\"Clinical\",\"\",null,null,null,null,false],[false,\"kilopascal\",\"kPa\",\"KPAL\",\"pressure\",1000000,[-1,-2,1,0,0,0,0],\"kPa\",\"si\",true,null,null,1,false,false,0,\"kilopascals; pressure\",\"LOINC\",\"Pres; PPresDiff\",\"Clinical\",\"\",\"N/m2\",\"N/M2\",\"1\",1,false],[true,\"kilosecond\",\"ks\",\"KS\",\"time\",1000,[0,1,0,0,0,0,0],\"ks\",null,false,\"T\",null,1,false,false,0,\"kiloseconds; ksec\",\"LOINC\",\"Time\",\"Clinical\",\"\",null,null,null,null,false],[false,\"kilo enzyme unit\",\"kU\",\"KU\",\"catalytic activity\",10036894500000000000,[0,-1,0,0,0,0,0],\"kU\",\"chemical\",true,null,null,1,false,false,1,\"units; mmol/min; millimoles per minute\",\"LOINC\",\"CAct\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 kU = 1 mmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"kilo enzyme unit per gram\",\"kU/g\",\"KU/G\",\"catalytic activity\",10036894500000000000,[0,-1,-1,0,0,0,0],\"kU/g\",\"chemical\",true,null,null,1,false,false,1,\"units per grams; kU per gm\",\"LOINC\",\"CCnt\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 kU = 1 mmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"kilo enzyme unit per liter\",\"kU/L\",\"KU/L\",\"catalytic activity\",1.00368945e+22,[-3,-1,0,0,0,0,0],\"kU/L\",\"chemical\",true,null,null,1,false,false,1,\"units per liter; litre; enzymatic activity; enzyme activity per volume; activities\",\"LOINC\",\"ACnc; CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 kU = 1 mmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"kilo enzyme unit per milliliter\",\"kU/mL\",\"KU/ML\",\"catalytic activity\",1.00368945e+25,[-3,-1,0,0,0,0,0],\"kU/mL\",\"chemical\",true,null,null,1,false,false,1,\"kU per mL; units per milliliter; millilitre; enzymatic activity per volume; enzyme activities\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 kU = 1 mmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"Liters per 24 hour\",\"L/(24.h)\",\"L/HR\",\"volume\",1.1574074074074074e-8,[3,-1,0,0,0,0,0],\"L/h\",\"iso1000\",true,null,null,1,false,false,0,\"L/24hrs; L/24 hrs; L per 24hrs; liters per 24 hours; day; dy; litres; volume flow rate\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"Liters per 8 hour\",\"L/(8.h)\",\"L/HR\",\"volume\",3.472222222222222e-8,[3,-1,0,0,0,0,0],\"L/h\",\"iso1000\",true,null,null,1,false,false,0,\"L/8hrs; L/8 hrs; L per 8hrs; liters per 8 hours; litres; volume flow rate; shift\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"Liters per minute per square meter\",\"L/(min.m2) \",\"L/(MIN.M2)\",\"volume\",0.000016666666666666667,[1,-1,0,0,0,0,0],\"L/(min.(m<sup>2</sup>))\",\"iso1000\",true,null,null,1,false,false,0,\"L/(min.m2); L/min/m^2; L/min/sq. meter; L per min per m2; m^2; liters per minutes per square meter; meter squared; litres; metre \",\"LOINC\",\"ArVRat\",\"Clinical\",\"unit for tests that measure cardiac output per body surface area (cardiac index)\",\"l\",null,\"1\",1,false],[false,\"Liters per day\",\"L/d\",\"L/D\",\"volume\",1.1574074074074074e-8,[3,-1,0,0,0,0,0],\"L/d\",\"iso1000\",true,null,null,1,false,false,0,\"L/dy; L per day; 24hrs; 24 hrs; 24 hours; liters; litres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"Liters per hour\",\"L/h\",\"L/HR\",\"volume\",2.7777777777777776e-7,[3,-1,0,0,0,0,0],\"L/h\",\"iso1000\",true,null,null,1,false,false,0,\"L/hr; L per hr; litres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"Liters per kilogram\",\"L/kg\",\"L/KG\",\"volume\",0.000001,[3,0,-1,0,0,0,0],\"L/kg\",\"iso1000\",true,null,null,1,false,false,0,\"L per kg; litre\",\"LOINC\",\"VCnt\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"Liters per liter\",\"L/L\",\"L/L\",\"volume\",1,[0,0,0,0,0,0,0],\"L/L\",\"iso1000\",true,null,null,1,false,false,0,\"L per L; liter/liter; litre\",\"LOINC\",\"VFr\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"Liters per minute\",\"L/min\",\"L/MIN\",\"volume\",0.000016666666666666667,[3,-1,0,0,0,0,0],\"L/min\",\"iso1000\",true,null,null,1,false,false,0,\"liters per minute; litre\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"Liters per minute per square meter\",\"L/min/m2\",\"(L/MIN)/M2\",\"volume\",0.000016666666666666667,[1,-1,0,0,0,0,0],\"(L/min)/(m<sup>2</sup>)\",\"iso1000\",true,null,null,1,false,false,0,\"L/(min.m2); L/min/m^2; L/min/sq. meter; L per min per m2; m^2; liters per minutes per square meter; meter squared; litres; metre \",\"\",\"ArVRat\",\"Clinical\",\"unit for tests that measure cardiac output per body surface area (cardiac index)\",\"l\",null,\"1\",1,false],[false,\"Liters per second\",\"L/s\",\"L/S\",\"volume\",0.001,[3,-1,0,0,0,0,0],\"L/s\",\"iso1000\",true,null,null,1,false,false,0,\"L per sec; litres\",\"LOINC\",\"VRat\",\"Clinical\",\"unit used often to measure gas flow and peak expiratory flow\",\"l\",null,\"1\",1,false],[false,\"Liters per second per square second\",\"L/s/s2\",\"(L/S)/S2\",\"volume\",0.001,[3,-3,0,0,0,0,0],\"(L/s)/(s<sup>2</sup>)\",\"iso1000\",true,null,null,1,false,false,0,\"L/s/s^2; L/sec/sec2; L/sec/sec^2; L/sec/sq. sec; L per s per s2; L per sec per sec2; s^2; sec^2; liters per seconds per square second; second squared; litres \",\"LOINC\",\"ArVRat\",\"Clinical\",\"unit for tests that measure cardiac output/body surface area\",\"l\",null,\"1\",1,false],[false,\"lumen square meter\",\"lm.m2\",\"LM.M2\",\"luminous flux\",1,[2,0,0,2,0,0,1],\"lm.(m<sup>2</sup>)\",\"si\",true,null,null,1,false,false,0,\"lm*m2; lm*m^2; lumen meters squared; lumen sq. meters; metres\",\"LOINC\",\"\",\"Clinical\",\"\",\"cd.sr\",\"CD.SR\",\"1\",1,false],[true,\"meter per second\",\"m/s\",\"M/S\",\"length\",1,[1,-1,0,0,0,0,0],\"m/s\",null,false,\"L\",null,1,false,false,0,\"meter/second; m per sec; meters per second; metres; velocity; speed\",\"LOINC\",\"Vel\",\"Clinical\",\"unit of velocity\",null,null,null,null,false],[true,\"meter per square second\",\"m/s2\",\"M/S2\",\"length\",1,[1,-2,0,0,0,0,0],\"m/(s<sup>2</sup>)\",null,false,\"L\",null,1,false,false,0,\"m/s^2; m/sq. sec; m per s2; per s^2; meters per square second; second squared; sq second; metres; acceleration\",\"LOINC\",\"Accel\",\"Clinical\",\"unit of acceleration\",null,null,null,null,false],[false,\"milli international unit per liter\",\"m[IU]/L\",\"M[IU]/L\",\"arbitrary\",1,[-3,0,0,0,0,0,0],\"(mi.U.)/L\",\"chemical\",true,null,null,1,false,true,0,\"mIU/L; m IU/L; mIU per liter; units; litre\",\"LOINC\",\"ACnc\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"milli  international unit per milliliter\",\"m[IU]/mL\",\"M[IU]/ML\",\"arbitrary\",1000.0000000000001,[-3,0,0,0,0,0,0],\"(mi.U.)/mL\",\"chemical\",true,null,null,1,false,true,0,\"mIU/mL; m IU/mL; mIU per mL; milli international units per milliliter; millilitre\",\"LOINC\",\"ACnc\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[true,\"square meter\",\"m2\",\"M2\",\"length\",1,[2,0,0,0,0,0,0],\"m<sup>2</sup>\",null,false,\"L\",null,1,false,false,0,\"m^2; sq m; square meters; meters squared; metres\",\"LOINC\",\"Area\",\"Clinical\",\"unit often used to represent body surface area\",null,null,null,null,false],[true,\"square meter per second\",\"m2/s\",\"M2/S\",\"length\",1,[2,-1,0,0,0,0,0],\"(m<sup>2</sup>)/s\",null,false,\"L\",null,1,false,false,0,\"m^2/sec; m2 per sec; m^2 per sec; sq m/sec; meters squared/seconds; sq m per sec; meters squared; metres\",\"LOINC\",\"ArRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"cubic meter per second\",\"m3/s\",\"M3/S\",\"length\",1,[3,-1,0,0,0,0,0],\"(m<sup>3</sup>)/s\",null,false,\"L\",null,1,false,false,0,\"m^3/sec; m3 per sec; m^3 per sec; cu m/sec; cubic meters per seconds; meters cubed; metres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"milliampere\",\"mA\",\"MA\",\"electric current\",0.001,[0,-1,0,0,0,1,0],\"mA\",\"si\",true,null,null,1,false,false,0,\"mamp; milliamperes\",\"LOINC\",\"ElpotRat\",\"Clinical\",\"unit of electric current\",\"C/s\",\"C/S\",\"1\",1,false],[false,\"millibar\",\"mbar\",\"MBAR\",\"pressure\",100000,[-1,-2,1,0,0,0,0],\"mbar\",\"iso1000\",true,null,null,1,false,false,0,\"millibars\",\"LOINC\",\"Pres\",\"Clinical\",\"unit of pressure\",\"Pa\",\"PAL\",\"1e5\",100000,false],[false,\"millibar second per liter\",\"mbar.s/L\",\"(MBAR.S)/L\",\"pressure\",100000000,[-4,-1,1,0,0,0,0],\"(mbar.s)/L\",\"iso1000\",true,null,null,1,false,false,0,\"mbar*s/L; mbar.s per L; mbar*s per L; millibar seconds per liter; millibar second per litre\",\"LOINC\",\"\",\"Clinical\",\"unit to measure expiratory resistance\",\"Pa\",\"PAL\",\"1e5\",100000,false],[false,\"millibar per liter per second\",\"mbar/L/s\",\"(MBAR/L)/S\",\"pressure\",100000000,[-4,-3,1,0,0,0,0],\"(mbar/L)/s\",\"iso1000\",true,null,null,1,false,false,0,\"mbar/(L.s); mbar/L/sec; mbar/liter/second; mbar per L per sec; mbar per liter per second; millibars per liters per seconds; litres\",\"LOINC\",\"PresCncRat\",\"Clinical\",\"unit to measure expiratory resistance\",\"Pa\",\"PAL\",\"1e5\",100000,false],[false,\"milliequivalent\",\"meq\",\"MEQ\",\"amount of substance\",602213670000000000000,[0,0,0,0,0,0,0],\"meq\",\"chemical\",true,null,null,1,false,false,1,\"milliequivalents; meqs\",\"LOINC\",\"Sub\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per 2 hour\",\"meq/(2.h)\",\"MEQ/HR\",\"amount of substance\",83640787500000000,[0,-1,0,0,0,0,0],\"meq/h\",\"chemical\",true,null,null,1,false,false,1,\"meq/2hrs; meq/2 hrs; meq per 2 hrs; milliequivalents per 2 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per 24 hour\",\"meq/(24.h)\",\"MEQ/HR\",\"amount of substance\",6970065625000000,[0,-1,0,0,0,0,0],\"meq/h\",\"chemical\",true,null,null,1,false,false,1,\"meq/24hrs; meq/24 hrs; meq per 24 hrs; milliequivalents per 24 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per 8 hour\",\"meq/(8.h)\",\"MEQ/HR\",\"amount of substance\",20910196875000000,[0,-1,0,0,0,0,0],\"meq/h\",\"chemical\",true,null,null,1,false,false,1,\"meq/8hrs; meq/8 hrs; meq per 8 hrs; milliequivalents per 8 hours; shift\",\"LOINC\",\"SRat\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per day\",\"meq/d\",\"MEQ/D\",\"amount of substance\",6970065625000000,[0,-1,0,0,0,0,0],\"meq/d\",\"chemical\",true,null,null,1,false,false,1,\"meq/dy; meq per day; milliquivalents per days; meq/24hrs; meq/24 hrs; meq per 24 hrs; milliequivalents per 24 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per deciliter\",\"meq/dL\",\"MEQ/DL\",\"amount of substance\",6.022136699999999e+24,[-3,0,0,0,0,0,0],\"meq/dL\",\"chemical\",true,null,null,1,false,false,1,\"meq per dL; milliequivalents per deciliter; decilitre\",\"LOINC\",\"SCnc\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per gram\",\"meq/g\",\"MEQ/G\",\"amount of substance\",602213670000000000000,[0,0,-1,0,0,0,0],\"meq/g\",\"chemical\",true,null,null,1,false,false,1,\"mgq/gm; meq per gm; milliequivalents per gram\",\"LOINC\",\"MCnt\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per hour\",\"meq/h\",\"MEQ/HR\",\"amount of substance\",167281575000000000,[0,-1,0,0,0,0,0],\"meq/h\",\"chemical\",true,null,null,1,false,false,1,\"meq/hrs; meq per hrs; milliequivalents per hour\",\"LOINC\",\"SRat\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per kilogram\",\"meq/kg\",\"MEQ/KG\",\"amount of substance\",602213670000000000,[0,0,-1,0,0,0,0],\"meq/kg\",\"chemical\",true,null,null,1,false,false,1,\"meq per kg; milliequivalents per kilogram\",\"LOINC\",\"SCnt\",\"Clinical\",\"equivalence equals moles per valence; used to measure dose per patient body mass\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per kilogram per hour\",\"meq/kg/h\",\"(MEQ/KG)/HR\",\"amount of substance\",167281575000000,[0,-1,-1,0,0,0,0],\"(meq/kg)/h\",\"chemical\",true,null,null,1,false,false,1,\"meq/(kg.h); meq/kg/hr; meq per kg per hr; milliequivalents per kilograms per hour\",\"LOINC\",\"SCntRat\",\"Clinical\",\"equivalence equals moles per valence; unit used to measure dose rate per patient body mass\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per liter\",\"meq/L\",\"MEQ/L\",\"amount of substance\",6.0221367e+23,[-3,0,0,0,0,0,0],\"meq/L\",\"chemical\",true,null,null,1,false,false,1,\"milliequivalents per liter; litre; meq per l; acidity\",\"LOINC\",\"SCnc\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per square meter\",\"meq/m2\",\"MEQ/M2\",\"amount of substance\",602213670000000000000,[-2,0,0,0,0,0,0],\"meq/(m<sup>2</sup>)\",\"chemical\",true,null,null,1,false,false,1,\"meq/m^2; meq/sq. m; milliequivalents per square meter; meter squared; metre\",\"LOINC\",\"ArSub\",\"Clinical\",\"equivalence equals moles per valence; note that the use of m2 in clinical units ofter refers to body surface area\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per minute\",\"meq/min\",\"MEQ/MIN\",\"amount of substance\",10036894500000000000,[0,-1,0,0,0,0,0],\"meq/min\",\"chemical\",true,null,null,1,false,false,1,\"meq per min; milliequivalents per minute\",\"LOINC\",\"SRat\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliequivalent per milliliter\",\"meq/mL\",\"MEQ/ML\",\"amount of substance\",6.0221367e+26,[-3,0,0,0,0,0,0],\"meq/mL\",\"chemical\",true,null,null,1,false,false,1,\"meq per mL; milliequivalents per milliliter; millilitre\",\"LOINC\",\"SCnc\",\"Clinical\",\"equivalence equals moles per valence\",\"mol\",\"MOL\",\"1\",1,false],[true,\"milligram\",\"mg\",\"MG\",\"mass\",0.001,[0,0,1,0,0,0,0],\"mg\",null,false,\"M\",null,1,false,false,0,\"milligrams\",\"LOINC\",\"Mass\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per 10 hour\",\"mg/(10.h)\",\"MG/HR\",\"mass\",2.7777777777777777e-8,[0,-1,1,0,0,0,0],\"mg/h\",null,false,\"M\",null,1,false,false,0,\"mg/10hrs; mg/10 hrs; mg per 10 hrs; milligrams per 10 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per 12 hour\",\"mg/(12.h)\",\"MG/HR\",\"mass\",2.3148148148148148e-8,[0,-1,1,0,0,0,0],\"mg/h\",null,false,\"M\",null,1,false,false,0,\"mg/12hrs; mg/12 hrs; per 12 hrs; 12hrs; milligrams per 12 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"units used for tests in urine\",null,null,null,null,false],[true,\"milligram per 2 hour\",\"mg/(2.h)\",\"MG/HR\",\"mass\",1.3888888888888888e-7,[0,-1,1,0,0,0,0],\"mg/h\",null,false,\"M\",null,1,false,false,0,\"mg/2hrs; mg/2 hrs; mg per 2 hrs; 2hrs; milligrams per 2 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"units used for tests in urine\",null,null,null,null,false],[true,\"milligram per 24 hour\",\"mg/(24.h)\",\"MG/HR\",\"mass\",1.1574074074074074e-8,[0,-1,1,0,0,0,0],\"mg/h\",null,false,\"M\",null,1,false,false,0,\"mg/24hrs; mg/24 hrs; milligrams per 24 hours; mg/kg/dy; mg per kg per day; milligrams per kilograms per days\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per 6 hour\",\"mg/(6.h)\",\"MG/HR\",\"mass\",4.6296296296296295e-8,[0,-1,1,0,0,0,0],\"mg/h\",null,false,\"M\",null,1,false,false,0,\"mg/6hrs; mg/6 hrs; mg per 6 hrs; 6hrs; milligrams per 6 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per 72 hour\",\"mg/(72.h)\",\"MG/HR\",\"mass\",3.858024691358025e-9,[0,-1,1,0,0,0,0],\"mg/h\",null,false,\"M\",null,1,false,false,0,\"mg/72hrs; mg/72 hrs; 72 hrs; 72hrs; milligrams per 72 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per 8 hour\",\"mg/(8.h)\",\"MG/HR\",\"mass\",3.472222222222222e-8,[0,-1,1,0,0,0,0],\"mg/h\",null,false,\"M\",null,1,false,false,0,\"mg/8hrs; mg/8 hrs; milligrams per 8 hours; shift\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per day\",\"mg/d\",\"MG/D\",\"mass\",1.1574074074074074e-8,[0,-1,1,0,0,0,0],\"mg/d\",null,false,\"M\",null,1,false,false,0,\"mg/24hrs; mg/24 hrs; milligrams per 24 hours; mg/dy; mg per day; milligrams\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per deciliter\",\"mg/dL\",\"MG/DL\",\"mass\",10,[-3,0,1,0,0,0,0],\"mg/dL\",null,false,\"M\",null,1,false,false,0,\"mg per dL; milligrams per deciliter; decilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per gram\",\"mg/g\",\"MG/G\",\"mass\",0.001,[0,0,0,0,0,0,0],\"mg/g\",null,false,\"M\",null,1,false,false,0,\"mg per gm; milligrams per gram\",\"LOINC\",\"MCnt; MRto\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per hour\",\"mg/h\",\"MG/HR\",\"mass\",2.7777777777777776e-7,[0,-1,1,0,0,0,0],\"mg/h\",null,false,\"M\",null,1,false,false,0,\"mg/hr; mg per hr; milligrams\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per kilogram\",\"mg/kg\",\"MG/KG\",\"mass\",0.000001,[0,0,0,0,0,0,0],\"mg/kg\",null,false,\"M\",null,1,false,false,0,\"mg per kg; milligrams per kilograms\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per kilogram per 8 hour\",\"mg/kg/(8.h)\",\"(MG/KG)/HR\",\"mass\",3.472222222222222e-11,[0,-1,0,0,0,0,0],\"(mg/kg)/h\",null,false,\"M\",null,1,false,false,0,\"mg/(8.h.kg); mg/kg/8hrs; mg/kg/8 hrs; mg per kg per 8hrs; 8 hrs; milligrams per kilograms per 8 hours; shift\",\"LOINC\",\"RelMRat; MCntRat\",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"milligram per kilogram per day\",\"mg/kg/d\",\"(MG/KG)/D\",\"mass\",1.1574074074074074e-11,[0,-1,0,0,0,0,0],\"(mg/kg)/d\",null,false,\"M\",null,1,false,false,0,\"mg/(kg.d); mg/(kg.24.h)mg/kg/dy; mg per kg per day; milligrams per kilograms per days; mg/kg/(24.h); mg/kg/24hrs; 24 hrs; 24 hours\",\"LOINC\",\"RelMRat \",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"milligram per kilogram per hour\",\"mg/kg/h\",\"(MG/KG)/HR\",\"mass\",2.7777777777777777e-10,[0,-1,0,0,0,0,0],\"(mg/kg)/h\",null,false,\"M\",null,1,false,false,0,\"mg/(kg.h); mg/kg/hr; mg per kg per hr; milligrams per kilograms per hour\",\"LOINC\",\"RelMRat; MCntRat\",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"milligram per kilogram per minute\",\"mg/kg/min\",\"(MG/KG)/MIN\",\"mass\",1.6666666666666667e-8,[0,-1,0,0,0,0,0],\"(mg/kg)/min\",null,false,\"M\",null,1,false,false,0,\"mg/(kg.min); mg per kg per min; milligrams per kilograms per minute\",\"LOINC\",\"RelMRat; MCntRat\",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"milligram per liter\",\"mg/L\",\"MG/L\",\"mass\",1,[-3,0,1,0,0,0,0],\"mg/L\",null,false,\"M\",null,1,false,false,0,\"mg per l; milligrams per liter; litre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per square meter\",\"mg/m2\",\"MG/M2\",\"mass\",0.001,[-2,0,1,0,0,0,0],\"mg/(m<sup>2</sup>)\",null,false,\"M\",null,1,false,false,0,\"mg/m^2; mg/sq. m; mg per m2; mg per m^2; mg per sq. milligrams; meter squared; metre\",\"LOINC\",\"ArMass\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per cubic meter\",\"mg/m3\",\"MG/M3\",\"mass\",0.001,[-3,0,1,0,0,0,0],\"mg/(m<sup>3</sup>)\",null,false,\"M\",null,1,false,false,0,\"mg/m^3; mg/cu. m; mg per m3; milligrams per cubic meter; meter cubed; metre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per milligram\",\"mg/mg\",\"MG/MG\",\"mass\",1,[0,0,0,0,0,0,0],\"mg/mg\",null,false,\"M\",null,1,false,false,0,\"mg per mg; milligrams; milligram/milligram\",\"LOINC\",\"MRto\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per minute\",\"mg/min\",\"MG/MIN\",\"mass\",0.000016666666666666667,[0,-1,1,0,0,0,0],\"mg/min\",null,false,\"M\",null,1,false,false,0,\"mg per min; milligrams per minutes; milligram/minute\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per milliliter\",\"mg/mL\",\"MG/ML\",\"mass\",1000.0000000000001,[-3,0,1,0,0,0,0],\"mg/mL\",null,false,\"M\",null,1,false,false,0,\"mg per mL; milligrams per milliliters; millilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per millimole\",\"mg/mmol\",\"MG/MMOL\",\"mass\",1.660540186674939e-24,[0,0,1,0,0,0,0],\"mg/mmol\",null,false,\"M\",null,1,false,false,-1,\"mg per mmol; milligrams per millimole; \",\"LOINC\",\"Ratio\",\"Clinical\",\"\",null,null,null,null,false],[true,\"milligram per week\",\"mg/wk\",\"MG/WK\",\"mass\",1.6534391534391535e-9,[0,-1,1,0,0,0,0],\"mg/wk\",null,false,\"M\",null,1,false,false,0,\"mg/week; mg per wk; milligrams per weeks; milligram/week\",\"LOINC\",\"Mrat\",\"Clinical\",\"\",null,null,null,null,false],[false,\"milliliter\",\"mL\",\"ML\",\"volume\",0.000001,[3,0,0,0,0,0,0],\"mL\",\"iso1000\",true,null,null,1,false,false,0,\"milliliters; millilitres\",\"LOINC\",\"Vol\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 10 hour\",\"mL/(10.h)\",\"ML/HR\",\"volume\",2.7777777777777777e-11,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/10hrs; ml/10 hrs; mL per 10hrs; 10 hrs; milliliters per 10 hours; millilitres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 12 hour\",\"mL/(12.h)\",\"ML/HR\",\"volume\",2.3148148148148147e-11,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/12hrs; ml/12 hrs; mL per 12hrs; 12 hrs; milliliters per 12 hours; millilitres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 2 hour\",\"mL/(2.h)\",\"ML/HR\",\"volume\",1.3888888888888888e-10,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/2hrs; ml/2 hrs; mL per 2hrs; 2 hrs; milliliters per 2 hours; millilitres \",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 24 hour\",\"mL/(24.h)\",\"ML/HR\",\"volume\",1.1574074074074074e-11,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/24hrs; ml/24 hrs; mL per 24hrs; 24 hrs; milliliters per 24 hours; millilitres; ml/dy; /day; ml per dy; days; fluid outputs; fluid inputs; flow rate\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 4 hour\",\"mL/(4.h)\",\"ML/HR\",\"volume\",6.944444444444444e-11,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/4hrs; ml/4 hrs; mL per 4hrs; 4 hrs; milliliters per 4 hours; millilitres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 5 hour\",\"mL/(5.h)\",\"ML/HR\",\"volume\",5.5555555555555553e-11,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/5hrs; ml/5 hrs; mL per 5hrs; 5 hrs; milliliters per 5 hours; millilitres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 6 hour\",\"mL/(6.h)\",\"ML/HR\",\"volume\",4.6296296296296294e-11,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/6hrs; ml/6 hrs; mL per 6hrs; 6 hrs; milliliters per 6 hours; millilitres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 72 hour\",\"mL/(72.h)\",\"ML/HR\",\"volume\",3.8580246913580245e-12,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/72hrs; ml/72 hrs; mL per 72hrs; 72 hrs; milliliters per 72 hours; millilitres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 8 hour\",\"mL/(8.h)\",\"ML/HR\",\"volume\",3.472222222222222e-11,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"ml/8hrs; ml/8 hrs; mL per 8hrs; 8 hrs; milliliters per 8 hours; millilitres; shift\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per 8 hour per kilogram\",\"mL/(8.h)/kg\",\"(ML/HR)/KG\",\"volume\",3.472222222222222e-14,[3,-1,-1,0,0,0,0],\"(mL/h)/kg\",\"iso1000\",true,null,null,1,false,false,0,\"mL/kg/(8.h); ml/8h/kg; ml/8 h/kg; ml/8hr/kg; ml/8 hr/kgr; mL per 8h per kg; 8 h; 8hr; 8 hr; milliliters per 8 hours per kilogram; millilitres; shift\",\"LOINC\",\"VRatCnt\",\"Clinical\",\"unit used to measure renal excretion volume rate per body mass\",\"l\",null,\"1\",1,false],[false,\"milliliter per square inch (international)\",\"mL/[sin_i]\",\"ML/[SIN_I]\",\"volume\",0.0015500031000061998,[1,0,0,0,0,0,0],\"mL\",\"iso1000\",true,null,null,1,false,false,0,\"mL/sin; mL/in2; mL/in^2; mL per sin; in2; in^2; sq. in; milliliters per square inch; inch squared\",\"LOINC\",\"ArVol\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per centimeter of water\",\"mL/cm[H2O]\",\"ML/CM[H2O]\",\"volume\",1.0197162129779282e-11,[4,2,-1,0,0,0,0],\"mL/(cm HO<sub><r>2</r></sub>)\",\"iso1000\",true,null,null,1,false,false,0,\"milliliters per centimeter of water; millilitre per centimetre of water; millilitres per centimetre of water; mL/cmH2O; mL/cm H2O; mL per cmH2O; mL per cm H2O\",\"LOINC\",\"Compli\",\"Clinical\",\"unit used to measure dynamic lung compliance\",\"l\",null,\"1\",1,false],[false,\"milliliter per day\",\"mL/d\",\"ML/D\",\"volume\",1.1574074074074074e-11,[3,-1,0,0,0,0,0],\"mL/d\",\"iso1000\",true,null,null,1,false,false,0,\"ml/day; ml per day; milliliters per day; 24 hours; 24hrs; millilitre;\",\"LOINC\",\"VRat\",\"Clinical\",\"usually used to measure fluid output or input; flow rate\",\"l\",null,\"1\",1,false],[false,\"milliliter per deciliter\",\"mL/dL\",\"ML/DL\",\"volume\",0.009999999999999998,[0,0,0,0,0,0,0],\"mL/dL\",\"iso1000\",true,null,null,1,false,false,0,\"mL per dL; millilitres; decilitre; milliliters\",\"LOINC\",\"VFr; VFrDiff\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per hour\",\"mL/h\",\"ML/HR\",\"volume\",2.7777777777777777e-10,[3,-1,0,0,0,0,0],\"mL/h\",\"iso1000\",true,null,null,1,false,false,0,\"mL/hr; mL per hr; milliliters per hour; millilitres; fluid intake; fluid output\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per kilogram\",\"mL/kg\",\"ML/KG\",\"volume\",9.999999999999999e-10,[3,0,-1,0,0,0,0],\"mL/kg\",\"iso1000\",true,null,null,1,false,false,0,\"mL per kg; milliliters per kilogram; millilitres\",\"LOINC\",\"VCnt\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per kilogram per 8 hour\",\"mL/kg/(8.h)\",\"(ML/KG)/HR\",\"volume\",3.472222222222222e-14,[3,-1,-1,0,0,0,0],\"(mL/kg)/h\",\"iso1000\",true,null,null,1,false,false,0,\"mL/(8.h.kg); mL/kg/8hrs; mL/kg/8 hrs; mL per kg per 8hrs; 8 hrs; milliliters per kilograms per 8 hours; millilitres; shift\",\"LOINC\",\"VCntRat; RelEngRat\",\"Clinical\",\"unit used to measure renal excretion volume rate per body mass\",\"l\",null,\"1\",1,false],[false,\"milliliter per kilogram per day\",\"mL/kg/d\",\"(ML/KG)/D\",\"volume\",1.1574074074074072e-14,[3,-1,-1,0,0,0,0],\"(mL/kg)/d\",\"iso1000\",true,null,null,1,false,false,0,\"mL/(kg.d); mL/kg/dy; mL per kg per day; milliliters per kilograms per day; mg/kg/24hrs; 24 hrs; per 24 hours millilitres\",\"LOINC\",\"VCntRat; RelEngRat\",\"Clinical\",\"unit used to measure renal excretion volume rate per body mass\",\"l\",null,\"1\",1,false],[false,\"milliliter per kilogram per hour\",\"mL/kg/h\",\"(ML/KG)/HR\",\"volume\",2.7777777777777774e-13,[3,-1,-1,0,0,0,0],\"(mL/kg)/h\",\"iso1000\",true,null,null,1,false,false,0,\"mL/(kg.h); mL/kg/hr; mL per kg per hr; milliliters per kilograms per hour; millilitres\",\"LOINC\",\"VCntRat; RelEngRat\",\"Clinical\",\"unit used to measure renal excretion volume rate per body mass\",\"l\",null,\"1\",1,false],[false,\"milliliter per kilogram per minute\",\"mL/kg/min\",\"(ML/KG)/MIN\",\"volume\",1.6666666666666664e-11,[3,-1,-1,0,0,0,0],\"(mL/kg)/min\",\"iso1000\",true,null,null,1,false,false,0,\"mL/(kg.min); mL/kg/dy; mL per kg per day; milliliters per kilograms per day; millilitres\",\"LOINC\",\"RelEngRat\",\"Clinical\",\"used for tests that measure activity metabolic rate compared to standard resting metabolic rate \",\"l\",null,\"1\",1,false],[false,\"milliliter per square meter\",\"mL/m2\",\"ML/M2\",\"volume\",0.000001,[1,0,0,0,0,0,0],\"mL/(m<sup>2</sup>)\",\"iso1000\",true,null,null,1,false,false,0,\"mL/m^2; mL/sq. meter; mL per m2; m^2; sq. meter; milliliters per square meter; millilitres; meter squared\",\"LOINC\",\"ArVol\",\"Clinical\",\"used for tests that relate to heart work - e.g. ventricular stroke volume; atrial volume per body surface area\",\"l\",null,\"1\",1,false],[false,\"milliliter per millibar\",\"mL/mbar\",\"ML/MBAR\",\"volume\",1e-11,[4,2,-1,0,0,0,0],\"mL/mbar\",\"iso1000\",true,null,null,1,false,false,0,\"mL per mbar; milliliters per millibar; millilitres\",\"LOINC\",\"\",\"Clinical\",\"unit used to measure dynamic lung compliance\",\"l\",null,\"1\",1,false],[false,\"milliliter per minute\",\"mL/min\",\"ML/MIN\",\"volume\",1.6666666666666667e-8,[3,-1,0,0,0,0,0],\"mL/min\",\"iso1000\",true,null,null,1,false,false,0,\"mL per min; milliliters; millilitres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per minute per square meter\",\"mL/min/m2\",\"(ML/MIN)/M2\",\"volume\",1.6666666666666667e-8,[1,-1,0,0,0,0,0],\"(mL/min)/(m<sup>2</sup>)\",\"iso1000\",true,null,null,1,false,false,0,\"ml/min/m^2; ml/min/sq. meter; mL per min per m2; m^2; sq. meter; milliliters per minutes per square meter; millilitres; metre; meter squared\",\"LOINC\",\"ArVRat\",\"Clinical\",\"unit used to measure volume per body surface area; oxygen consumption index\",\"l\",null,\"1\",1,false],[false,\"milliliter per millimeter\",\"mL/mm\",\"ML/MM\",\"volume\",0.001,[2,0,0,0,0,0,0],\"mL/mm\",\"iso1000\",true,null,null,1,false,false,0,\"mL per mm; milliliters per millimeter; millilitres; millimetre\",\"LOINC\",\"Lineic Volume\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"milliliter per second\",\"mL/s\",\"ML/S\",\"volume\",0.000001,[3,-1,0,0,0,0,0],\"mL/s\",\"iso1000\",true,null,null,1,false,false,0,\"ml/sec; mL per sec; milliliters per second; millilitres\",\"LOINC\",\"Vel; VelRat; VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[true,\"millimeter\",\"mm\",\"MM\",\"length\",0.001,[1,0,0,0,0,0,0],\"mm\",null,false,\"L\",null,1,false,false,0,\"millimeters; millimetres; height; length; diameter; thickness; axis; curvature; size\",\"LOINC\",\"Len\",\"Clinical\",\"\",null,null,null,null,false],[true,\"millimeter per hour\",\"mm/h\",\"MM/HR\",\"length\",2.7777777777777776e-7,[1,-1,0,0,0,0,0],\"mm/h\",null,false,\"L\",null,1,false,false,0,\"mm/hr; mm per hr; millimeters per hour; millimetres\",\"LOINC\",\"Vel\",\"Clinical\",\"unit to measure sedimentation rate\",null,null,null,null,false],[true,\"millimeter per minute\",\"mm/min\",\"MM/MIN\",\"length\",0.000016666666666666667,[1,-1,0,0,0,0,0],\"mm/min\",null,false,\"L\",null,1,false,false,0,\"mm per min; millimeters per minute; millimetres\",\"LOINC\",\"Vel\",\"Clinical\",\"\",null,null,null,null,false],[false,\"millimeter of water\",\"mm[H2O]\",\"MM[H2O]\",\"pressure\",9806.65,[-1,-2,1,0,0,0,0],\"mm HO<sub><r>2</r></sub>\",\"clinical\",true,null,null,1,false,false,0,\"mmH2O; mm H2O; millimeters of water; millimetres\",\"LOINC\",\"Pres\",\"Clinical\",\"\",\"kPa\",\"KPAL\",\"980665e-5\",9.80665,false],[false,\"millimeter of mercury\",\"mm[Hg]\",\"MM[HG]\",\"pressure\",133322,[-1,-2,1,0,0,0,0],\"mm Hg\",\"clinical\",true,null,null,1,false,false,0,\"mmHg; mm Hg; millimeters of mercury; millimetres\",\"LOINC\",\"Pres; PPres; Ratio\",\"Clinical\",\"1 mm[Hg] = 1 torr; unit to measure blood pressure\",\"kPa\",\"KPAL\",\"133.3220\",133.322,false],[true,\"square millimeter\",\"mm2\",\"MM2\",\"length\",0.000001,[2,0,0,0,0,0,0],\"mm<sup>2</sup>\",null,false,\"L\",null,1,false,false,0,\"mm^2; sq. mm.; sq. millimeters; millimeters squared; millimetres\",\"LOINC\",\"Area\",\"Clinical\",\"\",null,null,null,null,false],[false,\"millimole\",\"mmol\",\"MMOL\",\"amount of substance\",602213670000000000000,[0,0,0,0,0,0,0],\"mmol\",\"si\",true,null,null,1,false,false,1,\"millimoles\",\"LOINC\",\"Sub\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per 12 hour\",\"mmol/(12.h)\",\"MMOL/HR\",\"amount of substance\",13940131250000000,[0,-1,0,0,0,0,0],\"mmol/h\",\"si\",true,null,null,1,false,false,1,\"mmol/12hrs; mmol/12 hrs; mmol per 12 hrs; 12hrs; millimoles per 12 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"unit for tests related to urine\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per 2 hour\",\"mmol/(2.h)\",\"MMOL/HR\",\"amount of substance\",83640787500000000,[0,-1,0,0,0,0,0],\"mmol/h\",\"si\",true,null,null,1,false,false,1,\"mmol/2hrs; mmol/2 hrs; mmol per 2 hrs; 2hrs; millimoles per 2 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"unit for tests related to urine\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per 24 hour\",\"mmol/(24.h)\",\"MMOL/HR\",\"amount of substance\",6970065625000000,[0,-1,0,0,0,0,0],\"mmol/h\",\"si\",true,null,null,1,false,false,1,\"mmol/24hrs; mmol/24 hrs; mmol per 24 hrs; 24hrs; millimoles per 24 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per 5 hour\",\"mmol/(5.h)\",\"MMOL/HR\",\"amount of substance\",33456315000000000,[0,-1,0,0,0,0,0],\"mmol/h\",\"si\",true,null,null,1,false,false,1,\"mmol/5hrs; mmol/5 hrs; mmol per 5 hrs; 5hrs; millimoles per 5 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"unit for tests related to doses\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per 6 hour\",\"mmol/(6.h)\",\"MMOL/HR\",\"amount of substance\",27880262500000000,[0,-1,0,0,0,0,0],\"mmol/h\",\"si\",true,null,null,1,false,false,1,\"mmol/6hrs; mmol/6 hrs; mmol per 6 hrs; 6hrs; millimoles per 6 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"unit for tests related to urine\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per 8 hour\",\"mmol/(8.h)\",\"MMOL/HR\",\"amount of substance\",20910196875000000,[0,-1,0,0,0,0,0],\"mmol/h\",\"si\",true,null,null,1,false,false,1,\"mmol/8hrs; mmol/8 hrs; mmol per 8 hrs; 8hrs; millimoles per 8 hours; shift\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per day\",\"mmol/d\",\"MMOL/D\",\"amount of substance\",6970065625000000,[0,-1,0,0,0,0,0],\"mmol/d\",\"si\",true,null,null,1,false,false,1,\"mmol/24hrs; mmol/24 hrs; mmol per 24 hrs; 24hrs; millimoles per 24 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per deciliter\",\"mmol/dL\",\"MMOL/DL\",\"amount of substance\",6.022136699999999e+24,[-3,0,0,0,0,0,0],\"mmol/dL\",\"si\",true,null,null,1,false,false,1,\"mmol per dL; millimoles; decilitre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per gram\",\"mmol/g\",\"MMOL/G\",\"amount of substance\",602213670000000000000,[0,0,-1,0,0,0,0],\"mmol/g\",\"si\",true,null,null,1,false,false,1,\"mmol per gram; millimoles\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per hour\",\"mmol/h\",\"MMOL/HR\",\"amount of substance\",167281575000000000,[0,-1,0,0,0,0,0],\"mmol/h\",\"si\",true,null,null,1,false,false,1,\"mmol/hr; mmol per hr; millimoles per hour\",\"LOINC\",\"SRat\",\"Clinical\",\"unit for tests related to urine\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per kilogram\",\"mmol/kg\",\"MMOL/KG\",\"amount of substance\",602213670000000000,[0,0,-1,0,0,0,0],\"mmol/kg\",\"si\",true,null,null,1,false,false,1,\"mmol per kg; millimoles per kilogram\",\"LOINC\",\"SCnt\",\"Clinical\",\"unit for tests related to stool\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per kilogram per 8 hour\",\"mmol/kg/(8.h)\",\"(MMOL/KG)/HR\",\"amount of substance\",20910196875000,[0,-1,-1,0,0,0,0],\"(mmol/kg)/h\",\"si\",true,null,null,1,false,false,1,\"mmol/(8.h.kg); mmol/kg/8hrs; mmol/kg/8 hrs; mmol per kg per 8hrs; 8 hrs; millimoles per kilograms per 8 hours; shift\",\"LOINC\",\"CCnt\",\"Clinical\",\"unit used to measure molar dose rate per patient body mass\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per kilogram per day\",\"mmol/kg/d\",\"(MMOL/KG)/D\",\"amount of substance\",6970065625000,[0,-1,-1,0,0,0,0],\"(mmol/kg)/d\",\"si\",true,null,null,1,false,false,1,\"mmol/kg/dy; mmol/kg/day; mmol per kg per dy; millimoles per kilograms per day\",\"LOINC\",\"RelSRat\",\"Clinical\",\"unit used to measure molar dose rate per patient body mass\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per kilogram per hour\",\"mmol/kg/h\",\"(MMOL/KG)/HR\",\"amount of substance\",167281575000000,[0,-1,-1,0,0,0,0],\"(mmol/kg)/h\",\"si\",true,null,null,1,false,false,1,\"mmol/kg/hr; mmol per kg per hr; millimoles per kilograms per hour\",\"LOINC\",\"CCnt\",\"Clinical\",\"unit used to measure molar dose rate per patient body mass\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per kilogram per minute\",\"mmol/kg/min\",\"(MMOL/KG)/MIN\",\"amount of substance\",10036894500000000,[0,-1,-1,0,0,0,0],\"(mmol/kg)/min\",\"si\",true,null,null,1,false,false,1,\"mmol/(kg.min); mmol/kg/min; mmol per kg per min; millimoles per kilograms per minute\",\"LOINC\",\"CCnt\",\"Clinical\",\"unit used to measure molar dose rate per patient body mass; note that the unit for the enzyme unit U = umol/min. mmol/kg/min = kU/kg; \",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per liter\",\"mmol/L\",\"MMOL/L\",\"amount of substance\",6.0221367e+23,[-3,0,0,0,0,0,0],\"mmol/L\",\"si\",true,null,null,1,false,false,1,\"mmol per L; millimoles per liter; litre\",\"LOINC\",\"SCnc\",\"Clinical\",\"unit for tests related to doses\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per square meter\",\"mmol/m2\",\"MMOL/M2\",\"amount of substance\",602213670000000000000,[-2,0,0,0,0,0,0],\"mmol/(m<sup>2</sup>)\",\"si\",true,null,null,1,false,false,1,\"mmol/m^2; mmol/sq. meter; mmol per m2; m^2; sq. meter; millimoles; meter squared; metre\",\"LOINC\",\"ArSub\",\"Clinical\",\"unit used to measure molar dose per patient body surface area\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per minute\",\"mmol/min\",\"MMOL/MIN\",\"amount of substance\",10036894500000000000,[0,-1,0,0,0,0,0],\"mmol/min\",\"si\",true,null,null,1,false,false,1,\"mmol per min; millimoles per minute\",\"LOINC\",\"Srat; CAct\",\"Clinical\",\"unit for the enzyme unit U = umol/min. mmol/min = kU\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per millimole\",\"mmol/mmol\",\"MMOL/MMOL\",\"amount of substance\",1,[0,0,0,0,0,0,0],\"mmol/mmol\",\"si\",true,null,null,1,false,false,0,\"mmol per mmol; millimoles per millimole\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per mole\",\"mmol/mol\",\"MMOL/MOL\",\"amount of substance\",0.001,[0,0,0,0,0,0,0],\"mmol/mol\",\"si\",true,null,null,1,false,false,0,\"mmol per mol; millimoles per mole\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"millimole per second per liter\",\"mmol/s/L\",\"(MMOL/S)/L\",\"amount of substance\",6.0221367e+23,[-3,-1,0,0,0,0,0],\"(mmol/s)/L\",\"si\",true,null,null,1,false,false,1,\"mmol/sec/L; mmol per s per L; per sec; millimoles per seconds per liter; litre\",\"LOINC\",\"CCnc \",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"mole per kilogram\",\"mol/kg\",\"MOL/KG\",\"amount of substance\",602213670000000000000,[0,0,-1,0,0,0,0],\"mol/kg\",\"si\",true,null,null,1,false,false,1,\"mol per kg; moles; mols\",\"LOINC\",\"SCnt\",\"Clinical\",\"unit for tests related to stool\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"mole per kilogram per second\",\"mol/kg/s\",\"(MOL/KG)/S\",\"amount of substance\",602213670000000000000,[0,-1,-1,0,0,0,0],\"(mol/kg)/s\",\"si\",true,null,null,1,false,false,1,\"mol/kg/sec; mol per kg per sec; moles per kilograms per second; mols\",\"LOINC\",\"CCnt\",\"Clinical\",\"unit of catalytic activity (mol/s) per mass (kg)\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"mole per liter\",\"mol/L\",\"MOL/L\",\"amount of substance\",6.0221366999999994e+26,[-3,0,0,0,0,0,0],\"mol/L\",\"si\",true,null,null,1,false,false,1,\"mol per L; moles per liter; litre; moles; mols\",\"LOINC\",\"SCnc\",\"Clinical\",\"unit often used in tests measuring oxygen content\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"mole per cubic meter\",\"mol/m3\",\"MOL/M3\",\"amount of substance\",6.0221367e+23,[-3,0,0,0,0,0,0],\"mol/(m<sup>3</sup>)\",\"si\",true,null,null,1,false,false,1,\"mol/m^3; mol/cu. m; mol per m3; m^3; cu. meter; mols; moles; meters cubed; metre; mole per kiloliter; kilolitre; mol/kL\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"mole per milliliter\",\"mol/mL\",\"MOL/ML\",\"amount of substance\",6.0221367e+29,[-3,0,0,0,0,0,0],\"mol/mL\",\"si\",true,null,null,1,false,false,1,\"mol per mL; moles; millilitre; mols\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"mole per mole\",\"mol/mol\",\"MOL/MOL\",\"amount of substance\",1,[0,0,0,0,0,0,0],\"mol/mol\",\"si\",true,null,null,1,false,false,0,\"mol per mol; moles per mol; mols\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"mole per second\",\"mol/s\",\"MOL/S\",\"amount of substance\",6.0221367e+23,[0,-1,0,0,0,0,0],\"mol/s\",\"si\",true,null,null,1,false,false,1,\"mol per sec; moles per second; mols\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"milliosmole\",\"mosm\",\"MOSM\",\"amount of substance (dissolved particles)\",602213670000000000000,[0,0,0,0,0,0,0],\"mosm\",\"chemical\",true,null,null,1,false,false,1,\"milliosmoles\",\"LOINC\",\"Osmol\",\"Clinical\",\"equal to 1/1000 of an osmole\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliosmole per kilogram\",\"mosm/kg\",\"MOSM/KG\",\"amount of substance (dissolved particles)\",602213670000000000,[0,0,-1,0,0,0,0],\"mosm/kg\",\"chemical\",true,null,null,1,false,false,1,\"mosm per kg; milliosmoles per kilogram\",\"LOINC\",\"Osmol\",\"Clinical\",\"\",\"mol\",\"MOL\",\"1\",1,false],[false,\"milliosmole per liter\",\"mosm/L\",\"MOSM/L\",\"amount of substance (dissolved particles)\",6.0221367e+23,[-3,0,0,0,0,0,0],\"mosm/L\",\"chemical\",true,null,null,1,false,false,1,\"mosm per liter; litre; milliosmoles\",\"LOINC\",\"Osmol\",\"Clinical\",\"\",\"mol\",\"MOL\",\"1\",1,false],[false,\"millipascal\",\"mPa\",\"MPAL\",\"pressure\",1,[-1,-2,1,0,0,0,0],\"mPa\",\"si\",true,null,null,1,false,false,0,\"millipascals\",\"LOINC\",\"Pres\",\"Clinical\",\"unit of pressure\",\"N/m2\",\"N/M2\",\"1\",1,false],[false,\"millipascal second\",\"mPa.s\",\"MPAL.S\",\"pressure\",1,[-1,-1,1,0,0,0,0],\"mPa.s\",\"si\",true,null,null,1,false,false,0,\"mPa*s; millipoise; mP; dynamic viscosity\",\"LOINC\",\"Visc\",\"Clinical\",\"base units for millipoise, a measurement of dynamic viscosity\",\"N/m2\",\"N/M2\",\"1\",1,false],[true,\"megasecond\",\"Ms\",\"MAS\",\"time\",1000000,[0,1,0,0,0,0,0],\"Ms\",null,false,\"T\",null,1,false,false,0,\"megaseconds\",\"LOINC\",\"Time\",\"Clinical\",\"\",null,null,null,null,false],[true,\"millisecond\",\"ms\",\"MS\",\"time\",0.001,[0,1,0,0,0,0,0],\"ms\",null,false,\"T\",null,1,false,false,0,\"milliseconds; duration\",\"LOINC\",\"Time\",\"Clinical\",\"\",null,null,null,null,false],[false,\"milli enzyme unit per gram\",\"mU/g\",\"MU/G\",\"catalytic activity\",10036894500000,[0,-1,-1,0,0,0,0],\"mU/g\",\"chemical\",true,null,null,1,false,false,1,\"mU per gm; milli enzyme units per gram; enzyme activity; enzymatic activity per mass\",\"LOINC\",\"CCnt\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"milli enzyme unit per liter\",\"mU/L\",\"MU/L\",\"catalytic activity\",10036894500000000,[-3,-1,0,0,0,0,0],\"mU/L\",\"chemical\",true,null,null,1,false,false,1,\"mU per liter; litre; milli enzyme units enzymatic activity per volume; enzyme activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"milli enzyme unit per milligram\",\"mU/mg\",\"MU/MG\",\"catalytic activity\",10036894500000000,[0,-1,-1,0,0,0,0],\"mU/mg\",\"chemical\",true,null,null,1,false,false,1,\"mU per mg; milli enzyme units per milligram\",\"LOINC\",\"CCnt\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"milli enzyme unit per milliliter\",\"mU/mL\",\"MU/ML\",\"catalytic activity\",10036894500000000000,[-3,-1,0,0,0,0,0],\"mU/mL\",\"chemical\",true,null,null,1,false,false,1,\"mU per mL; milli enzyme units per milliliter; millilitre; enzymatic activity per volume; enzyme activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"milli enzyme unit per milliliter per minute\",\"mU/mL/min\",\"(MU/ML)/MIN\",\"catalytic activity\",167281575000000000,[-3,-2,0,0,0,0,0],\"(mU/mL)/min\",\"chemical\",true,null,null,1,false,false,1,\"mU per mL per min; mU per milliliters per minute; millilitres; milli enzyme units; enzymatic activity; enzyme activity\",\"LOINC\",\"CCncRat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"millivolt\",\"mV\",\"MV\",\"electric potential\",1,[2,-2,1,0,0,-1,0],\"mV\",\"si\",true,null,null,1,false,false,0,\"millivolts\",\"LOINC\",\"Elpot\",\"Clinical\",\"unit of electric potential (voltage)\",\"J/C\",\"J/C\",\"1\",1,false],[false,\"Newton centimeter\",\"N.cm\",\"N.CM\",\"force\",10,[2,-2,1,0,0,0,0],\"N.cm\",\"si\",true,null,null,1,false,false,0,\"N*cm; Ncm; N cm; Newton*centimeters; Newton* centimetres; torque; work\",\"LOINC\",\"\",\"Clinical\",\"as a measurement of work, N.cm = 1/100 Joules;\\nnote that N.m is the standard unit of measurement for torque (although dimensionally equivalent to Joule), and N.cm can also be thought of as a torqe unit\",\"kg.m/s2\",\"KG.M/S2\",\"1\",1,false],[false,\"Newton second\",\"N.s\",\"N.S\",\"force\",1000,[1,-1,1,0,0,0,0],\"N.s\",\"si\",true,null,null,1,false,false,0,\"Newton*seconds; N*s; N s; Ns; impulse; imp\",\"LOINC\",\"\",\"Clinical\",\"standard unit of impulse\",\"kg.m/s2\",\"KG.M/S2\",\"1\",1,false],[true,\"nanogram\",\"ng\",\"NG\",\"mass\",1e-9,[0,0,1,0,0,0,0],\"ng\",null,false,\"M\",null,1,false,false,0,\"nanograms\",\"LOINC\",\"Mass\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per 24 hour\",\"ng/(24.h)\",\"NG/HR\",\"mass\",1.1574074074074075e-14,[0,-1,1,0,0,0,0],\"ng/h\",null,false,\"M\",null,1,false,false,0,\"ng/24hrs; ng/24 hrs; nanograms per 24 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per 8 hour\",\"ng/(8.h)\",\"NG/HR\",\"mass\",3.4722222222222224e-14,[0,-1,1,0,0,0,0],\"ng/h\",null,false,\"M\",null,1,false,false,0,\"ng/8hrs; ng/8 hrs; nanograms per 8 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per million\",\"ng/10*6\",\"NG/(10*6)\",\"mass\",1e-15,[0,0,1,0,0,0,0],\"ng/(10<sup>6</sup>)\",null,false,\"M\",null,1,false,false,0,\"ng/10^6; ng per 10*6; 10^6; nanograms\",\"LOINC\",\"MNum\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per day\",\"ng/d\",\"NG/D\",\"mass\",1.1574074074074075e-14,[0,-1,1,0,0,0,0],\"ng/d\",null,false,\"M\",null,1,false,false,0,\"ng/dy; ng per day; nanograms \",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per deciliter\",\"ng/dL\",\"NG/DL\",\"mass\",0.00001,[-3,0,1,0,0,0,0],\"ng/dL\",null,false,\"M\",null,1,false,false,0,\"ng per dL; nanograms per deciliter; decilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per gram\",\"ng/g\",\"NG/G\",\"mass\",1e-9,[0,0,0,0,0,0,0],\"ng/g\",null,false,\"M\",null,1,false,false,0,\"ng/gm; ng per gm; nanograms per gram\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per hour\",\"ng/h\",\"NG/HR\",\"mass\",2.777777777777778e-13,[0,-1,1,0,0,0,0],\"ng/h\",null,false,\"M\",null,1,false,false,0,\"ng/hr; ng per hr; nanograms per hour\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per kilogram\",\"ng/kg\",\"NG/KG\",\"mass\",1e-12,[0,0,0,0,0,0,0],\"ng/kg\",null,false,\"M\",null,1,false,false,0,\"ng per kg; nanograms per kilogram\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per kilogram per 8 hour\",\"ng/kg/(8.h)\",\"(NG/KG)/HR\",\"mass\",3.472222222222222e-17,[0,-1,0,0,0,0,0],\"(ng/kg)/h\",null,false,\"M\",null,1,false,false,0,\"ng/(8.h.kg); ng/kg/8hrs; ng/kg/8 hrs; ng per kg per 8hrs; 8 hrs; nanograms per kilograms per 8 hours; shift\",\"LOINC\",\"MRtoRat \",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"nanogram per kilogram per hour\",\"ng/kg/h\",\"(NG/KG)/HR\",\"mass\",2.7777777777777775e-16,[0,-1,0,0,0,0,0],\"(ng/kg)/h\",null,false,\"M\",null,1,false,false,0,\"ng/(kg.h); ng/kg/hr; ng per kg per hr; nanograms per kilograms per hour\",\"LOINC\",\"MRtoRat \",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"nanogram per kilogram per minute\",\"ng/kg/min\",\"(NG/KG)/MIN\",\"mass\",1.6666666666666667e-14,[0,-1,0,0,0,0,0],\"(ng/kg)/min\",null,false,\"M\",null,1,false,false,0,\"ng/(kg.min); ng per kg per min; nanograms per kilograms per minute\",\"LOINC\",\"MRtoRat \",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"nanogram per liter\",\"ng/L\",\"NG/L\",\"mass\",0.000001,[-3,0,1,0,0,0,0],\"ng/L\",null,false,\"M\",null,1,false,false,0,\"ng per L; nanograms per liter; litre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per square meter\",\"ng/m2\",\"NG/M2\",\"mass\",1e-9,[-2,0,1,0,0,0,0],\"ng/(m<sup>2</sup>)\",null,false,\"M\",null,1,false,false,0,\"ng/m^2; ng/sq. m; ng per m2; m^2; sq. meter; nanograms; meter squared; metre\",\"LOINC\",\"ArMass\",\"Clinical\",\"unit used to measure mass dose per patient body surface area\",null,null,null,null,false],[true,\"nanogram per milligram\",\"ng/mg\",\"NG/MG\",\"mass\",0.000001,[0,0,0,0,0,0,0],\"ng/mg\",null,false,\"M\",null,1,false,false,0,\"ng per mg; nanograms\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per milligram per hour\",\"ng/mg/h\",\"(NG/MG)/HR\",\"mass\",2.7777777777777777e-10,[0,-1,0,0,0,0,0],\"(ng/mg)/h\",null,false,\"M\",null,1,false,false,0,\"ng/mg/hr; ng per mg per hr; nanograms per milligrams per hour\",\"LOINC\",\"MRtoRat \",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per minute\",\"ng/min\",\"NG/MIN\",\"mass\",1.6666666666666667e-11,[0,-1,1,0,0,0,0],\"ng/min\",null,false,\"M\",null,1,false,false,0,\"ng per min; nanograms\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per millliiter\",\"ng/mL\",\"NG/ML\",\"mass\",0.001,[-3,0,1,0,0,0,0],\"ng/mL\",null,false,\"M\",null,1,false,false,0,\"ng per mL; nanograms; millilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per milliliter per hour\",\"ng/mL/h\",\"(NG/ML)/HR\",\"mass\",2.7777777777777776e-7,[-3,-1,1,0,0,0,0],\"(ng/mL)/h\",null,false,\"M\",null,1,false,false,0,\"ng/mL/hr; ng per mL per mL; nanograms per milliliter per hour; nanogram per millilitre per hour; nanograms per millilitre per hour; enzymatic activity per volume; enzyme activity per milliliters\",\"LOINC\",\"CCnc\",\"Clinical\",\"tests that measure enzymatic activity\",null,null,null,null,false],[true,\"nanogram per second\",\"ng/s\",\"NG/S\",\"mass\",1e-9,[0,-1,1,0,0,0,0],\"ng/s\",null,false,\"M\",null,1,false,false,0,\"ng/sec; ng per sec; nanograms per second\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanogram per enzyme unit\",\"ng/U\",\"NG/U\",\"mass\",9.963241120049634e-26,[0,1,1,0,0,0,0],\"ng/U\",null,false,\"M\",null,1,false,false,-1,\"ng per U; nanograms per enzyme unit\",\"LOINC\",\"CMass\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",null,null,null,null,false],[false,\"nanokatal\",\"nkat\",\"NKAT\",\"catalytic activity\",602213670000000,[0,-1,0,0,0,0,0],\"nkat\",\"chemical\",true,null,null,1,false,false,1,\"nanokatals\",\"LOINC\",\"CAct\",\"Clinical\",\"kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.\",\"mol/s\",\"MOL/S\",\"1\",1,false],[false,\"nanoliter\",\"nL\",\"NL\",\"volume\",1.0000000000000002e-12,[3,0,0,0,0,0,0],\"nL\",\"iso1000\",true,null,null,1,false,false,0,\"nanoliters; nanolitres\",\"LOINC\",\"Vol\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[true,\"nanometer\",\"nm\",\"NM\",\"length\",1e-9,[1,0,0,0,0,0,0],\"nm\",null,false,\"L\",null,1,false,false,0,\"nanometers; nanometres\",\"LOINC\",\"Len\",\"Clinical\",\"\",null,null,null,null,false],[true,\"nanometer per second per liter\",\"nm/s/L\",\"(NM/S)/L\",\"length\",0.000001,[-2,-1,0,0,0,0,0],\"(nm/s)/L\",null,false,\"L\",null,1,false,false,0,\"nm/sec/liter; nm/sec/litre; nm per s per l; nm per sec per l; nanometers per second per liter; nanometre per second per litre; nanometres per second per litre\",\"LOINC\",\"VelCnc\",\"Clinical\",\"\",null,null,null,null,false],[false,\"nanomole\",\"nmol\",\"NMOL\",\"amount of substance\",602213670000000,[0,0,0,0,0,0,0],\"nmol\",\"si\",true,null,null,1,false,false,1,\"nanomoles\",\"LOINC\",\"Sub\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per 24 hour\",\"nmol/(24.h)\",\"NMOL/HR\",\"amount of substance\",6970065625,[0,-1,0,0,0,0,0],\"nmol/h\",\"si\",true,null,null,1,false,false,1,\"nmol/24hr; nmol/24 hr; nanomoles per 24 hours; nmol/day; nanomoles per day; nmol per day; nanomole/day; nanomol/day\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per day\",\"nmol/d\",\"NMOL/D\",\"amount of substance\",6970065625,[0,-1,0,0,0,0,0],\"nmol/d\",\"si\",true,null,null,1,false,false,1,\"nmol/day; nanomoles per day; nmol per day; nanomole/day; nanomol/day; nmol/24hr; nmol/24 hr; nanomoles per 24 hours; \",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per deciliter\",\"nmol/dL\",\"NMOL/DL\",\"amount of substance\",6022136700000000000,[-3,0,0,0,0,0,0],\"nmol/dL\",\"si\",true,null,null,1,false,false,1,\"nmol per dL; nanomoles per deciliter; nanomole per decilitre; nanomoles per decilitre; nanomole/deciliter; nanomole/decilitre; nanomol/deciliter; nanomol/decilitre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per gram\",\"nmol/g\",\"NMOL/G\",\"amount of substance\",602213670000000,[0,0,-1,0,0,0,0],\"nmol/g\",\"si\",true,null,null,1,false,false,1,\"nmol per gram; nanomoles per gram; nanomole/gram\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per hour per liter\",\"nmol/h/L\",\"(NMOL/HR)/L\",\"amount of substance\",167281575000000,[-3,-1,0,0,0,0,0],\"(nmol/h)/L\",\"si\",true,null,null,1,false,false,1,\"nmol/hrs/L; nmol per hrs per L; nanomoles per hours per liter; litre; enzymatic activity per volume; enzyme activities\",\"LOINC\",\"CCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per liter\",\"nmol/L\",\"NMOL/L\",\"amount of substance\",602213670000000000,[-3,0,0,0,0,0,0],\"nmol/L\",\"si\",true,null,null,1,false,false,1,\"nmol per L; nanomoles per liter; litre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per milligram\",\"nmol/mg\",\"NMOL/MG\",\"amount of substance\",602213670000000000,[0,0,-1,0,0,0,0],\"nmol/mg\",\"si\",true,null,null,1,false,false,1,\"nmol per mg; nanomoles per milligram\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per milligram per hour\",\"nmol/mg/h\",\"(NMOL/MG)/HR\",\"amount of substance\",167281575000000,[0,-1,-1,0,0,0,0],\"(nmol/mg)/h\",\"si\",true,null,null,1,false,false,1,\"nmol/mg/hr; nmol per mg per hr; nanomoles per milligrams per hour\",\"LOINC\",\"SCntRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per milligram of protein\",\"nmol/mg{prot}\",\"NMOL/MG\",\"amount of substance\",602213670000000000,[0,0,-1,0,0,0,0],\"nmol/mg\",\"si\",true,null,null,1,false,false,1,\"nanomoles; nmol/mg prot; nmol per mg prot\",\"LOINC\",\"Ratio; CCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per minute\",\"nmol/min\",\"NMOL/MIN\",\"amount of substance\",10036894500000,[0,-1,0,0,0,0,0],\"nmol/min\",\"si\",true,null,null,1,false,false,1,\"nmol per min; nanomoles per minute; milli enzyme units; enzyme activity per volume; enzymatic activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min. nmol/min = mU (milli enzyme unit)\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per minute per milliliter\",\"nmol/min/mL\",\"(NMOL/MIN)/ML\",\"amount of substance\",10036894500000000000,[-3,-1,0,0,0,0,0],\"(nmol/min)/mL\",\"si\",true,null,null,1,false,false,1,\"nmol per min per mL; nanomoles per minutes per milliliter; millilitre; milli enzyme units per volume; enzyme activity; enzymatic activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min. nmol/mL/min = mU/mL\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per milliliter\",\"nmol/mL\",\"NMOL/ML\",\"amount of substance\",602213670000000000000,[-3,0,0,0,0,0,0],\"nmol/mL\",\"si\",true,null,null,1,false,false,1,\"nmol per mL; nanomoles per milliliter; millilitre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per milliliter per hour\",\"nmol/mL/h\",\"(NMOL/ML)/HR\",\"amount of substance\",167281575000000000,[-3,-1,0,0,0,0,0],\"(nmol/mL)/h\",\"si\",true,null,null,1,false,false,1,\"nmol/mL/hr; nmol per mL per hr; nanomoles per milliliters per hour; millilitres; milli enzyme units per volume; enzyme activity; enzymatic activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min.\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per milliliter per minute\",\"nmol/mL/min\",\"(NMOL/ML)/MIN\",\"amount of substance\",10036894500000000000,[-3,-1,0,0,0,0,0],\"(nmol/mL)/min\",\"si\",true,null,null,1,false,false,1,\"nmol per mL per min; nanomoles per milliliters per min; millilitres; milli enzyme units per volume; enzyme activity; enzymatic activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min. nmol/mL/min = mU/mL\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per millimole\",\"nmol/mmol\",\"NMOL/MMOL\",\"amount of substance\",0.000001,[0,0,0,0,0,0,0],\"nmol/mmol\",\"si\",true,null,null,1,false,false,0,\"nmol per mmol; nanomoles per millimole\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per millimole of creatinine\",\"nmol/mmol{creat}\",\"NMOL/MMOL\",\"amount of substance\",0.000001,[0,0,0,0,0,0,0],\"nmol/mmol\",\"si\",true,null,null,1,false,false,0,\"nanomoles\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per mole\",\"nmol/mol\",\"NMOL/MOL\",\"amount of substance\",1e-9,[0,0,0,0,0,0,0],\"nmol/mol\",\"si\",true,null,null,1,false,false,0,\"nmol per mole; nanomoles\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per nanomole\",\"nmol/nmol\",\"NMOL/NMOL\",\"amount of substance\",1,[0,0,0,0,0,0,0],\"nmol/nmol\",\"si\",true,null,null,1,false,false,0,\"nmol per nmol; nanomoles\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per second\",\"nmol/s\",\"NMOL/S\",\"amount of substance\",602213670000000,[0,-1,0,0,0,0,0],\"nmol/s\",\"si\",true,null,null,1,false,false,1,\"nmol/sec; nmol per sec; nanomoles per sercond; milli enzyme units; enzyme activity; enzymatic activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min.\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"nanomole per second per liter\",\"nmol/s/L\",\"(NMOL/S)/L\",\"amount of substance\",602213670000000000,[-3,-1,0,0,0,0,0],\"(nmol/s)/L\",\"si\",true,null,null,1,false,false,1,\"nmol/sec/L; nmol per s per L; nmol per sec per L; nanomoles per seconds per liter; litre; milli enzyme units per volume; enzyme activity; enzymatic activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min.\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[true,\"nanosecond\",\"ns\",\"NS\",\"time\",1e-9,[0,1,0,0,0,0,0],\"ns\",null,false,\"T\",null,1,false,false,0,\"nanoseconds\",\"LOINC\",\"Time\",\"Clinical\",\"\",null,null,null,null,false],[false,\"nanoenzyme unit per milliliter\",\"nU/mL\",\"NU/ML\",\"catalytic activity\",10036894500000,[-3,-1,0,0,0,0,0],\"nU/mL\",\"chemical\",true,null,null,1,false,false,1,\"nU per mL; nanoenzyme units per milliliter; millilitre; enzymatic activity per volume; enzyme activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 fU = pmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"Ohm meter\",\"Ohm.m\",\"OHM.M\",\"electric resistance\",1000,[3,-1,1,0,0,-2,0],\"Ω.m\",\"si\",true,null,null,1,false,false,0,\"electric resistivity; meters; metres\",\"LOINC\",\"\",\"Clinical\",\"unit of electric resistivity\",\"V/A\",\"V/A\",\"1\",1,false],[false,\"osmole per kilogram\",\"osm/kg\",\"OSM/KG\",\"amount of substance (dissolved particles)\",602213670000000000000,[0,0,-1,0,0,0,0],\"osm/kg\",\"chemical\",true,null,null,1,false,false,1,\"osm per kg; osmoles per kilogram; osmols\",\"LOINC\",\"Osmol\",\"Clinical\",\"\",\"mol\",\"MOL\",\"1\",1,false],[false,\"osmole per liter\",\"osm/L\",\"OSM/L\",\"amount of substance (dissolved particles)\",6.0221366999999994e+26,[-3,0,0,0,0,0,0],\"osm/L\",\"chemical\",true,null,null,1,false,false,1,\"osm per L; osmoles per liter; litre; osmols\",\"LOINC\",\"Osmol\",\"Clinical\",\"\",\"mol\",\"MOL\",\"1\",1,false],[false,\"picoampere\",\"pA\",\"PA\",\"electric current\",1e-12,[0,-1,0,0,0,1,0],\"pA\",\"si\",true,null,null,1,false,false,0,\"picoamperes\",\"LOINC\",\"\",\"Clinical\",\"equal to 10^-12 amperes\",\"C/s\",\"C/S\",\"1\",1,false],[true,\"picogram\",\"pg\",\"PG\",\"mass\",1e-12,[0,0,1,0,0,0,0],\"pg\",null,false,\"M\",null,1,false,false,0,\"picograms\",\"LOINC\",\"Mass; EntMass\",\"Clinical\",\"\",null,null,null,null,false],[true,\"picogram per deciliter\",\"pg/dL\",\"PG/DL\",\"mass\",9.999999999999999e-9,[-3,0,1,0,0,0,0],\"pg/dL\",null,false,\"M\",null,1,false,false,0,\"pg per dL; picograms; decilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"picogram per liter\",\"pg/L\",\"PG/L\",\"mass\",1e-9,[-3,0,1,0,0,0,0],\"pg/L\",null,false,\"M\",null,1,false,false,0,\"pg per L; picograms; litre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"picogram per milligram\",\"pg/mg\",\"PG/MG\",\"mass\",1e-9,[0,0,0,0,0,0,0],\"pg/mg\",null,false,\"M\",null,1,false,false,0,\"pg per mg; picograms\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"picogram per milliliter\",\"pg/mL\",\"PG/ML\",\"mass\",0.000001,[-3,0,1,0,0,0,0],\"pg/mL\",null,false,\"M\",null,1,false,false,0,\"pg per mL; picograms per milliliter; millilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"picogram per millimeter\",\"pg/mm\",\"PG/MM\",\"mass\",1e-9,[-1,0,1,0,0,0,0],\"pg/mm\",null,false,\"M\",null,1,false,false,0,\"pg per mm; picogram/millimeter; picogram/millimetre; picograms per millimeter; millimetre\",\"LOINC\",\"Lineic Mass\",\"Clinical\",\"\",null,null,null,null,false],[false,\"picokatal\",\"pkat\",\"PKAT\",\"catalytic activity\",602213670000,[0,-1,0,0,0,0,0],\"pkat\",\"chemical\",true,null,null,1,false,false,1,\"pkats; picokatals\",\"LOINC\",\"CAct\",\"Clinical\",\"kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.\",\"mol/s\",\"MOL/S\",\"1\",1,false],[false,\"picoliter\",\"pL\",\"PL\",\"volume\",1e-15,[3,0,0,0,0,0,0],\"pL\",\"iso1000\",true,null,null,1,false,false,0,\"picoliters; picolitres\",\"LOINC\",\"Vol\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[true,\"picometer\",\"pm\",\"PM\",\"length\",1e-12,[1,0,0,0,0,0,0],\"pm\",null,false,\"L\",null,1,false,false,0,\"picometers; picometres\",\"LOINC\",\"Len\",\"Clinical\",\"\",null,null,null,null,false],[false,\"picomole\",\"pmol\",\"PMOL\",\"amount of substance\",602213670000,[0,0,0,0,0,0,0],\"pmol\",\"si\",true,null,null,1,false,false,1,\"picomoles; pmols\",\"LOINC\",\"Sub\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per 24 hour\",\"pmol/(24.h)\",\"PMOL/HR\",\"amount of substance\",6970065.625,[0,-1,0,0,0,0,0],\"pmol/h\",\"si\",true,null,null,1,false,false,1,\"pmol/24hrs; pmol/24 hrs; pmol per 24 hrs; 24hrs; days; dy; picomoles per 24 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per day\",\"pmol/d\",\"PMOL/D\",\"amount of substance\",6970065.625,[0,-1,0,0,0,0,0],\"pmol/d\",\"si\",true,null,null,1,false,false,1,\"pmol/dy; pmol per day; 24 hours; 24hrs; 24 hrs; picomoles\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per deciliter\",\"pmol/dL\",\"PMOL/DL\",\"amount of substance\",6022136700000000,[-3,0,0,0,0,0,0],\"pmol/dL\",\"si\",true,null,null,1,false,false,1,\"pmol per dL; picomoles per deciliter; decilitre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per gram\",\"pmol/g\",\"PMOL/G\",\"amount of substance\",602213670000,[0,0,-1,0,0,0,0],\"pmol/g\",\"si\",true,null,null,1,false,false,1,\"pmol per gm; picomoles per gram; picomole/gram\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per hour per milliliter \",\"pmol/h/mL\",\"(PMOL/HR)/ML\",\"amount of substance\",167281575000000,[-3,-1,0,0,0,0,0],\"(pmol/h)/mL\",\"si\",true,null,null,1,false,false,1,\"pmol/hrs/mL; pmol per hrs per mL; picomoles per hour per milliliter; millilitre; micro enzyme units per volume; enzymatic activity; enzyme activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min. \",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per liter\",\"pmol/L\",\"PMOL/L\",\"amount of substance\",602213670000000,[-3,0,0,0,0,0,0],\"pmol/L\",\"si\",true,null,null,1,false,false,1,\"picomole/liter; pmol per L; picomoles; litre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per minute\",\"pmol/min\",\"PMOL/MIN\",\"amount of substance\",10036894500,[0,-1,0,0,0,0,0],\"pmol/min\",\"si\",true,null,null,1,false,false,1,\"picomole/minute; pmol per min; picomoles per minute; micro enzyme units; enzymatic activity; enzyme activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min. pmol/min = uU (micro enzyme unit)\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per milliliter\",\"pmol/mL\",\"PMOL/ML\",\"amount of substance\",602213670000000000,[-3,0,0,0,0,0,0],\"pmol/mL\",\"si\",true,null,null,1,false,false,1,\"picomole/milliliter; picomole/millilitre; pmol per mL; picomoles; millilitre; picomols; pmols\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"picomole per micromole\",\"pmol/umol\",\"PMOL/UMOL\",\"amount of substance\",0.000001,[0,0,0,0,0,0,0],\"pmol/μmol\",\"si\",true,null,null,1,false,false,0,\"pmol/mcgmol; picomole/micromole; pmol per umol; pmol per mcgmol; picomoles \",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[true,\"picosecond\",\"ps\",\"PS\",\"time\",1e-12,[0,1,0,0,0,0,0],\"ps\",null,false,\"T\",null,1,false,false,0,\"picoseconds; psec\",\"LOINC\",\"Time\",\"Clinical\",\"\",null,null,null,null,false],[false,\"picotesla\",\"pT\",\"PT\",\"magnetic flux density\",1e-9,[0,-1,1,0,0,-1,0],\"pT\",\"si\",true,null,null,1,false,false,0,\"picoteslas\",\"LOINC\",\"\",\"Clinical\",\"SI unit of magnetic field strength for magnetic field B\",\"Wb/m2\",\"WB/M2\",\"1\",1,false],[false,\"enzyme unit per 12 hour\",\"U/(12.h)\",\"U/HR\",\"catalytic activity\",232335520833.33334,[0,-2,0,0,0,0,0],\"U/h\",\"chemical\",true,null,null,1,false,false,1,\"U/12hrs; U/ 12hrs; U per 12 hrs; 12hrs; enzyme units per 12 hours; enzyme activity; enzymatic activity per time; umol per min per 12 hours; micromoles per minute per 12 hours; umol/min/12hr\",\"LOINC\",\"CRat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per 2 hour\",\"U/(2.h)\",\"U/HR\",\"catalytic activity\",1394013125000,[0,-2,0,0,0,0,0],\"U/h\",\"chemical\",true,null,null,1,false,false,1,\"U/2hrs; U/ 2hrs; U per 2 hrs; 2hrs; enzyme units per 2 hours; enzyme activity; enzymatic activity per time; umol per minute per 2 hours; micromoles per minute; umol/min/2hr; umol per min per 2hr\",\"LOINC\",\"CRat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per 24 hour\",\"U/(24.h)\",\"U/HR\",\"catalytic activity\",116167760416.66667,[0,-2,0,0,0,0,0],\"U/h\",\"chemical\",true,null,null,1,false,false,1,\"U/24hrs; U/ 24hrs; U per 24 hrs; 24hrs; enzyme units per 24 hours; enzyme activity; enzymatic activity per time; micromoles per minute per 24 hours; umol/min/24hr; umol per min per 24hr\",\"LOINC\",\"CRat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per 10\",\"U/10\",\"U\",\"catalytic activity\",1003689450000000,[0,-1,0,0,0,0,0],\"U\",\"chemical\",true,null,null,1,false,false,1,\"enzyme unit/10; U per 10; enzyme units per 10; enzymatic activity; enzyme activity; micromoles per minute; umol/min/10\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per 10 billion\",\"U/10*10\",\"U/(10*10)\",\"catalytic activity\",1003689.45,[0,-1,0,0,0,0,0],\"U/(10<sup>10</sup>)\",\"chemical\",true,null,null,1,false,false,1,\"U per 10*10; enzyme units per 10*10; U per 10 billion; enzyme units; enzymatic activity; micromoles per minute per 10 billion; umol/min/10*10\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per trillion\",\"U/10*12\",\"U/(10*12)\",\"catalytic activity\",10036.8945,[0,-1,0,0,0,0,0],\"U/(10<sup>12</sup>)\",\"chemical\",true,null,null,1,false,false,1,\"enzyme unit/10*12; U per 10*12; enzyme units per 10*12; enzyme units per trillion; enzymatic activity; micromoles per minute per trillion; umol/min/10*12; umol per min per 10*12\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per million\",\"U/10*6\",\"U/(10*6)\",\"catalytic activity\",10036894500,[0,-1,0,0,0,0,0],\"U/(10<sup>6</sup>)\",\"chemical\",true,null,null,1,false,false,1,\"enzyme unit/10*6; U per 10*6; enzyme units per 10*6; enzyme units; enzymatic activity per volume; micromoles per minute per million; umol/min/10*6; umol per min per 10*6\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per billion\",\"U/10*9\",\"U/(10*9)\",\"catalytic activity\",10036894.5,[0,-1,0,0,0,0,0],\"U/(10<sup>9</sup>)\",\"chemical\",true,null,null,1,false,false,1,\"enzyme unit/10*9; U per 10*9; enzyme units per 10*9; enzymatic activity per volume; micromoles per minute per billion; umol/min/10*9; umol per min per 10*9\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per day\",\"U/d\",\"U/D\",\"catalytic activity\",116167760416.66667,[0,-2,0,0,0,0,0],\"U/d\",\"chemical\",true,null,null,1,false,false,1,\"U/dy; enzyme units per day; enzyme units; enzyme activity; enzymatic activity per time; micromoles per minute per day; umol/min/day; umol per min per day\",\"LOINC\",\"CRat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per deciliter\",\"U/dL\",\"U/DL\",\"catalytic activity\",100368945000000000000,[-3,-1,0,0,0,0,0],\"U/dL\",\"chemical\",true,null,null,1,false,false,1,\"U per dL; enzyme units per deciliter; decilitre; micromoles per minute per deciliter; umol/min/dL; umol per min per dL\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per gram\",\"U/g\",\"U/G\",\"catalytic activity\",10036894500000000,[0,-1,-1,0,0,0,0],\"U/g\",\"chemical\",true,null,null,1,false,false,1,\"U/gm; U per gm; enzyme units per gram; micromoles per minute per gram; umol/min/g; umol per min per g\",\"LOINC\",\"CCnt\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per hour\",\"U/h\",\"U/HR\",\"catalytic activity\",2788026250000,[0,-2,0,0,0,0,0],\"U/h\",\"chemical\",true,null,null,1,false,false,1,\"U/hr; U per hr; enzyme units per hour; micromoles per minute per hour; umol/min/hr; umol per min per hr\",\"LOINC\",\"CRat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per liter\",\"U/L\",\"U/L\",\"catalytic activity\",10036894500000000000,[-3,-1,0,0,0,0,0],\"U/L\",\"chemical\",true,null,null,1,false,false,1,\"enzyme unit/liter; enzyme unit/litre; U per L; enzyme units per liter; enzyme unit per litre; micromoles per minute per liter; umol/min/L; umol per min per L\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per minute\",\"U/min\",\"U/MIN\",\"catalytic activity\",167281575000000,[0,-2,0,0,0,0,0],\"U/min\",\"chemical\",true,null,null,1,false,false,1,\"enzyme unit/minute; U per min; enzyme units; umol/min/min; micromoles per minute per minute; micromoles per min per min; umol\",\"LOINC\",\"CRat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per milliliter\",\"U/mL\",\"U/ML\",\"catalytic activity\",1.00368945e+22,[-3,-1,0,0,0,0,0],\"U/mL\",\"chemical\",true,null,null,1,false,false,1,\"U per mL; enzyme units per milliliter; millilitre; micromoles per minute per milliliter; umol/min/mL; umol per min per mL\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"enzyme unit per second\",\"U/s\",\"U/S\",\"catalytic activity\",10036894500000000,[0,-2,0,0,0,0,0],\"U/s\",\"chemical\",true,null,null,1,false,false,1,\"U/sec; U per second; enzyme units per second; micromoles per minute per second; umol/min/sec; umol per min per sec\",\"LOINC\",\"CRat\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"micro international unit\",\"u[IU]\",\"U[IU]\",\"arbitrary\",0.000001,[0,0,0,0,0,0,0],\"μi.U.\",\"chemical\",true,null,null,1,false,true,0,\"uIU; u IU; microinternational units\",\"LOINC\",\"Arb\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"micro international unit per liter\",\"u[IU]/L\",\"U[IU]/L\",\"arbitrary\",0.001,[-3,0,0,0,0,0,0],\"(μi.U.)/L\",\"chemical\",true,null,null,1,false,true,0,\"uIU/L; u IU/L; uIU per L; microinternational units per liter; litre; \",\"LOINC\",\"ACnc\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"micro international unit per milliliter\",\"u[IU]/mL\",\"U[IU]/ML\",\"arbitrary\",1,[-3,0,0,0,0,0,0],\"(μi.U.)/mL\",\"chemical\",true,null,null,1,false,true,0,\"uIU/mL; u IU/mL; uIU per mL; microinternational units per milliliter; millilitre\",\"LOINC\",\"ACnc\",\"Clinical\",\"International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)\",\"[iU]\",\"[IU]\",\"1\",1,false],[false,\"microequivalent\",\"ueq\",\"UEQ\",\"amount of substance\",602213670000000000,[0,0,0,0,0,0,0],\"μeq\",\"chemical\",true,null,null,1,false,false,1,\"microequivalents; 10^-6 equivalents; 10-6 equivalents\",\"LOINC\",\"Sub\",\"Clinical\",\"\",\"mol\",\"MOL\",\"1\",1,false],[false,\"microequivalent per liter\",\"ueq/L\",\"UEQ/L\",\"amount of substance\",602213670000000000000,[-3,0,0,0,0,0,0],\"μeq/L\",\"chemical\",true,null,null,1,false,false,1,\"ueq per liter; litre; microequivalents\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",\"mol\",\"MOL\",\"1\",1,false],[false,\"microequivalent per milliliter\",\"ueq/mL\",\"UEQ/ML\",\"amount of substance\",6.0221367000000003e+23,[-3,0,0,0,0,0,0],\"μeq/mL\",\"chemical\",true,null,null,1,false,false,1,\"ueq per milliliter; millilitre; microequivalents\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",\"mol\",\"MOL\",\"1\",1,false],[true,\"microgram\",\"ug\",\"UG\",\"mass\",0.000001,[0,0,1,0,0,0,0],\"μg\",null,false,\"M\",null,1,false,false,0,\"mcg; micrograms; 10^-6 grams; 10-6 grams\",\"LOINC\",\"Mass\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per 100 gram\",\"ug/(100.g)\",\"UG/G\",\"mass\",1e-8,[0,0,0,0,0,0,0],\"μg/g\",null,false,\"M\",null,1,false,false,0,\"ug/100gm; ug/100 gm; mcg; ug per 100g; 100 gm; mcg per 100g; micrograms per 100 grams\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per 24 hour\",\"ug/(24.h)\",\"UG/HR\",\"mass\",1.1574074074074074e-11,[0,-1,1,0,0,0,0],\"μg/h\",null,false,\"M\",null,1,false,false,0,\"ug/24hrs; ug/24 hrs; mcg/24hrs; ug per 24hrs; mcg per 24hrs; 24 hrs; micrograms per 24 hours\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per 8 hour\",\"ug/(8.h)\",\"UG/HR\",\"mass\",3.472222222222222e-11,[0,-1,1,0,0,0,0],\"μg/h\",null,false,\"M\",null,1,false,false,0,\"ug/8hrs; ug/8 hrs; mcg/8hrs; ug per 8hrs; mcg per 8hrs; 8 hrs; micrograms per 8 hours; shift\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per square foot (international)\",\"ug/[sft_i]\",\"UG/[SFT_I]\",\"mass\",0.000010763910416709721,[-2,0,1,0,0,0,0],\"μg\",null,false,\"M\",null,1,false,false,0,\"ug/sft; ug/ft2; ug/ft^2; ug/sq. ft; micrograms; sq. foot; foot squared\",\"LOINC\",\"ArMass\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per day\",\"ug/d\",\"UG/D\",\"mass\",1.1574074074074074e-11,[0,-1,1,0,0,0,0],\"μg/d\",null,false,\"M\",null,1,false,false,0,\"ug/dy; mcg/dy; ug per day; mcg; micrograms per day\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per deciliter\",\"ug/dL\",\"UG/DL\",\"mass\",0.009999999999999998,[-3,0,1,0,0,0,0],\"μg/dL\",null,false,\"M\",null,1,false,false,0,\"ug per dL; mcg/dl; mcg per dl; micrograms per deciliter; decilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per gram\",\"ug/g\",\"UG/G\",\"mass\",0.000001,[0,0,0,0,0,0,0],\"μg/g\",null,false,\"M\",null,1,false,false,0,\"ug per gm; mcg/gm; mcg per g; micrograms per gram\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per hour\",\"ug/h\",\"UG/HR\",\"mass\",2.7777777777777777e-10,[0,-1,1,0,0,0,0],\"μg/h\",null,false,\"M\",null,1,false,false,0,\"ug/hr; mcg/hr; mcg per hr; ug per hr; ug per hour; micrograms\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per kilogram\",\"ug/kg\",\"UG/KG\",\"mass\",9.999999999999999e-10,[0,0,0,0,0,0,0],\"μg/kg\",null,false,\"M\",null,1,false,false,0,\"ug per kg; mcg/kg; mcg per kg; micrograms per kilogram\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per kilogram per 8 hour\",\"ug/kg/(8.h)\",\"(UG/KG)/HR\",\"mass\",3.472222222222222e-14,[0,-1,0,0,0,0,0],\"(μg/kg)/h\",null,false,\"M\",null,1,false,false,0,\"ug/kg/8hrs; mcg/kg/8hrs; ug/kg/8 hrs; mcg/kg/8 hrs; ug per kg per 8hrs; 8 hrs; mcg per kg per 8hrs; micrograms per kilograms per 8 hours; shift\",\"LOINC\",\"\",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"microgram per kilogram per day\",\"ug/kg/d\",\"(UG/KG)/D\",\"mass\",1.1574074074074072e-14,[0,-1,0,0,0,0,0],\"(μg/kg)/d\",null,false,\"M\",null,1,false,false,0,\"ug/(kg.d); ug/kg/dy; mcg/kg/day; ug per kg per dy; 24 hours; 24hrs; mcg; kilograms; microgram per kilogram and day\",\"LOINC\",\"\",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"microgram per kilogram per hour\",\"ug/kg/h\",\"(UG/KG)/HR\",\"mass\",2.7777777777777774e-13,[0,-1,0,0,0,0,0],\"(μg/kg)/h\",null,false,\"M\",null,1,false,false,0,\"ug/(kg.h); ug/kg/hr; mcg/kg/hr; ug per kg per hr; mcg per kg per hr; kilograms\",\"LOINC\",\"\",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"microgram per kilogram per minute\",\"ug/kg/min\",\"(UG/KG)/MIN\",\"mass\",1.6666666666666664e-11,[0,-1,0,0,0,0,0],\"(μg/kg)/min\",null,false,\"M\",null,1,false,false,0,\"ug/kg/min; ug/kg/min; mcg/kg/min; ug per kg per min; mcg; micrograms per kilograms per minute \",\"LOINC\",\"\",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"microgram per liter\",\"ug/L\",\"UG/L\",\"mass\",0.001,[-3,0,1,0,0,0,0],\"μg/L\",null,false,\"M\",null,1,false,false,0,\"mcg/L; ug per L; mcg; micrograms per liter; litre \",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per liter per 24 hour\",\"ug/L/(24.h)\",\"(UG/L)/HR\",\"mass\",1.1574074074074074e-8,[-3,-1,1,0,0,0,0],\"(μg/L)/h\",null,false,\"M\",null,1,false,false,0,\"ug/L/24hrs; ug/L/24 hrs; mcg/L/24hrs; ug per L per 24hrs; 24 hrs; day; dy mcg; micrograms per liters per 24 hours; litres\",\"LOINC\",\"\",\"Clinical\",\"unit used to measure mass dose rate per patient body mass\",null,null,null,null,false],[true,\"microgram per square meter\",\"ug/m2\",\"UG/M2\",\"mass\",0.000001,[-2,0,1,0,0,0,0],\"μg/(m<sup>2</sup>)\",null,false,\"M\",null,1,false,false,0,\"ug/m^2; ug/sq. m; mcg/m2; mcg/m^2; mcg/sq. m; ug per m2; m^2; sq. meter; mcg; micrograms per square meter; meter squared; metre\",\"LOINC\",\"ArMass\",\"Clinical\",\"unit used to measure mass dose per patient body surface area\",null,null,null,null,false],[true,\"microgram per cubic meter\",\"ug/m3\",\"UG/M3\",\"mass\",0.000001,[-3,0,1,0,0,0,0],\"μg/(m<sup>3</sup>)\",null,false,\"M\",null,1,false,false,0,\"ug/m^3; ug/cu. m; mcg/m3; mcg/m^3; mcg/cu. m; ug per m3; ug per m^3; ug per cu. m; mcg; micrograms per cubic meter; meter cubed; metre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per milligram\",\"ug/mg\",\"UG/MG\",\"mass\",0.001,[0,0,0,0,0,0,0],\"μg/mg\",null,false,\"M\",null,1,false,false,0,\"ug per mg; mcg/mg; mcg per mg; micromilligrams per milligram\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per minute\",\"ug/min\",\"UG/MIN\",\"mass\",1.6666666666666667e-8,[0,-1,1,0,0,0,0],\"μg/min\",null,false,\"M\",null,1,false,false,0,\"ug per min; mcg/min; mcg per min; microminutes per minute\",\"LOINC\",\"MRat\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per milliliter\",\"ug/mL\",\"UG/ML\",\"mass\",1,[-3,0,1,0,0,0,0],\"μg/mL\",null,false,\"M\",null,1,false,false,0,\"ug per mL; mcg/mL; mcg per mL; micrograms per milliliter; millilitre\",\"LOINC\",\"MCnc\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per millimole\",\"ug/mmol\",\"UG/MMOL\",\"mass\",1.660540186674939e-27,[0,0,1,0,0,0,0],\"μg/mmol\",null,false,\"M\",null,1,false,false,-1,\"ug per mmol; mcg/mmol; mcg per mmol; micrograms per millimole\",\"LOINC\",\"Ratio\",\"Clinical\",\"\",null,null,null,null,false],[true,\"microgram per nanogram\",\"ug/ng\",\"UG/NG\",\"mass\",999.9999999999999,[0,0,0,0,0,0,0],\"μg/ng\",null,false,\"M\",null,1,false,false,0,\"ug per ng; mcg/ng; mcg per ng; micrograms per nanogram\",\"LOINC\",\"MCnt\",\"Clinical\",\"\",null,null,null,null,false],[false,\"microkatal\",\"ukat\",\"UKAT\",\"catalytic activity\",602213670000000000,[0,-1,0,0,0,0,0],\"μkat\",\"chemical\",true,null,null,1,false,false,1,\"microkatals; ukats\",\"LOINC\",\"CAct\",\"Clinical\",\"kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.\",\"mol/s\",\"MOL/S\",\"1\",1,false],[false,\"microliter\",\"uL\",\"UL\",\"volume\",1e-9,[3,0,0,0,0,0,0],\"μL\",\"iso1000\",true,null,null,1,false,false,0,\"microliters; microlitres; mcl\",\"LOINC\",\"Vol\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"microliter per 2 hour\",\"uL/(2.h)\",\"UL/HR\",\"volume\",1.388888888888889e-13,[3,-1,0,0,0,0,0],\"μL/h\",\"iso1000\",true,null,null,1,false,false,0,\"uL/2hrs; uL/2 hrs; mcg/2hr; mcg per 2hr; uL per 2hr; uL per 2 hrs; microliters per 2 hours; microlitres \",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[false,\"microliter per hour\",\"uL/h\",\"UL/HR\",\"volume\",2.777777777777778e-13,[3,-1,0,0,0,0,0],\"μL/h\",\"iso1000\",true,null,null,1,false,false,0,\"uL/hr; mcg/hr; mcg per hr; uL per hr; microliters per hour; microlitres\",\"LOINC\",\"VRat\",\"Clinical\",\"\",\"l\",null,\"1\",1,false],[true,\"micrometer\",\"um\",\"UM\",\"length\",0.000001,[1,0,0,0,0,0,0],\"μm\",null,false,\"L\",null,1,false,false,0,\"micrometers; micrometres; μm; microns\",\"LOINC\",\"Len\",\"Clinical\",\"Unit of length that is usually used in tests related to the eye\",null,null,null,null,false],[true,\"microns per second\",\"um/s\",\"UM/S\",\"length\",0.000001,[1,-1,0,0,0,0,0],\"μm/s\",null,false,\"L\",null,1,false,false,0,\"um/sec; micron/second; microns/second; um per sec; micrometers per second; micrometres\",\"LOINC\",\"Vel\",\"Clinical\",\"\",null,null,null,null,false],[false,\"micromole\",\"umol\",\"UMOL\",\"amount of substance\",602213670000000000,[0,0,0,0,0,0,0],\"μmol\",\"si\",true,null,null,1,false,false,1,\"micromoles; umols\",\"LOINC\",\"Sub\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per 2 hour\",\"umol/(2.h)\",\"UMOL/HR\",\"amount of substance\",83640787500000,[0,-1,0,0,0,0,0],\"μmol/h\",\"si\",true,null,null,1,false,false,1,\"umol/2hrs; umol/2 hrs; umol per 2 hrs; 2hrs; micromoles per 2 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per 24 hour\",\"umol/(24.h)\",\"UMOL/HR\",\"amount of substance\",6970065625000,[0,-1,0,0,0,0,0],\"μmol/h\",\"si\",true,null,null,1,false,false,1,\"umol/24hrs; umol/24 hrs; umol per 24 hrs; per 24hrs; micromoles per 24 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per 8 hour\",\"umol/(8.h)\",\"UMOL/HR\",\"amount of substance\",20910196875000,[0,-1,0,0,0,0,0],\"μmol/h\",\"si\",true,null,null,1,false,false,1,\"umol/8hr; umol/8 hr; umol per 8 hr; umol per 8hr; umols per 8hr; umol per 8 hours; micromoles per 8 hours; shift\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per day\",\"umol/d\",\"UMOL/D\",\"amount of substance\",6970065625000,[0,-1,0,0,0,0,0],\"μmol/d\",\"si\",true,null,null,1,false,false,1,\"umol/day; umol per day; umols per day; umol per days; micromoles per days; umol/24hr; umol/24 hr; umol per 24 hr; umol per 24hr; umols per 24hr; umol per 24 hours; micromoles per 24 hours\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per deciliter\",\"umol/dL\",\"UMOL/DL\",\"amount of substance\",6.0221367e+21,[-3,0,0,0,0,0,0],\"μmol/dL\",\"si\",true,null,null,1,false,false,1,\"micromole/deciliter; micromole/decilitre; umol per dL; micromoles per deciliters; micromole per decilitres\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per gram\",\"umol/g\",\"UMOL/G\",\"amount of substance\",602213670000000000,[0,0,-1,0,0,0,0],\"μmol/g\",\"si\",true,null,null,1,false,false,1,\"micromole/gram; umol per g; micromoles per gram\",\"LOINC\",\"SCnt; Ratio\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per hour\",\"umol/h\",\"UMOL/HR\",\"amount of substance\",167281575000000,[0,-1,0,0,0,0,0],\"μmol/h\",\"si\",true,null,null,1,false,false,1,\"umol/hr; umol per hr; umol per hour; micromoles per hours\",\"LOINC\",\"SRat\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per kilogram\",\"umol/kg\",\"UMOL/KG\",\"amount of substance\",602213670000000,[0,0,-1,0,0,0,0],\"μmol/kg\",\"si\",true,null,null,1,false,false,1,\"umol per kg; micromoles per kilogram\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per liter\",\"umol/L\",\"UMOL/L\",\"amount of substance\",602213670000000000000,[-3,0,0,0,0,0,0],\"μmol/L\",\"si\",true,null,null,1,false,false,1,\"micromole/liter; micromole/litre; umol per liter; micromoles per liter; litre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per liter per hour\",\"umol/L/h\",\"(UMOL/L)/HR\",\"amount of substance\",167281575000000000,[-3,-1,0,0,0,0,0],\"(μmol/L)/h\",\"si\",true,null,null,1,false,false,1,\"umol/liter/hr; umol/litre/hr; umol per L per hr; umol per liter per hour; micromoles per liters per hour; litre\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min; umol/L/h is a derived unit of enzyme units\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per milligram\",\"umol/mg\",\"UMOL/MG\",\"amount of substance\",602213670000000000000,[0,0,-1,0,0,0,0],\"μmol/mg\",\"si\",true,null,null,1,false,false,1,\"micromole/milligram; umol per mg; micromoles per milligram\",\"LOINC\",\"SCnt\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per minute\",\"umol/min\",\"UMOL/MIN\",\"amount of substance\",10036894500000000,[0,-1,0,0,0,0,0],\"μmol/min\",\"si\",true,null,null,1,false,false,1,\"micromole/minute; umol per min; micromoles per minute; enzyme units\",\"LOINC\",\"CAct\",\"Clinical\",\"unit for the enzyme unit U = umol/min\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per minute per gram\",\"umol/min/g\",\"(UMOL/MIN)/G\",\"amount of substance\",10036894500000000,[0,-1,-1,0,0,0,0],\"(μmol/min)/g\",\"si\",true,null,null,1,false,false,1,\"umol/min/gm; umol per min per gm; micromoles per minutes per gram; U/g; enzyme units\",\"LOINC\",\"CCnt\",\"Clinical\",\"unit for the enzyme unit U = umol/min. umol/min/g = U/g\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per minute per liter\",\"umol/min/L\",\"(UMOL/MIN)/L\",\"amount of substance\",10036894500000000000,[-3,-1,0,0,0,0,0],\"(μmol/min)/L\",\"si\",true,null,null,1,false,false,1,\"umol/min/liter; umol/minute/liter; micromoles per minutes per liter; litre; enzyme units; U/L\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min. umol/min/L = U/L\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per milliliter\",\"umol/mL\",\"UMOL/ML\",\"amount of substance\",6.0221367000000003e+23,[-3,0,0,0,0,0,0],\"μmol/mL\",\"si\",true,null,null,1,false,false,1,\"umol per mL; micromoles per milliliter; millilitre\",\"LOINC\",\"SCnc\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per milliliter per minute\",\"umol/mL/min\",\"(UMOL/ML)/MIN\",\"amount of substance\",1.00368945e+22,[-3,-1,0,0,0,0,0],\"(μmol/mL)/min\",\"si\",true,null,null,1,false,false,1,\"umol per mL per min; micromoles per milliliters per minute; millilitres\",\"LOINC\",\"CCnc\",\"Clinical\",\"unit for the enzyme unit U = umol/min. umol/mL/min = U/mL\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per millimole\",\"umol/mmol\",\"UMOL/MMOL\",\"amount of substance\",0.001,[0,0,0,0,0,0,0],\"μmol/mmol\",\"si\",true,null,null,1,false,false,0,\"umol per mmol; micromoles per millimole\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per mole\",\"umol/mol\",\"UMOL/MOL\",\"amount of substance\",0.000001,[0,0,0,0,0,0,0],\"μmol/mol\",\"si\",true,null,null,1,false,false,0,\"umol per mol; micromoles per mole\",\"LOINC\",\"SRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"micromole per micromole\",\"umol/umol\",\"UMOL/UMOL\",\"amount of substance\",1,[0,0,0,0,0,0,0],\"μmol/μmol\",\"si\",true,null,null,1,false,false,0,\"umol per umol; micromoles per micromole\",\"LOINC\",\"Srto; SFr; EntSRto\",\"Clinical\",\"\",\"10*23\",\"10*23\",\"6.0221367\",6.0221367,false],[false,\"microOhm\",\"uOhm\",\"UOHM\",\"electric resistance\",0.001,[2,-1,1,0,0,-2,0],\"μΩ\",\"si\",true,null,null,1,false,false,0,\"microOhms; µΩ\",\"LOINC\",\"\",\"Clinical\",\"unit of electric resistance\",\"V/A\",\"V/A\",\"1\",1,false],[true,\"microsecond\",\"us\",\"US\",\"time\",0.000001,[0,1,0,0,0,0,0],\"μs\",null,false,\"T\",null,1,false,false,0,\"microseconds\",\"LOINC\",\"Time\",\"Clinical\",\"\",null,null,null,null,false],[false,\"micro enzyme unit per gram\",\"uU/g\",\"UU/G\",\"catalytic activity\",10036894500,[0,-1,-1,0,0,0,0],\"μU/g\",\"chemical\",true,null,null,1,false,false,1,\"uU per gm; micro enzyme units per gram; micro enzymatic activity per mass; enzyme activity\",\"LOINC\",\"CCnt\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 uU = 1pmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"micro enzyme unit per liter\",\"uU/L\",\"UU/L\",\"catalytic activity\",10036894500000,[-3,-1,0,0,0,0,0],\"μU/L\",\"chemical\",true,null,null,1,false,false,1,\"uU per L; micro enzyme units per liter; litre; enzymatic activity per volume; enzyme activity \",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 uU = 1pmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"micro enzyme unit per milliliter\",\"uU/mL\",\"UU/ML\",\"catalytic activity\",10036894500000000,[-3,-1,0,0,0,0,0],\"μU/mL\",\"chemical\",true,null,null,1,false,false,1,\"uU per mL; micro enzyme units per milliliter; millilitre; enzymatic activity per volume; enzyme activity\",\"LOINC\",\"CCnc\",\"Clinical\",\"1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 uU = 1pmol/min\",\"umol/min\",\"UMOL/MIN\",\"1\",1,false],[false,\"microvolt\",\"uV\",\"UV\",\"electric potential\",0.001,[2,-2,1,0,0,-1,0],\"μV\",\"si\",true,null,null,1,false,false,0,\"microvolts\",\"LOINC\",\"Elpot\",\"Clinical\",\"unit of electric potential (voltage)\",\"J/C\",\"J/C\",\"1\",1,false]]}}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Ucum = void 0;\n\n/*\n * This defines the namespace for the UCUM classes and provides\n * a place for the definition of global variables and constants.\n *\n * The javascript for this UCUM implementation uses syntax as\n * defined by the ECMAScript 6 standard\n */\nvar Ucum = {\n  /**\n   *  Flag indicating whether or not we're using case sensitive labels\n   *  I don't think we need this.  I think we're just going with\n   *  case sensitive, per Clem.   Gunther's code has this flag, but I\n   *  am removing it, at least for now.  lm, 6/2016\n   */\n  //caseSensitive_: true ,\n\n  /**\n   *  The number of elements in a Dimension array.   Currently this\n   *  is set as a configuration variable, but when we get to the point\n   *  of loading the unit definitions from a file, this value will be\n   *  set from that.\n   */\n  dimLen_: 7,\n\n  /**\n   *  The characters used as valid operators in a UCUM unit expression,\n   *  where '.' is for multiplication and '/' is for division.\n   */\n  validOps_: ['.', '/'],\n\n  /**\n   * The string used to separate a unit code and unit name when they\n   * are displayed together\n   */\n  codeSep_: ': ',\n  // Message text variations for validation methods and conversion methods\n  valMsgStart_: 'Did you mean ',\n  valMsgEnd_: '?',\n  cnvMsgStart_: 'We assumed you meant ',\n  cnvMsgEnd_: '.',\n\n  /**\n     * Default opening string used to emphasize portions of error messages.\n     * Used when NOT displaying messages on a web site, i.e., for output\n     * from the library methods or to a file.\n     */\n  openEmph_: ' ->',\n\n  /**\n   * Default closing string used to emphasize portions of error messages.\n   * Used when NOT displaying messages on a web site, i.e., for output\n   * from the library methods or to a file.\n   */\n  closeEmph_: '<- ',\n\n  /**\n   * Opening HTML used to emphasize portions of error messages.  Used when\n   * displaying messages on a web site; should be blank when output is\n   * to a file.\n   */\n  openEmphHTML_: '<span class=\"emphSpan\">',\n\n  /**\n   * Closing HTML used to emphasize portions of error messages.  Used when\n   * displaying messages on a web site; should be blank when output is\n   * to a file.\n   */\n  closeEmphHTML_: '</span>',\n\n  /**\n   * Message that is displayed when annotations are included in a unit\n   * string, to let the user know how they are interpreted.\n   */\n  bracesMsg_: 'FYI - annotations (text in curly braces {}) are ignored, ' + 'except that an annotation without a leading symbol implies ' + 'the default unit 1 (the unity).',\n\n  /**\n   * Message that is displayed or returned when a conversion is requested\n   * for two units where (only) a mass<->moles conversion is appropriate\n   * but no molecular weight was specified.\n   */\n  needMoleWeightMsg_: 'Did you wish to convert between mass and moles?  The ' + 'molecular weight of the substance represented by the ' + 'units is required to perform the conversion.',\n\n  /**\n   * Hash that matches unit column names to names used in the csv file\n   * that is submitted to the data updater.\n   */\n  csvCols_: {\n    'case-sensitive code': 'csCode_',\n    'LOINC property': 'loincProperty_',\n    'name (display)': 'name_',\n    'synonyms': 'synonyms_',\n    'source': 'source_',\n    'category': 'category_',\n    'Guidance': 'guidance_'\n  },\n\n  /**\n   * Name of the column in the csv file that serves as the key\n   */\n  inputKey_: 'case-sensitive code',\n\n  /**\n   * Special codes that contain operators within brackets.  The operator\n   * within these codes causes them to parse incorrectly if they are preceded\n   * by a prefix, because the parsing algorithm splits them up on the operator.\n   * So we use this object to identify them and substitute placeholders to\n   * avoid that.\n   */\n  specUnits_: {\n    'B[10.nV]': 'specialUnitOne',\n    '[m/s2/Hz^(1/2)]': 'specialUnitTwo'\n  }\n};\nexports.Ucum = Ucum;\n//# sourceMappingURL=config.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dimension = void 0;\n\n/**\n * This class implements an object containing the vector of exponents for\n * a unit and its operations for addition, subtraction, and multiplication\n * with a scalar.\n *\n * This object should exist for each unit that can be expressed as a\n * vector of numbers.   This excludes arbitrary units, e.g., (10*23), and\n * units that are not numbers but are an expression based solely on numbers,\n * e.g., mol (mole) which is based on 10*23.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n */\nvar UC = require('./config.js');\n\nvar isInteger = require(\"is-integer\");\n\nclass Dimension {\n  /**\n   * Constructor.\n   *\n   * @param dimSetting an optional parameter that may be:\n   *  null, which means that the dimVec_ attribute for this object will be null; or\n   *  an array, which must be the length defined by Ucum.dimLen_, and\n   *    whose contents will be copied to this new object's vector; or\n   *  an integer, which must be between 0 and 1 less than the vector length\n   *    defined by Ucum.dimLen_.  This new object's vector will be\n   *    initialized to zero for all elements except the one whose index\n   *    matches the number passed in.  That element will be set to one.\n    * @throws an error if the dimSetting parameter does not meet the types\n   *  listed above.\n   *  An error will also be thrown if Ucum.dimLen_ has not been set yet,\n   *  i.e., is still zero.   Currently that won't happen, because the\n   *  value is set in the config.js file.  But further down the road\n   *  the setting will come from a definitions input file, so we check\n   *  here anyway.\n   *\n   */\n  constructor(dimSetting) {\n    if (UC.Ucum.dimLen_ === 0) {\n      throw new Error('Dimension.setDimensionLen must be called before ' + 'Dimension constructor');\n    }\n\n    if (dimSetting === undefined || dimSetting === null) {\n      this.assignZero();\n    } else if (dimSetting instanceof Array) {\n      if (dimSetting.length !== UC.Ucum.dimLen_) {\n        throw new Error('Parameter error, incorrect length of vector passed to ' + `Dimension constructor, vector = ${JSON.stringify(dimSetting)}`);\n      }\n\n      this.dimVec_ = [];\n\n      for (let d = 0; d < UC.Ucum.dimLen_; d++) this.dimVec_.push(dimSetting[d]);\n    } // In es6 this should be Number.isInteger(dimSetting).  But Babel\n    // doesn't transpile that correctly, so we need to use the isInteger\n    // module.  :0\n    else if (isInteger(dimSetting)) {\n        if (dimSetting < 0 || dimSetting >= UC.Ucum.dimLen_) {\n          throw new Error('Parameter error, invalid element number specified for ' + 'Dimension constructor');\n        }\n\n        this.assignZero();\n        this.dimVec_[dimSetting] = 1;\n      }\n  } // end constructor\n\n  /**\n   * Sets the element at the specified position to a specified value.  The\n   * default value is 1.  If the dimension vector is null when this is called\n   * a zero-filled vector is created and then the indicated position is set.\n   *\n   * @param indexPos the index of the element to be set\n   * @param value the value to assign to the specified element; optional,\n   *  default value is 1\n   * @throws an exception if the specified position is invalid, i.e., not a\n   *   number or is less than 0 or greater than Ucum.dimLen_\n   **/\n\n\n  setElementAt(indexPos, value) {\n    if (!Number.isInteger(indexPos) || indexPos < 0 || indexPos >= UC.Ucum.dimLen_) {\n      throw new Error(`Dimension.setElementAt called with an invalid index ` + `position (${indexPos})`);\n    }\n\n    if (!this.dimVec_) {\n      this.assignZero();\n    }\n\n    if (value === undefined || value === null) value = 1;\n    this.dimVec_[indexPos] = value;\n  }\n  /**\n   * Gets the value of the element at the specified position\n   *\n   * @param indexPos the index of the element whose value is to be returned\n   * @return the value of the element at indexPos, or null if the dimension\n   *  vector is null\n   * @throws an exception if the specified position is invalid, i.e., not a\n   *   number or is less than 0 or greater than Ucum.dimLen_\n   **/\n\n\n  getElementAt(indexPos) {\n    if (!Number.isInteger(indexPos) || indexPos < 0 || indexPos >= UC.Ucum.dimLen_) {\n      throw new Error(`Dimension.getElementAt called with an invalid index ` + `position (${indexPos})`);\n    }\n\n    let ret = null;\n    if (this.dimVec_) ret = this.dimVec_[indexPos];\n    return ret;\n  }\n  /**\n   * This returns the value of the property named by the parameter\n   * passed in.  Although we currently only have one property, dimVec_,\n   * that this will get, it's possible that we'll have additional\n   * properties.   If we don't this could just be replaced by a\n   * getVector function.\n   *\n   * @param propertyName name of the property to be returned, with\n   *        or without the trailing underscore.\n   * @return the requested property, if found for this Dimension\n   * @throws an error if the property is not found for this Dimension\n   */\n\n\n  getProperty(propertyName) {\n    let uProp = !propertyName.endsWith('_') ? propertyName + '_' : propertyName;\n    return this[uProp];\n  } // end getProperty\n\n  /**\n   * Return a string that represents the dimension vector.  Returns null if\n   * the dimension vector is null.\n   *\n   * @return the string that represents the dimension vector.  The\n   *         values are enclosed in square brackets, each separated\n   *         by a comma and a space\n   **/\n\n\n  toString() {\n    let ret = null;\n    if (this.dimVec_) ret = '[' + this.dimVec_.join(', ') + ']';\n    return ret;\n  }\n  /**\n   * Adds the vector of the dimension object passed in to this\n   * dimension object's vector.  This object's vector is changed.\n   * If either dimension vector is null, no changes are made to this object.\n   *\n   *\n   * @param dim2 the dimension whose vector is to be added to this one\n   * @return this object\n   * @throws an exception if dim2 is not a Dimension object\n   **/\n\n\n  add(dim2) {\n    if (!dim2 instanceof Dimension) {\n      throw new Error(`Dimension.add called with an invalid parameter - ` + `${typeof dim2} instead of a Dimension object`);\n    }\n\n    if (this.dimVec_ && dim2.dimVec_) {\n      for (let i = 0; i < UC.Ucum.dimLen_; i++) this.dimVec_[i] += dim2.dimVec_[i];\n    }\n\n    return this;\n  }\n  /**\n   * Subtracts the vector of the dimension object passed in from this\n   * dimension object's vector.  This object's vector is changed.\n   * If either dimension vector is null, no changes are made to this object.\n   *\n   * @param dim2 the dimension whose vector is to be subtracted from this one\n   * @return this object\n   * @throws an exception if dim2 is not a Dimension object\n   **/\n\n\n  sub(dim2) {\n    if (!dim2 instanceof Dimension) {\n      throw new Error(`Dimension.sub called with an invalid parameter - ` + `${typeof dim2} instead of a Dimension object`);\n    }\n\n    if (this.dimVec_ && dim2.dimVec_) {\n      for (let i = 0; i < UC.Ucum.dimLen_; i++) this.dimVec_[i] -= dim2.dimVec_[i];\n    }\n\n    return this;\n  }\n  /**\n   * Inverts this dimension object's vector (by multiplying each element\n   * by negative 1).  This object's vector is changed - unless it is null,\n   * in which case it stays that way.\n   *\n   * @return this object\n   **/\n\n\n  minus() {\n    if (this.dimVec_) {\n      for (let i = 0; i < UC.Ucum.dimLen_; i++) this.dimVec_[i] = -this.dimVec_[i];\n    }\n\n    return this;\n  }\n  /**\n   * Multiplies this dimension object's vector with a scalar.  This is used\n   * when a unit is raised to a power.  This object's vector is changed unless\n   * the vector is null, in which case it stays that way.\n   *\n   * @param s the scalar to use\n   * @return this object\n   * @throws an exception if s is not a number\n   */\n\n\n  mul(s) {\n    if (!isInteger(s)) {\n      throw new Error(`Dimension.sub called with an invalid parameter - ` + `${typeof dim2} instead of a number`);\n    }\n\n    if (this.dimVec_) {\n      for (let i = 0; i < UC.Ucum.dimLen_; i++) this.dimVec_[i] *= s;\n    }\n\n    return this;\n  }\n  /**\n   * Tests for equality of this dimension object's vector and that of\n   * the dimension object passed in.  If the dimension vector for one of\n   * the objects is null, the dimension vector for the other object must\n   * also be null for the two to be equal.  (I know - duh.  still)\n   *\n   * @param dim2 the dimension object whose vector is to be compared to this one\n   * @return true if the two vectors are equal; false otherwise.\n   * @throws an exception if dim2 is not a Dimension object\n   */\n\n\n  equals(dim2) {\n    if (!dim2 instanceof Dimension) {\n      throw new Error(`Dimension.equals called with an invalid parameter - ` + `${typeof dim2} instead of a Dimension object`);\n    }\n\n    let isEqual = true;\n    let dimVec2 = dim2.dimVec_;\n\n    if (this.dimVec_ && dimVec2) {\n      for (let i = 0; isEqual && i < UC.Ucum.dimLen_; i++) isEqual = this.dimVec_[i] === dimVec2[i];\n    } else {\n      isEqual = this.dimVec_ === null && dimVec2 === null;\n    }\n\n    return isEqual;\n  }\n  /**\n   * Assigns the contents of the vector belonging to the dimension object\n   * passed in to this dimension's vector.  If this dimension vector is null\n   * and the other is not, this one will get the contents of the other.  If\n   * this dimension vector is not null but the one passed in is null, this\n   * one will be set to null.\n   *\n   * @param dim2 the dimension object with the vector whose contents are\n   *  to be assigned to this dimension's vector\n   * @return this object (not sure why)\n   * @throws an exception if dim2 is not a Dimension object\n   */\n\n\n  assignDim(dim2) {\n    if (!dim2 instanceof Dimension) {\n      throw new Error(`Dimension.assignDim called with an invalid parameter - ` + `${typeof dim2} instead of a Dimension object`);\n    }\n\n    if (dim2.dimVec_ === null) this.dimVec_ = null;else {\n      if (this.dimVec_ === null) {\n        this.dimVec_ = [];\n      }\n\n      for (let i = 0; i < UC.Ucum.dimLen_; i++) this.dimVec_[i] = dim2.dimVec_[i];\n    }\n    return this;\n  }\n  /**\n   * Sets all elements of this dimension object's vector to zero.\n   * If this object's vector is null, it is created as a zero-filled vector.\n   *\n   * @return this object (not sure why)\n   */\n\n\n  assignZero() {\n    if (this.dimVec_ === null || this.dimVec_ === undefined) this.dimVec_ = [];\n\n    for (let i = 0; i < UC.Ucum.dimLen_; i++) {\n      this.dimVec_.push(0);\n    }\n\n    return this;\n  }\n  /**\n   * Tests for a dimension vector set to all zeroes.\n   *\n   * @return true if exponents (elements) of this dimension's vector are all\n   * zero; false otherwise (including if the current vector is null).\n   *\n   */\n\n\n  isZero() {\n    let allZero = this.dimVec_ !== null;\n\n    if (this.dimVec_) {\n      for (let i = 0; allZero && i < UC.Ucum.dimLen_; i++) allZero = this.dimVec_[i] === 0;\n    }\n\n    return allZero;\n  }\n  /**\n   * Tests for a Dimension object with no dimension vector (dimVec_ is null).\n   *\n   * @return true the dimension vector is null; false if it is not\n   *\n   */\n\n\n  isNull() {\n    return this.dimVec_ === null;\n  }\n  /**\n   * Creates and returns a clone of this Dimension object\n   *\n   * @return the clone\n   */\n\n\n  clone() {\n    let that = new Dimension();\n    that.assignDim(this);\n    return that;\n  }\n\n} // end Dimension class\n\n\nexports.Dimension = Dimension;\n//# sourceMappingURL=dimension.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.packArray = packArray;\nexports.unpackArray = unpackArray;\n\n/**\n * This file provides functions to reduce the size of an array of objects of the same structure in JSON.\n */\nconst pushFn = Array.prototype.push;\n\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Makes human readable config used to pack/unpack array of objects of the same structure to store with packed data.\n * @param {Object} refObj - reference item of array of objects of the same structure\n * @returns {Array}\n */\n\n\nfunction createConfig(refObj) {\n  return Object.keys(refObj).reduce((config, key) => {\n    if (isObject(refObj[key])) {\n      pushFn.apply(config, createConfig(refObj[key]).map(keyTail => [key, ...[].concat(keyTail)]));\n    } else {\n      config.push(key);\n    }\n\n    return config;\n  }, []);\n}\n/**\n * Prepares config created with createConfig function to use in packItem/unpackItem functions.\n * @param {Array} config\n * @returns {Array}\n */\n\n\nfunction prepareConfig(config) {\n  return config.map(key => Array.isArray(key) ? key : [key]);\n}\n/**\n * Converts an object to an array of values in the order of keys from configuration array.\n * @param {Array} config - configuration array\n * @param {Object} item - input object\n * @returns {Array}\n */\n\n\nfunction packItem(config, item) {\n  if (config.join() !== prepareConfig(createConfig(item)).join()) {\n    throw new Error('Object of unusual structure');\n  }\n\n  return config.map(keyArr => {\n    let place = item;\n    keyArr.forEach(key => {\n      place = place[key];\n\n      if (place === undefined) {\n        throw new Error('Object of unusual structure');\n      }\n    });\n    return place;\n  });\n}\n/**\n * Performs the reverse of packItem function.\n * @param {Array} config - configuration array\n * @param {Array} item - input object\n * @returns {Object}\n */\n\n\nfunction unpackItem(config, item) {\n  let result = {};\n  config.forEach((keyArr, i) => {\n    let place = result;\n\n    for (let i = 0; i < keyArr.length - 1; i++) {\n      place = place[keyArr[i]] = place[keyArr[i]] || {};\n    }\n\n    place[keyArr[keyArr.length - 1]] = item[i];\n  });\n  return result;\n}\n/**\n * Reduces size of an array of objects of the same structure before serialize it to JSON\n * @param {Array} arr\n * @returns {Object}\n */\n\n\nfunction packArray(arr) {\n  if (arr && arr.length) {\n    const config = createConfig(arr[0]),\n          _config = prepareConfig(config);\n\n    if (config.length) {\n      return {\n        config: config,\n        data: arr.map(packItem.bind(null, _config))\n      };\n    }\n  }\n\n  return {\n    config: [],\n    data: arr\n  };\n}\n/**\n * Restores an array of objects of the same structure after deserializing this object from JSON\n * @param {Object} obj\n * @returns {Array}\n */\n\n\nfunction unpackArray(obj) {\n  const config = obj && obj.config;\n\n  if (config) {\n    if (config.length && obj.data) {\n      const _config = prepareConfig(config);\n\n      return obj.data.map(unpackItem.bind(null, _config));\n    } else {\n      return obj.data;\n    }\n  }\n\n  return obj;\n}\n//# sourceMappingURL=jsonArrayPack.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Prefix = void 0;\n\n/**\n * Prefix objects are defined in this file.\n */\n\n/**\n * This class implements the prefix object.  Prefixes are used as multipliers\n * for units, e.g., km for kilometers\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nvar Ucum = require('./config.js');\n\nclass Prefix {\n  /**\n   * Creates a single prefix object.\n   *\n   * @param attrs a hash of the values to use in creating the prefix object.\n   *  They should be:\n   *   code_ - which is the case-sensitive code used for the prefix,\n   *    e.g., k for kilo\n   *   ciCode_ - which is the case-insensitive code used for the prefix,\n   *    e.g., K for kilo\n   *   name_ - which is the name of the prefix, e.g., kilo\n   *   printSymbol_ - which is the print symbol for the prefix, e.g., k for kilo\n   *   value_ - which is teh value to use in multiplying the magnitude of\n   *    a unit, e.g., for a prefix of c the value will be .01.\n   *   exp_ - which is the exponent used to get the value. For decimal based\n   *    prefixes the base is 10 and the exp_ is applied to 10, e.g., for a\n   *    prefix of c, the exponent will be -2.  For prefixes that are not\n   *    decimal based, this will be null (but must not be undefined).\n   *\n   * @throws an error if the not all required parameters are provided\n   */\n  constructor(attrs) {\n    if (attrs['code_'] === undefined || attrs['code_'] === null || attrs['name_'] === undefined || attrs['name_'] === null || attrs['value_'] === undefined || attrs['value_'] === null || attrs['exp_'] === undefined) {\n      throw new Error('Prefix constructor called missing one or more parameters.  ' + 'Prefix codes (cs or ci), name, value and exponent must all be specified ' + 'and all but the exponent must not be null.');\n    }\n    /**\n     * The prefix code, e.g., k for kilo.  This should be the case-sensitive\n     * code.  Since there's no way to check to see if it's the case-sensitive\n     * one as opposed to the case-insensitive one (because although\n     * case-insensitive codes all seem to be uppercase, some case-sensitive\n     * codes are also all uppercase), we'll just have to believe that the\n     * right one was passed in.\n     */\n\n\n    this.code_ = attrs['code_'];\n    /**\n     * The case-insensitive code, e.g., K for kilo\n     */\n\n    this.ciCode_ = attrs['ciCode_'];\n    /**\n     * The prefix name, e.g., kilo\n     */\n\n    this.name_ = attrs['name_'];\n    /**\n     * The printSymbol for the prefix, e.g., k for kilo\n     */\n\n    this.printSymbol_ = attrs['printSymbol_'];\n    /**\n     * The value to use in multiplying the magnitude of a unit\n     */\n\n    if (typeof attrs['value_'] === 'string') this.value_ = parseFloat(attrs['value_']);else this.value_ = attrs['value_'];\n    /**\n     * The exponent used to create the value from 10.  For prefixes that are\n     * not based on 10, this will be null.\n     */\n\n    this.exp_ = attrs['exp_'];\n  } // end constructor\n\n  /**\n   * Returns the value for the current prefix object\n   * @return the value for the prefix object with the specified code\n   * */\n\n\n  getValue() {\n    return this.value_;\n  }\n  /**\n   * Returns the prefix code for the current prefix object\n   * @return the code for the current prefix object\n   */\n\n\n  getCode() {\n    return this.code_;\n  }\n  /**\n   * Returns the case-insensitive code for the current prefix object\n   * @return the case_insensitive code for the current prefix object\n   */\n\n\n  getCiCode() {\n    return this.ciCode_;\n  }\n  /**\n   * Returns the prefix name for the current prefix object\n   * @return the name for the current prefix object\n   */\n\n\n  getName() {\n    return this.name_;\n  }\n  /**\n   * Returns the print symbol for the current prefix object\n   * @return the print symbol for the current prefix object\n   */\n\n\n  getPrintSymbol() {\n    return this.printSymbol_;\n  }\n  /**\n   * Returns the exponent for the current prefix object\n   * @return the exponent for the current prefix object\n   */\n\n\n  getExp() {\n    return this.exp_;\n  }\n  /**\n   * Provides way to tell if one prefix equals another.  The second prefix\n   * must match all attribute values.\n   *\n   * @param prefix2 prefix object to check for a match\n   * @return true for a match; false if one or more attributes don't match\n   */\n\n\n  equals(prefix2) {\n    return this.code_ === prefix2.code_ && this.ciCode_ === prefix2.ciCode_ && this.name_ === prefix2.name_ && this.printSymbol_ === prefix2.printSymbol_ && this.value_ === prefix2.value_ && this.exp_ === prefix2.exp_;\n  }\n\n} // end Prefix class\n\n\nexports.Prefix = Prefix;\n//# sourceMappingURL=prefix.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrefixTables = exports.PrefixTablesFactory = void 0;\n\n/**\n * The tables of defined prefixes is defined in this file.\n */\n\n/**\n * This class implements the table of multiplier prefixes.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nclass PrefixTablesFactory {\n  /**\n   * Constructor.  This creates the empty PrefixTable hashes once.\n   * There is one hash whose key is the prefix code and one whose\n   * key is the prefix value.\n   *\n   * Implementation of this as a singleton is based on the UnitTables\n   * implementation.  See that class for details.\n   */\n  constructor() {\n    this.byCode_ = {};\n    this.byValue_ = {};\n  }\n  /**\n   * Provides the number of prefix objects in each table\n   * @returns count of the number of prefix objects in each table\n   */\n\n\n  prefixCount() {\n    return Object.keys(this.byCode_).length;\n  }\n  /**\n   * This is used to get all prefix objects by value.  Currently it is used\n   * to create a csv file with all prefixes and units.\n   * @returns csv string containing all prefix objects, ordered by value.\n   */\n\n\n  allPrefixesByValue() {\n    let prefixBuff = '';\n    let pList = Object.keys(this.byValue_); //pList.sort() ;\n\n    let pLen = pList.length;\n\n    for (let p = 0; p < pLen; p++) {\n      let pfx = this.getPrefixByValue(pList[p]);\n      prefixBuff += pfx.code_ + ',' + pfx.name_ + ',,' + pfx.value_ + '\\r\\n';\n    }\n\n    return prefixBuff;\n  }\n  /**\n   * This is used to get all prefix objects.  Currently it is used\n   * to get the objects to write to the json ucum definitions file\n   * that is used to provide prefix and unit definition objects for\n   * conversions and validations.\n   *\n   * @returns an array containing all prefix objects, ordered by code.\n   */\n\n\n  allPrefixesByCode() {\n    let prefixList = [];\n    let pList = Object.keys(this.byCode_);\n    pList.sort();\n    let pLen = pList.length;\n\n    for (let p = 0; p < pLen; p++) {\n      prefixList.push(this.getPrefixByCode(pList[p]));\n    }\n\n    return prefixList;\n  }\n  /**\n   * Adds a prefix object to the tables\n   *\n   * @param prefixObj the object to be added to the tables\n   */\n\n\n  add(prefixObj) {\n    this.byCode_[prefixObj.getCode()] = prefixObj;\n    this.byValue_[prefixObj.getValue()] = prefixObj;\n  }\n  /**\n   * Tests whether a prefix object is found for a specified code.  This\n   * is used to determine whether or not a prefix object has been created\n   * for the code.\n   *\n   * @param code the code to be used to find the prefix object\n   * @return boolean indicating whether or not a prefix object was found\n   *  for the specified code\n   */\n\n\n  isDefined(code) {\n    return this.byCode_[code] !== null && this.byCode_[code] !== undefined;\n  }\n  /**\n   * Obtains a prefix object for a specified code.\n   *\n   * @param code the code to be used to find the prefix object\n   * @return the prefix object found, or null if nothing was found\n   */\n\n\n  getPrefixByCode(code) {\n    return this.byCode_[code];\n  }\n  /**\n   * Obtains a prefix object for a specified value.\n   *\n   * @param value the value to be used to find the prefix object\n   * @return the prefix object found, or null if nothing was found\n   */\n\n\n  getPrefixByValue(value) {\n    return this.byValue_[value];\n  }\n\n} // end PrefixTablesFactory class\n// Create a singleton instance and (to preserve the existing API) an object that\n// provides that instance via getInstance().\n\n\nexports.PrefixTablesFactory = PrefixTablesFactory;\nvar prefixTablesInstance = new PrefixTablesFactory();\nconst PrefixTables = {\n  getInstance: function () {\n    return prefixTablesInstance;\n  }\n};\nexports.PrefixTables = PrefixTables;\n//# sourceMappingURL=prefixTables.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * This class manages the special functions used by some units.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nclass UcumFunctions {\n  /**\n   * Constructor\n   *\n   * Creates the singleton object that contains the list of functions used\n   * to convert special units.\n   */\n  constructor() {\n    // Create the hash containing the function pairs\n    this.funcs = {}; // Celsius - convert to Celsius from kelvin and from Celsius to kelvin\n    // where kelvin is the base unit for temperature\n\n    this.funcs['cel'] = {\n      cnvTo: function (x) {\n        return x - 273.15;\n      },\n      cnvFrom: function (x) {\n        return x + 273.15;\n      }\n    }; // Fahrenheit - convert to Fahrenheit from kelvin and from Fahrenheit to\n    // kelvin - which is the base unit for temperature\n\n    this.funcs['degf'] = {\n      cnvTo: function (x) {\n        return x - 459.67;\n      },\n      cnvFrom: function (x) {\n        return x + 459.67;\n      }\n    }; // Reaumur - convert between Reaumur and Kelvin.   Because of the way the\n    // calling code in the Units class is set up (in the convertFrom method),\n    // what is given here as the convertTo function is actually the convert\n    // from method and vice versa.\n    //this.funcs['degre'] = {cnvTo   : function(x){return x + 273.15;},\n    //                    cnvFrom : function(x){return x - 273.15;}};\n\n    this.funcs['degre'] = {\n      cnvTo: function (x) {\n        return x - 273.15;\n      },\n      cnvFrom: function (x) {\n        return x + 273.15;\n      }\n    }; // pH - convert to pH from moles per liter and from moles per liter to pH\n    // where a mole is an amount of a substance (a count of particles)\n\n    this.funcs['ph'] = {\n      cnvTo: function (x) {\n        return -Math.log(x) / Math.LN10;\n      },\n      cnvFrom: function (x) {\n        return Math.pow(10, -x);\n      }\n    }; // ln - natural logarithm (base e 2.71828) - apply (cnvTo) and invert (cnvFrom)\n    // and 2ln - two times the natural logarithm\n\n    this.funcs['ln'] = {\n      cnvTo: function (x) {\n        return Math.log(x);\n      },\n      cnvFrom: function (x) {\n        return Math.exp(x);\n      }\n    };\n    this.funcs['2ln'] = {\n      cnvTo: function (x) {\n        return 2 * Math.log(x);\n      },\n      cnvFrom: function (x) {\n        return Math.exp(x / 2);\n      }\n    }; // lg - the decadic logarithm (base 10)\n\n    this.funcs['lg'] = {\n      cnvTo: function (x) {\n        return Math.log(x) / Math.LN10;\n      },\n      cnvFrom: function (x) {\n        return Math.pow(10, x);\n      }\n    };\n    this.funcs['10lg'] = {\n      cnvTo: function (x) {\n        return 10 * Math.log(x) / Math.LN10;\n      },\n      cnvFrom: function (x) {\n        return Math.pow(10, x / 10);\n      }\n    };\n    this.funcs['20lg'] = {\n      cnvTo: function (x) {\n        return 20 * Math.log(x) / Math.LN10;\n      },\n      cnvFrom: function (x) {\n        return Math.pow(10, x / 20);\n      }\n    }; // The plain text ucum units file uses '2lg'\n\n    this.funcs['2lg'] = {\n      cnvTo: function (x) {\n        return 2 * Math.log(x) / Math.LN10;\n      },\n      cnvFrom: function (x) {\n        return Math.pow(10, x / 2);\n      }\n    }; // The xml essence ucum file uses lgTimes2\n\n    this.funcs['lgtimes2'] = this.funcs['2lg']; // ld - dual logarithm (base 2)\n\n    this.funcs['ld'] = {\n      cnvTo: function (x) {\n        return Math.log(x) / Math.LN2;\n      },\n      cnvFrom: function (x) {\n        return Math.pow(2, x);\n      }\n    }; // tan - tangent\n\n    this.funcs['100tan'] = {\n      cnvTo: function (x) {\n        return Math.tan(x) * 100;\n      },\n      cnvFrom: function (x) {\n        return Math.atan(x / 100);\n      }\n    }; // the xml essence ucum file uses both 100tan and tanTimes100\n\n    this.funcs['tanTimes100'] = this.funcs['100tan']; // sqrt - square root\n\n    this.funcs['sqrt'] = {\n      cnvTo: function (x) {\n        return Math.sqrt(x);\n      },\n      cnvFrom: function (x) {\n        return x * x;\n      }\n    }; // inv - inverse\n\n    this.funcs['inv'] = {\n      cnvTo: function (x) {\n        return 1.0 / x;\n      },\n      cnvFrom: function (x) {\n        return 1.0 / x;\n      }\n    }; // homeopathic potency functions\n\n    this.funcs['hpX'] = {\n      cnvTo: function (x) {\n        return -this.funcs['lg'](x);\n      },\n      cnvFrom: function (x) {\n        return Math.pow(10, -x);\n      }\n    };\n    this.funcs['hpC'] = {\n      cnvTo: function (x) {\n        return -this.func['ln'](x) / this.funcs['ln'](100);\n      },\n      cnvFrom: function (x) {\n        return Math.pow(100, -x);\n      }\n    };\n    this.funcs['hpM'] = {\n      cnvTo: function (x) {\n        return -this.funcs['ln'](x) / this.funcs['ln'](1000);\n      },\n      cnvFrom: function (x) {\n        return Math.pow(1000, -x);\n      }\n    };\n    this.funcs['hpQ'] = {\n      cnvTo: function (x) {\n        return -this.funcs['ln'](x) / this.funcs['ln'](50000);\n      },\n      cnvFrom: function (x) {\n        return Math.pow(50000, -x);\n      }\n    };\n  } // end of constructor\n\n  /**\n   * Returns the function with the name specified\n   *\n   * @param fname name of the function to be returned\n   * @return the function with the specified name\n   * @throws an error message if the function is not found\n   */\n\n\n  forName(fname) {\n    fname = fname.toLowerCase();\n    let f = this.funcs[fname];\n    if (f === null) throw new Error(`Requested function ${fname} is not defined`);\n    return f;\n  }\n  /**\n   * Returns a flag indicating whether or not the function has been\n   * defined.\n   *\n   * @param fname name of the function in question\n   * @return true if it has been defined; false if not\n   */\n\n\n  isDefined(fname) {\n    fname = fname.toLowerCase();\n    return this.funcs[fname] !== null;\n  }\n\n} // end of UcumFunctions class\n\n\nvar _default = new UcumFunctions(); // one singleton instance\n\n\nexports.default = _default;\n//# sourceMappingURL=ucumFunctions.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNumericString = isNumericString;\nexports.isIntegerUnit = isIntegerUnit;\nexports.getSynonyms = getSynonyms;\n\n/**\n * Internal utilities used by multiple UCUM classes.  For example,\n * isNumericString is used by both the UnitString and UcumLhcUtils\n * classes.  If it's in the UnitString class the UcumLhcUtils class\n * needs to require the UnitString class.  But the checkSynonyms\n * class is used by the UnitString class - but was in the UcumLhcUtils\n * class.  Requiring the UcumLhcUtils class from the UnitString class\n * made everything break (cyclical requires).\n *\n * So now they're here.\n */\n\n/**\n * This module implements internal ucum utilities.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nvar UnitTables = require('./unitTables.js').UnitTables;\n/**\n * This function tests a string to see if it contains only numbers (digits,\n * a period, leading - or +).  This code was taken from a stackoverflow\n * solution:\n * https://stackoverflow.com/questions/175739/is-there-a-built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number/42356340#42356340\n *\n * @params theString\n * @returns true if the string contains only numbers; false otherwise\n */\n\n\nfunction isNumericString(theString) {\n  let num = \"\" + theString; //coerce num to be a string\n\n  return !isNaN(num) && !isNaN(parseFloat(num));\n} // end isNumericString\n\n/**\n *  Checks whether a string qualifies as an integer unit.  Section 2.2.8 (\"integer\n *  numbers\", says, \"A positive integer number may appear in place of a simple\n *  unit symbol.  Only a pure string of decimal digits (‘0’–‘9’) is\n *  interpreted as a number.\"\n *  Note:  This leaves open the question of whether \"0\" is a valid unit, since\n *  it is positive, but you can't measure anything in units of zero.\n * @param str the string to check\n */\n\n\nfunction isIntegerUnit(str) {\n  return /^\\d+$/.test(str);\n}\n/**\n * This method accepts a term and looks for units that include it as\n * a synonym - or that include the term in its name.\n *\n * @param theSyn the term to search for.  This is assumed to be\n *  a string and not undefined.  The calling method should do any\n *  necessary checking before calling this.\n * @returns a hash with up to three elements:\n *  'status' contains the status of the request, which can be 'error',\n *    'failed' or succeeded';\n *  'msg' which contains a message for an error or if no units were found; and\n *  'units' which is an array that contains one array for each unit found:\n *    the unit's csCode_, the unit's name_, and the unit's guidance_\n *\n */\n\n\nfunction getSynonyms(theSyn) {\n  let retObj = {};\n  let utab = UnitTables.getInstance();\n  let resp = {};\n  resp = utab.getUnitBySynonym(theSyn); // If we didn't get any units, transfer the status and message\n\n  if (!resp['units']) {\n    retObj['status'] = resp['status'];\n    retObj['msg'] = resp['msg'];\n  } else {\n    retObj['status'] = 'succeeded';\n    let aLen = resp['units'].length;\n    retObj['units'] = [];\n\n    for (let a = 0; a < aLen; a++) {\n      let theUnit = resp['units'][a];\n      retObj['units'][a] = {\n        'code': theUnit.csCode_,\n        'name': theUnit.name_,\n        'guidance': theUnit.guidance_\n      };\n    } // end do for all units returned\n\n  } // end if we got a units list\n\n\n  return retObj;\n} // end getSynonyms\n//# sourceMappingURL=ucumInternalUtils.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ucumJsonDefs = exports.UcumJsonDefs = void 0;\n\n/**\n * This class handles opening, reading and loading the JSON file of ucum\n * definitions (prefixes, base units, and unit atoms).\n *\n * @author Lee Mericle\n *\n */\nvar Pfx = require(\"./prefix.js\");\n\nvar PfxT = require(\"./prefixTables.js\");\n\nvar Un = require(\"./unit.js\");\n\nvar Utab = require('./unitTables.js');\n\nvar unpackArray = require('./jsonArrayPack.js').unpackArray;\n\nclass UcumJsonDefs {\n  /**\n   * This method loads the JSON prefix and unit objects into the prefix and\n   * unit tables.\n   *\n   * @returns nothing\n   */\n  loadJsonDefs() {\n    // requiring the file will take care of opening it for use\n    const jsonDefs = require('../data/ucumDefs.min.json');\n\n    jsonDefs.prefixes = unpackArray(jsonDefs.prefixes);\n    jsonDefs.units = unpackArray(jsonDefs.units);\n\n    if (Utab.UnitTables.getInstance().unitsCount() === 0) {\n      let pTab = PfxT.PrefixTables.getInstance();\n      let prefixes = jsonDefs[\"prefixes\"];\n      let plen = prefixes.length;\n\n      for (let p = 0; p < plen; p++) {\n        let newPref = new Pfx.Prefix(prefixes[p]);\n        pTab.add(newPref);\n      }\n\n      let uTab = Utab.UnitTables.getInstance();\n      let units = jsonDefs[\"units\"];\n      let ulen = units.length;\n\n      for (let u = 0; u < ulen; u++) {\n        let newUnit = new Un.Unit(units[u]);\n        uTab.addUnit(newUnit);\n      }\n    } // end if the data has not already been loaded\n\n  } // end loadJsonDefs\n\n\n} // end UcumJsonDefs class\n\n\nexports.UcumJsonDefs = UcumJsonDefs;\nvar ucumJsonDefs = new UcumJsonDefs();\nexports.ucumJsonDefs = ucumJsonDefs;\n//# sourceMappingURL=ucumJsonDefs.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UcumLhcUtils = void 0;\n\nvar _ucumJsonDefs = require(\"./ucumJsonDefs.js\");\n\nvar intUtils_ = _interopRequireWildcard(require(\"./ucumInternalUtils.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * This class provides a single point of access to the LHC UCUM utilities\n *\n * @author Lee Mericle\n *\n */\nvar Ucum = require('./config.js').Ucum;\n\nvar UnitTables = require('./unitTables.js').UnitTables;\n\nvar UnitString = require('./unitString.js').UnitString;\n\nvar Unit = require('./unit.js').Unit;\n\nvar Prefix = require('./prefix.js').Prefix;\n\nvar fs = require('fs');\n\n/**\n * UCUM external utilities class\n */\nclass UcumLhcUtils {\n  /**\n   * Constructor.  This loads the json prefix and unit definitions if\n   * they haven't been loaded already and creates itself as a singleton object.\n   *\n   */\n  constructor() {\n    if (UnitTables.getInstance().unitsCount() === 0) {\n      // Load the prefix and unit objects\n      _ucumJsonDefs.ucumJsonDefs.loadJsonDefs();\n    } // Get the UnitString parser that will be used with this instance\n    // of the LHC Utilities\n\n\n    this.uStrParser_ = UnitString.getInstance();\n  } // end constructor\n\n  /**\n   * This method calls the useHTMLInMessages method on the UnitString\n   * object.  It should be called by web applications that use\n   * these utilities.\n   *\n   * @param use flag indicating whether or not to use the braces message;\n   *  defaults to true\n   */\n\n\n  useHTMLInMessages(use) {\n    if (use === undefined) use = true;\n    this.uStrParser_.useHTMLInMessages(use);\n  }\n  /**\n   * This method calls the useBraceMsgForEachString method on the UnitString\n   * object.  It should be called by web applications where unit\n   * strings are validated individually (as opposed to validating a whole\n   * file of unit strings).\n   *\n   * @param use flag indicating whether or not to use the braces message;\n   *  defaults to true\n   */\n\n\n  useBraceMsgForEachString(use) {\n    if (use === undefined) use = true;\n    this.uStrParser_.useBraceMsgForEachString(use);\n  }\n  /**\n   * This method validates a unit string.  It first checks to see if the\n   * string passed in is a unit code that is found in the unit codes table.\n   * If it is not found it parses the string to see if it resolves to a\n   * valid unit string.\n   *\n   * If a valid unit cannot be found, the string is tested for some common\n   * errors, such as missing brackets or a missing multiplication operator.\n   * If found, the error is reported in the messages array that is returned.\n   *\n   * If a valid unit cannot be found and an error cannot be discerned, this\n   * may return, if requested, a list of suggested units in the messages\n   * array that is returned.  Suggestions are based on matching the expression\n   * with unit names and synonyms.\n   *\n   * @param uStr the string to be validated\n   * @param suggest a boolean to indicate whether or not suggestions are\n   *  requested for a string that cannot be resolved to a valid unit;\n   *  true indicates suggestions are wanted; false indicates they are not,\n   *  and is the default if the parameter is not specified;\n   * @param valConv a string indicating if this validation request was initiated\n   *  by a validation task ('validate') or a conversion task ('convert'),\n   *  used only for the demo code, and the default is 'Validator' if the\n   *  parameter is not specified;\n   * @returns an object with five properties:\n   *  'status' will be 'valid' (the uStr is a valid UCUM code), 'invalid'\n   *     (the uStr is not a valid UCUM code, and substitutions or\n   *     suggestions may or may not be returned, depending on what was\n   *     requested and found); or 'error' (an input or programming error\n   *     occurred);\n   *  'ucumCode' the valid ucum code, which may differ from what was passed\n   *    in (e.g., if 'Gauss' is passed in, this will contain 'G') OR null if\n   *    the string was flagged as invalid or an error occurred;\n   *  'msg' is an array of one or more messages, if the string is invalid or\n   *        an error occurred, indicating the problem, or an explanation of a\n   *        substitution such as the substitution of 'G' for 'Gauss', or\n   *        an empty array if no messages were generated;\n   *  'unit' which is null if no unit is found, or a hash for a unit found:\n   *    'code' is the unit's ucum code (G in the above example;\n   *    'name' is the unit's name (Gauss in the above example); and\n   *    'guidance' is the unit's guidance/description data; and\n   *  'suggestions' if suggestions were requested and found, this is an array\n   *     of one or more hash objects.  Each hash contains three elements:\n   *     'msg' which is a message indicating what part of the uStr input\n   *        parameter the suggestions are for;\n   *     'invalidUnit' which is the unit expression the suggestions are\n   *        for; and\n   *     'units' which is an array of data for each suggested unit found.\n   *        Each array will contain the unit code, the unit name and the\n   *        unit guidance (if any).\n   *     If no suggestions were requested and found, this property is not\n   *     returned.\n   */\n\n\n  validateUnitString(uStr, suggest, valConv) {\n    if (suggest === undefined) suggest = false;\n    if (valConv === undefined) valConv = 'validate';\n    let resp = this.getSpecifiedUnit(uStr, valConv, suggest);\n    let theUnit = resp['unit'];\n    let retObj = {};\n\n    if (!theUnit) {\n      retObj = {\n        'status': !resp['origString'] || resp['origString'] === null ? 'error' : 'invalid',\n        'ucumCode': null\n      };\n    } else {\n      retObj = {\n        'status': resp['origString'] === uStr ? 'valid' : 'invalid',\n        'ucumCode': resp['origString'],\n        'unit': {\n          'code': theUnit.csCode_,\n          'name': theUnit.name_,\n          'guidance': theUnit.guidance_\n        }\n      };\n    }\n\n    if (resp['suggestions']) {\n      retObj['suggestions'] = resp['suggestions'];\n    }\n\n    retObj['msg'] = resp['retMsg'];\n    return retObj;\n  } // end validateUnitString\n\n  /**\n   * This method converts one unit to another\n   *\n   * @param fromUnitCode the unit code/expression/string of the unit to be converted\n   * @param fromVal the number of \"from\" units to be converted to \"to\" units\n   * @param toUnitCode the unit code/expression/string of the unit that the from\n   *  field is to be converted to\n   * @param suggest a boolean to indicate whether or not suggestions are\n   *  requested for a string that cannot be resolved to a valid unit;\n   *  true indicates suggestions are wanted; false indicates they are not,\n   *  and is the default if the parameter is not specified;\n   * @param molecularWeight the molecular weight of the substance in question\n   *  when a conversion is being requested from mass to moles and vice versa.\n   *  This is required when one of the units represents a value in moles.  It is\n   *  ignored if neither unit includes a measurement in moles.\n   * @returns a hash with six elements:\n   *  'status' that will be: 'succeeded' if the conversion was successfully\n   *     calculated; 'failed' if the conversion could not be made, e.g., if\n   *     the units are not commensurable; or 'error' if an error occurred;\n   *  'toVal' the numeric value indicating the conversion amount, or null\n   *     if the conversion failed (e.g., if the units are not commensurable);\n   *  'msg' is an array message, if the string is invalid or an error occurred,\n   *        indicating the problem, or an explanation of a substitution such as\n   *        the substitution of 'G' for 'Gauss', or an empty array if no\n   *        messages were generated;\n   *  'suggestions' if suggestions were requested and found, this is a hash\n   *     that contains at most two elements:\n   *     'from' which, if the fromUnitCode input parameter or one or more of\n   *       its components could not be found, is an array one or more hash\n   *       objects.  Each hash contains three elements:\n   *         'msg' which is a message indicating what unit expression the\n   *            suggestions are for;\n   *         'invalidUnit' which is the unit expression the suggestions\n   *            are for; and\n   *         'units' which is an array of data for each suggested unit found.\n   *            Each array will contain the unit code, the unit name and the\n   *            unit guidance (if any).\n   *       If no suggestions were found for the fromUnitCode this element\n   *       will not be included.\n   *     'to' which, if the \"to\" unit expression or one or more of its\n   *       components could not be found, is an array one or more hash objects.  Each hash\n   *       contains three elements:\n   *         'msg' which is a message indicating what toUnitCode input\n   *            parameter the suggestions are for;\n   *         'invalidUnit' which is the unit expression the suggestions\n   *            are for; and\n   *         'units' which is an array of data for each suggested unit found.\n   *            Each array will contain the unit code, the unit name and the\n   *            unit guidance (if any).\n   *       If no suggestions were found for the toUnitCode this element\n   *       will not be included.\n   *    No 'suggestions' element will be included in the returned hash\n   *    object if none were found, whether or not they were requested.\n   *  'fromUnit' the unit object for the fromUnitCode passed in; returned\n   *     in case it's needed for additional data from the object; and\n   *  'toUnit' the unit object for the toUnitCode passed in; returned\n   *     in case it's needed for additional data from the object.\n   */\n\n\n  convertUnitTo(fromUnitCode, fromVal, toUnitCode, suggest, molecularWeight) {\n    if (suggest === undefined) suggest = false;\n    if (molecularWeight === undefined) molecularWeight = null;\n    let returnObj = {\n      'status': 'failed',\n      'toVal': null,\n      'msg': []\n    };\n\n    if (fromUnitCode) {\n      fromUnitCode = fromUnitCode.trim();\n    }\n\n    if (!fromUnitCode || fromUnitCode == '') {\n      returnObj['status'] = 'error';\n      returnObj['msg'].push('No \"from\" unit expression specified.');\n    }\n\n    if (fromVal === null || isNaN(fromVal) || typeof fromVal !== 'number' && !intUtils_.isNumericString(fromVal)) {\n      returnObj['status'] = 'error';\n      returnObj['msg'].push('No \"from\" value, or an invalid \"from\" value, ' + 'was specified.');\n    }\n\n    if (toUnitCode) {\n      toUnitCode = toUnitCode.trim();\n    }\n\n    if (!toUnitCode || toUnitCode == '') {\n      returnObj['status'] = 'error';\n      returnObj['msg'].push('No \"to\" unit expression specified.');\n    }\n\n    if (returnObj['status'] !== 'error') {\n      try {\n        let fromUnit = null;\n        let parseResp = this.getSpecifiedUnit(fromUnitCode, 'convert', suggest);\n        fromUnit = parseResp['unit'];\n        if (parseResp['retMsg']) returnObj['msg'] = returnObj['msg'].concat(parseResp['retMsg']);\n\n        if (parseResp['suggestions']) {\n          returnObj['suggestions'] = {};\n          returnObj['suggestions']['from'] = parseResp['suggestions'];\n        }\n\n        if (!fromUnit) {\n          returnObj['msg'].push(`Unable to find a unit for ${fromUnitCode}, ` + `so no conversion could be performed.`);\n        }\n\n        let toUnit = null;\n        parseResp = this.getSpecifiedUnit(toUnitCode, 'convert', suggest);\n        toUnit = parseResp['unit'];\n        if (parseResp['retMsg']) returnObj['msg'] = returnObj['msg'].concat(parseResp['retMsg']);\n\n        if (parseResp['suggestions']) {\n          if (!returnObj['suggestions']) returnObj['suggestions'] = {};\n          returnObj['suggestions']['to'] = parseResp['suggestions'];\n        }\n\n        if (!toUnit) {\n          returnObj['msg'].push(`Unable to find a unit for ${toUnitCode}, ` + `so no conversion could be performed.`);\n        }\n\n        if (fromUnit && toUnit) {\n          try {\n            // if no molecular weight was specified perform a normal conversion\n            if (!molecularWeight) {\n              returnObj['toVal'] = toUnit.convertFrom(fromVal, fromUnit);\n            } else {\n              if (fromUnit.moleExp_ !== 0 && toUnit.moleExp_ !== 0) {\n                throw new Error('A molecular weight was specified ' + 'but a mass <-> mole conversion cannot be executed for two ' + 'mole-based units.  No conversion was attempted.');\n              }\n\n              if (fromUnit.moleExp_ === 0 && toUnit.moleExp_ === 0) {\n                throw new Error('A molecular weight was specified ' + 'but a mass <-> mole conversion cannot be executed when ' + 'neither unit is mole-based.  No conversion was attempted.');\n              }\n\n              if (!fromUnit.isMoleMassCommensurable(toUnit)) {\n                throw new Error(`Sorry.  ${fromUnitCode} cannot be ` + `converted to ${toUnitCode}.`);\n              } // if the \"from\" unit is a mole-based unit, assume a mole to mass\n              // request\n\n\n              if (fromUnit.moleExp_ !== 0) {\n                returnObj['toVal'] = fromUnit.convertMolToMass(fromVal, toUnit, molecularWeight);\n              } // else the \"to\" unit must be the mole-based unit, so assume a\n              // mass to mole request\n              else {\n                  returnObj['toVal'] = fromUnit.convertMassToMol(fromVal, toUnit, molecularWeight);\n                }\n            } // end if a molecular weight was specified\n            // if an error hasn't been thrown - either from convertFrom or here,\n            // set the return object to show success\n\n\n            returnObj['status'] = 'succeeded';\n            returnObj['fromUnit'] = fromUnit;\n            returnObj['toUnit'] = toUnit;\n          } catch (err) {\n            returnObj['status'] = 'failed';\n            returnObj['msg'].push(err.message);\n          }\n        } // end if we have the from and to units\n\n      } catch (err) {\n        if (err.message == Ucum.needMoleWeightMsg_) returnObj['status'] = 'failed';else returnObj['status'] = 'error';\n        returnObj['msg'].push(err.message);\n      }\n    }\n\n    return returnObj;\n  } // end convertUnitTo\n\n  /**\n   * This method accepts a term and looks for units that include it as\n   * a synonym - or that include the term in its name.\n   *\n   * @param theSyn the term to search for\n   * @returns a hash with up to three elements:\n   *  'status' contains the status of the request, which can be 'error',\n   *    'failed' or succeeded';\n   *  'msg' which contains a message for an error or if no units were found; and\n   *  'units' which is an array that contains one hash for each unit found:\n   *    'code' is the unit's csCode_\n   *    'name' is the unit's name_\n   *    'guidance' is the unit's guidance_\n   *\n   */\n\n\n  checkSynonyms(theSyn) {\n    let retObj = {};\n\n    if (theSyn === undefined || theSyn === null) {\n      retObj['status'] = 'error';\n      retObj['msg'] = 'No term specified for synonym search.';\n    } else {\n      retObj = intUtils_.getSynonyms(theSyn);\n    } // end if a search synonym was supplied\n\n\n    return retObj;\n  } // end checkSynonyms\n\n  /**\n   * This method parses a unit string to get (or try to get) the unit\n   * represented by the string.  It returns an error message if no string was specified\n   * or if any errors were encountered trying to get the unit.\n   *\n   * @param uName the expression/string representing the unit\n   * @param valConv indicates what type of request this is for - a request to\n   *  validate (pass in 'validate') or a request to convert (pass in 'convert')\n   * @param suggest a boolean to indicate whether or not suggestions are\n   *  requested for a string that cannot be resolved to a valid unit;\n   *  true indicates suggestions are wanted; false indicates they are not,\n   *  and is the default if the parameter is not specified;\n   * @returns a hash containing:\n   *   'unit' the unit object (or null if there were problems creating the\n   *     unit);\n   *   'origString' the possibly updated unit string passed in;\n   *   'retMsg' an array of user messages (informational, error or warning) if\n   *     any were generated (IF any were generated, otherwise will be an\n   *     empty array); and\n   *  'suggestions' is an array of 1 or more hash objects.  Each hash\n   *     contains three elements:\n   *       'msg' which is a message indicating what unit expression the\n   *          suggestions are for;\n   *       'invalidUnit' which is the unit expression the suggestions are\n   *          for; and\n   *       'units' which is an array of data for each suggested unit found.\n   *          Each array will contain the unit code, the unit name and the\n   *          unit guidance (if any).\n   *   The return hash will not contain a suggestions array if a valid unit\n   *   was found or if suggestions were not requested and found.\n   */\n\n\n  getSpecifiedUnit(uName, valConv, suggest) {\n    if (suggest === undefined) suggest = false;\n    let retObj = {};\n    retObj['retMsg'] = [];\n\n    if (!uName) {\n      retObj['retMsg'].push('No unit string specified.');\n    } else {\n      let utab = UnitTables.getInstance();\n      uName = uName.trim(); // go ahead and just try using the name as the code.  This may or may not\n      // work, but if it does, it cuts out a lot of parsing.\n\n      let theUnit = utab.getUnitByCode(uName); // If we found it, set the returned unit string to what was passed in;\n      // otherwise try parsing as a unit string\n\n      if (theUnit) {\n        retObj['unit'] = theUnit;\n        retObj['origString'] = uName;\n      } else {\n        try {\n          let resp = this.uStrParser_.parseString(uName, valConv, suggest);\n          retObj['unit'] = resp[0];\n          retObj['origString'] = resp[1];\n          if (resp[2]) retObj['retMsg'] = resp[2];\n          retObj['suggestions'] = resp[3];\n        } catch (err) {\n          console.log(`Unit requested for unit string ${uName}.` + 'request unsuccessful; error thrown = ' + err.message);\n          retObj['retMsg'].unshift(`${uName} is not a valid unit.  ` + `${err.message}`);\n        }\n      } // end if the unit was not found as a unit name\n\n    } // end if a unit expression was specified\n\n\n    return retObj;\n  } // end getSpecifiedUnit\n\n  /**\n   * This method retrieves a list of units commensurable, i.e., that can be\n   * converted from and to, a specified unit.  Returns an error if the \"from\"\n   * unit cannot be found.\n   *\n   * @param fromName the name/unit string of the \"from\" unit\n   * @returns an array containing two elements;\n   *   first element is the list of commensurable units if any were found\n   *   second element is an error message if the \"from\" unit is not found\n   */\n\n\n  commensurablesList(fromName) {\n    let retMsg = [];\n    let commUnits = null;\n    let parseResp = this.getSpecifiedUnit(fromName, 'validate', false);\n    let fromUnit = parseResp['unit'];\n    if (parseResp['retMsg'].length > 0) retMsg = parseResp['retMsg'];\n\n    if (!fromUnit) {\n      retMsg.push(`Could not find unit ${fromName}.`);\n    } else {\n      let dimVec = null;\n      let fromDim = fromUnit.getProperty('dim_');\n\n      if (!fromDim) {\n        retMsg.push('No commensurable units were found for ' + fromName);\n      } else {\n        try {\n          dimVec = fromDim.getProperty('dimVec_');\n        } catch (err) {\n          retMsg.push(err.message);\n          if (err.message === \"Dimension does not have requested property(dimVec_)\") dimVec = null;\n        }\n\n        if (dimVec) {\n          let utab = UnitTables.getInstance();\n          commUnits = utab.getUnitsByDimension(dimVec);\n        }\n      } // end if the from unit has a dimension vector\n\n    } // end if we found a \"from\" unit\n\n\n    return [commUnits, retMsg];\n  } // end commensurablesList\n\n  /**\n   * Creates a file containing a list of the units.  The file is created\n   * in the current directory.\n   */\n\n\n  printUnits() {\n    // for now, create a list of the units created and save it to a file\n    // for debugging.  This is a temporary file.\n    let utab = UnitTables.getInstance();\n    let uct = utab.unitsCount();\n    let uList = utab.printUnits(true);\n    fs.writeFileSync('JsonUnitsList.txt', uList, {\n      encoding: 'utf8',\n      mode: 0o666,\n      flag: 'w'\n    });\n  }\n\n} // end UcumLhcUtils class\n\n/**\n *  This function exists ONLY until the original UcumLhcUtils constructor\n *  is called for the first time.  It's defined here in case getInstance\n *  is called before the constructor.   This calls the constructor.\n *\n *  The constructor redefines the getInstance function to return the\n *  singleton UcumLhcUtils object.  This is based on the UnitTables singleton\n *  implementation; see more detail in the UnitTables constructor description.\n *\n *  NO LONGER TRUE - not implemented as a singleton.  This method retained to\n *  avoid problems with calls to it that exist throughout the code.\n *\n *  @return the (formerly singleton) UcumLhcUtils object.\n */\n\n\nexports.UcumLhcUtils = UcumLhcUtils;\n\nUcumLhcUtils.getInstance = function () {\n  return new UcumLhcUtils();\n};\n//# sourceMappingURL=ucumLhcUtils.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnitTables = exports.UcumLhcUtils = exports.Ucum = void 0;\n\n/**\n * This exports definitions for ucum classes that need references to them\n * available to the demo code.  The actual code will be in the ucumPkg\n * library found in the dist directory.  This file provides the hooks to\n * those classes within the library.\n */\nvar Ucum = require(\"./config.js\").Ucum;\n\nexports.Ucum = Ucum;\n\nvar UcumLhcUtils = require(\"./ucumLhcUtils.js\").UcumLhcUtils;\n\nexports.UcumLhcUtils = UcumLhcUtils;\n\nvar UnitTables = require(\"./unitTables.js\").UnitTables;\n\nexports.UnitTables = UnitTables;\n//# sourceMappingURL=ucumPkg.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Unit = void 0;\n\nvar _ucumFunctions = _interopRequireDefault(require(\"./ucumFunctions.js\"));\n\nvar intUtils_ = _interopRequireWildcard(require(\"./ucumInternalUtils.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This class represents one unit of measure.  It includes\n * functions to cover constructor, accessor, and assignment tasks as\n * well as operators to calculate multiplication, division and raising\n * to a power.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nvar Ucum = require('./config.js').Ucum;\n\nvar Dimension = require('./dimension.js').Dimension;\n\nvar UnitTables;\n\nvar isInteger = require(\"is-integer\");\n\nclass Unit {\n  /**\n   * Constructor.\n   *\n   * @param attrs an optional parameter that may be:\n   *  a string, which is parsed by the unit parser, which creates\n   *  the unit from the parsed string; or\n   *  a hash containing all or some values for the attributes of\n   *  the unit, where the keys are the attribute names, without a\n   *  trailing underscore, e.g., name instead of name_; or\n   *  null, in which case an empty hash is created and used to\n   *  set the values forthe attributes.\n   *  If a hash (empty or not) is used, attributes for which no value\n   *  is specified are assigned a default value.\n   *\n   */\n  constructor(attrs = {}) {\n    // Process the attrs hash passed in, which may be empty.\n    // Create and assign values (from the attrs hash or defaults) to all\n    // attributes.  From Class Declarations in Understanding ECMAScript,\n    // https://leanpub.com/understandinges6/read/#leanpub-auto-class-declarations,\n    //   \"Own properties, properties that occur on the instance rather than the\n    //    prototype, can only be created inside of a class constructor or method.\n    //    It's recommended to create all possible own properties inside of the\n    //    constructor function so there's a single place that's responsible for\n    //    all of them.\"\n\n    /*\n     * Flag indicating whether or not this is a base unit\n     */\n    this.isBase_ = attrs['isBase_'] || false;\n    /*\n     * The unit name, e.g., meter\n     */\n\n    this.name_ = attrs['name_'] || '';\n    /*\n     * The unit's case-sensitive code, e.g., m\n     */\n\n    this.csCode_ = attrs['csCode_'] || '';\n    /*\n     * The unit's case-insensitive code, e.g., M\n     */\n\n    this.ciCode_ = attrs['ciCode_'] || '';\n    /*\n     * The unit's property, e.g., length\n     */\n\n    this.property_ = attrs['property_'] || '';\n    /*\n     * The magnitude of the unit, e.g., 3600/3937 for a yard,\n     * where a yard - 3600/3973 * m(eter).  The Dimension\n     * property specifies the meter - which is the unit on which\n     * a yard is based, and this magnitude specifies how to figure\n     * this unit based on the base unit.\n     */\n\n    this.magnitude_ = attrs['magnitude_'] || 1;\n    /*\n     * The Dimension object of the unit\n     */\n\n    if (attrs['dim_'] === undefined || attrs['dim_'] === null) {\n      this.dim_ = new Dimension();\n    } // When the unit data stored in json format is reloaded, the dimension data\n    // is recognized as a a hash, not as a Dimension object.\n    else if (attrs['dim_']['dimVec_'] !== undefined) {\n        this.dim_ = new Dimension(attrs['dim_']['dimVec_']);\n      } else if (attrs['dim_'] instanceof Dimension) {\n        this.dim_ = attrs['dim_'];\n      } else if (attrs['dim_'] instanceof Array || isInteger(attrs['dim_'])) {\n        this.dim_ = new Dimension(attrs['dim_']);\n      } else {\n        this.dim_ = new Dimension();\n      }\n    /*\n     * The print symbol of the unit, e.g., m\n     */\n\n\n    this.printSymbol_ = attrs['printSymbol_'] || null;\n    /*\n     * The class of the unit, where given, e.g., dimless\n     */\n\n    this.class_ = attrs['class_'] || null;\n    /*\n     * A flag indicating whether or not the unit is metric\n     */\n\n    this.isMetric_ = attrs['isMetric_'] || false;\n    /*\n     * The \"variable\" - which I think is used only for base units\n     * The symbol for the variable as used in equations, e.g., s for distance\n     */\n\n    this.variable_ = attrs['variable_'] || null; // comes from 'dim' in XML\n\n    /*\n     * The conversion function\n     */\n\n    this.cnv_ = attrs['cnv_'] || null;\n    /*\n     * The conversion prefix\n     */\n\n    this.cnvPfx_ = attrs['cnvPfx_'] || 1;\n    /*\n     * Flag indicating whether or not this is a \"special\" unit, i.e., is\n     * constructed using a function specific to the measurement, e.g.,\n     * fahrenheit and celsius\n     */\n\n    this.isSpecial_ = attrs['isSpecial_'] || false;\n    /*\n     * Flag indicating whether or not this is an arbitrary unit\n     */\n\n    this.isArbitrary_ = attrs['isArbitrary_'] || false;\n    /*\n     * Integer indicating what level of exponent applies to a mole-based portion\n     * of the unit.  So, for the unit \"mol\", this will be 1.  For \"mol2\" this\n     * will be 2.  For \"1/mol\" this will be -1.  Any unit that does not include\n     * a mole will have a 0 in this field.  This is used to determine\n     * commensurability for mole<->mass conversions.\n     */\n\n    this.moleExp_ = attrs['moleExp_'] || 0;\n    /*\n     * Added when added LOINC list of units\n     * synonyms are used by the autocompleter to enhance lookup capabilities\n     * while source says where the unit first shows up.  Current sources are\n     * UCUM - which are units from the unitsofmeasure.org list and LOINC -\n     * which are units from the LOINC data.\n     */\n\n    this.synonyms_ = attrs['synonyms_'] || null;\n    this.source_ = attrs['source_'] || null;\n    this.loincProperty_ = attrs['loincProperty_'] || null;\n    this.category_ = attrs['category_'] || null;\n    this.guidance_ = attrs['guidance_'] || null;\n    /*\n     * Used to compute dimension; storing for now until I complete\n     * unit definition parsing\n     */\n\n    /*\n     * Case sensitive (cs) and case insensitive (ci) base unit strings,\n     * includes exponent and prefix if applicable - specified in\n     * <value Unit=x UNIT=X value=\"nnn\">nnn</value> -- the unit part --\n     * in the ucum-essence.xml file, and may be specified by a user\n     * when requesting conversion or validation of a unit string.  The\n     * magnitude (base factor) is used with this to determine the new unit.\n     * For example, a Newton (unit code N) is created from the string\n     * kg.m/s2, and the value of 1 (base factor defined below). An hour\n     * (unit code h) is created from the unit min (minute) with a value\n     * of 60.\n     */\n\n    this.csUnitString_ = attrs['csUnitString_'] || null;\n    this.ciUnitString_ = attrs['ciUnitString_'] || null;\n    /*\n     * String and numeric versions of factor applied to unit specified in\n     * <value Unit=x UNIT=X value=\"nnn\">nnn</value> -- the value part\n     */\n\n    this.baseFactorStr_ = attrs['baseFactorStr_'] || null;\n    this.baseFactor_ = attrs['baseFactor_'] || null;\n    /*\n     * Flag used to indicate units where the definition process failed\n     * when parsing units from the official units definitions file\n     * (currently using the ucum-essence.xml file).  We keep these\n     * so that we can use them to at least validate them as valid\n     * units, but we don't try to convert them.   This is temporary\n     * and only to account for instances where the code does not\n     * take into account various special cases in the xml file.\n     *\n     * This is NOT used when trying to validate a unit string\n     * submitted during a conversion or validation attempt.\n     */\n\n    this.defError_ = attrs['defError_'] || false;\n  } // end constructor\n\n  /**\n   * Assign the unity (= dimensionless unit 1) to this unit.\n   *\n   * @return this unit\n   */\n\n\n  assignUnity() {\n    this.name_ = \"\";\n    this.magnitude_ = 1;\n    if (!this.dim_) this.dim_ = new Dimension();\n    this.dim_.assignZero();\n    this.cnv_ = null;\n    this.cnvPfx_ = 1;\n    return this;\n  } // end assignUnity\n\n  /**\n   * This assigns one or more values, as provided in the hash passed in,\n   * to this unit.\n   *\n   * @param vals hash of values to be assigned to the attributes\n   *        specified by the key(s), which should be the attribute\n   *        name without the trailing underscore, e.g., name instead\n   *        of name_.\n   * @return nothing\n   */\n\n\n  assignVals(vals) {\n    for (let key in vals) {\n      let uKey = !key.charAt(key.length - 1) === '_' ? key + '_' : key;\n      if (this.hasOwnProperty(uKey)) this[uKey] = vals[key];else throw new Error(`Parameter error; ${key} is not a property of a Unit`);\n    }\n  } // end assignVals\n\n  /**\n   * This creates a clone of this unit.\n   *\n   * @return the clone\n   */\n\n\n  clone() {\n    let retUnit = new Unit();\n    Object.getOwnPropertyNames(this).forEach(val => {\n      if (val === 'dim_') {\n        if (this['dim_']) retUnit['dim_'] = this['dim_'].clone();else retUnit['dim_'] = null;\n      } else retUnit[val] = this[val];\n    });\n    return retUnit;\n  } // end clone\n\n  /**\n   * This assigns all properties of a unit passed to it to this unit.\n   *\n   * @param unit2 the unit whose properties are to be assigned to this one.\n   * @return nothing; this unit is updated\n   */\n\n\n  assign(unit2) {\n    Object.getOwnPropertyNames(unit2).forEach(val => {\n      if (val === 'dim_') {\n        if (unit2['dim_']) this['dim_'] = unit2['dim_'].clone();else this['dim_'] = null;\n      } else {\n        this[val] = unit2[val];\n      }\n    });\n  } // end assign\n\n  /**\n   * This determines whether or not object properties of the unit\n   * passed in are equal to the corresponding properties in this unit.\n   * The following properties are the only ones checked:\n   *   magnitude_, dim_, cnv_ and cnvPfx_\n   *\n   * @param unit2 the unit whose properties are to be checked.\n   * @return boolean indicating whether or not they match\n   */\n\n\n  equals(unit2) {\n    return this.magnitude_ === unit2.magnitude_ && this.cnv_ === unit2.cnv_ && this.cnvPfx_ === unit2.cnvPfx_ && (this.dim_ === null && unit2.dim_ === null || this.dim_.equals(unit2.dim_));\n  } // end equals\n\n  /**\n   * This method compares every attribute of two objects to determine\n   * if they all match.\n   *\n   * @param unit2 the unit that is to be compared to this unit\n   * @return boolean indicating whether or not every attribute matches\n   */\n\n\n  fullEquals(unit2) {\n    let thisAttr = Object.keys(this).sort();\n    let u2Attr = Object.keys(unit2).sort();\n    let keyLen = thisAttr.length;\n    let match = keyLen === u2Attr.length; // check each attribute.   Dimension objects have to checked using\n    // the equals function of the Dimension class.\n\n    for (let k = 0; k < keyLen && match; k++) {\n      if (thisAttr[k] === u2Attr[k]) {\n        if (thisAttr[k] === 'dim_') match = this.dim_.equals(unit2.dim_);else match = this[thisAttr[k]] === unit2[thisAttr[k]];\n      } else match = false;\n    } // end do for each key and attribute\n\n\n    return match;\n  } // end of fullEquals\n\n  /**\n   * This returns the value of the property named by the parameter\n   * passed in.\n   *\n   * @param propertyName name of the property to be returned, with\n   *        or without the trailing underscore.\n   * @return the requested property, if found for this unit\n   * @throws an error if the property is not found for this unit\n   */\n\n\n  getProperty(propertyName) {\n    let uProp = propertyName.charAt(propertyName.length - 1) === '_' ? propertyName : propertyName + '_';\n    return this[uProp];\n  } // end getProperty\n\n  /**\n   * Takes a measurement consisting of a number of units and a unit and returns\n   * the equivalent number of this unit.  So, 15 mL would translate\n   * to 1 tablespoon if this object is a tablespoon.\n   *\n   * Note that the number returned may not be what is normally expected.\n   * For example, converting 10 Celsius units to Fahrenheit would \"normally\"\n   * return a value of 50.   But in this case you'll get back something like\n   * 49.99999999999994.\n   *\n   * If either unit is an arbitrary unit an exception is raised.\n   *\n   * @param num the magnitude for the unit to be translated (e.g. 15 for 15 mL)\n   * @param fromUnit the unit to be translated to one of this type (e.g. a mL unit)\n   *\n   * @return the number of converted units (e.g. 1 for 1 tablespoon)\n   * @throws an error if the dimension of the fromUnit differs from this unit's\n   * dimension\n   */\n\n\n  convertFrom(num, fromUnit) {\n    let newNum = 0.0;\n    if (this.isArbitrary_) throw new Error(`Attempt to convert arbitrary unit ${this.name_}`);\n    if (fromUnit.isArbitrary_) throw new Error(`Attempt to convert to arbitrary unit ${fromUnit.name_}`); // reject request if both units have dimensions that are not equal\n\n    if (fromUnit.dim_ && this.dim_ && !fromUnit.dim_.equals(this.dim_)) {\n      // check first to see if a mole<->mass conversion is appropriate\n      if (this.isMoleMassCommensurable(fromUnit)) {\n        throw new Error(Ucum.needMoleWeightMsg_);\n      } else {\n        throw new Error(`Sorry.  ${fromUnit.csCode_} cannot be converted ` + `to ${this.csCode_}.`);\n      }\n    } // reject request if there is a \"from\" dimension but no \"to\" dimension\n\n\n    if (fromUnit.dim_ && (!this.dim_ || this.dim_.isNull())) {\n      throw new Error(`Sorry.  ${fromUnit.csCode_} cannot be converted ` + `to ${this.csCode_}.`);\n    } // reject request if there is a \"to\" dimension but no \"from\" dimension\n\n\n    if (this.dim_ && (!fromUnit.dim_ || fromUnit.dim_.isNull())) {\n      throw new Error(`Sorry.  ${fromUnit.csCode_} cannot be converted ` + `to ${this.csCode_}.`);\n    }\n\n    let fromCnv = fromUnit.cnv_;\n    let fromMag = fromUnit.magnitude_; // If the same conversion function is specified for both units, which\n    // includes neither unit having a conversion function, multiply the\n    // \"from\" unit's magnitude by the number passed in and then divide\n    // that result by this unit's magnitude.  Do this for units with\n    // and without dimension vectors.  PROBLEM with 2 non-commensurable\n    // units with no dimension vector or function, e.g., byte to mol\n\n    if (fromCnv === this.cnv_) {\n      newNum = num * fromMag / this.magnitude_;\n    } // else use a function to get the number to be returned\n    else {\n        let x = 0.0;\n\n        if (fromCnv != null) {\n          // turn num * fromUnit.magnitude into its ratio scale equivalent,\n          // e.g., convert Celsius to Kelvin\n          let fromFunc = _ucumFunctions.default.forName(fromCnv);\n\n          x = fromFunc.cnvFrom(num * fromUnit.cnvPfx_) * fromMag; //x = fromFunc.cnvFrom(num * fromMag) * fromUnit.cnvPfx_;\n        } else {\n          x = num * fromMag;\n        }\n\n        if (this.cnv_ != null) {\n          // turn mag * origUnit on ratio scale into a non-ratio unit,\n          // e.g. convert Kelvin to Fahrenheit\n          let toFunc = _ucumFunctions.default.forName(this.cnv_);\n\n          newNum = toFunc.cnvTo(x / this.magnitude_) / this.cnvPfx_;\n        } else {\n          newNum = x / this.magnitude_;\n        }\n      } // end if either unit has a conversion function\n\n\n    return newNum;\n  } // end convertFrom\n\n  /**\n   * Takes a number and a target unit and returns the number for a measurement\n   * of this unit that corresponds to the number of the target unit passed in.\n   * So, 1 tablespoon (where this unit represents a tablespoon) would translate\n   * to 15 mL.\n   *\n   * See the note on convertFrom about return values.\n   *\n   * @param mag the magnitude for this unit (e.g. 1 for 1 tablespoon)\n   * @param toUnit the unit to which this unit is to be translated\n   *  (e.g. an mL unit)\n   *\n   * @return the converted number value (e.g. 15 mL)\n   * @throws an error if the dimension of the toUnit differs from this unit's\n   *   dimension\n   */\n\n\n  convertTo(num, toUnit) {\n    return toUnit.convertFrom(num, this);\n  } // end convertTo\n\n  /**\n   * Takes a given number of this unit returns the number of this unit\n   * if it is converted into a coherent unit.  Does not change this unit.\n   *\n   * If this is a coherent unit already, just gives back the number\n   * passed in.\n   *\n   * @param num the number for the coherent version of this unit\n   * @return the number for the coherent version of this unit\n   */\n\n\n  convertCoherent(num) {\n    // convert mag' * u' into canonical number * u on ratio scale\n    if (this.cnv_ !== null) num = this.cnv_.f_from(num / this.cnvPfx_) * this.magnitude_;\n    return num;\n  } // end convertCoherent\n\n  /**\n   * Mutates this unit into a coherent unit and converts a given number of\n   * units to the appropriate value for this unit as a coherent unit\n   *\n   * @param num the number for this unit before conversion\n   * @return the number of this unit after conversion\n   * @throws an error if the dimensions differ\n   */\n\n\n  mutateCoherent(num) {\n    // convert mu' * u' into canonical mu * u on ratio scale\n    num = this.convertCoherent(num); // mutate to coherent unit\n\n    this.magnitude_ = 1;\n    this.cnv_ = null;\n    this.cnvPfx_ = 1;\n    this.name_ = \"\"; // build a name as a term of coherent base units\n    // This is probably ALL WRONG and a HORRIBLE MISTAKE\n    // but until we figure out what the heck the name being\n    // built here really is, it will have to stay.\n\n    for (let i = 0, max = Dimension.getMax(); i < max; i++) {\n      let elem = this.dim_.getElementAt(i);\n\n      let tabs = this._getUnitTables();\n\n      let uA = tabs.getUnitsByDimension(new Dimension(i));\n      if (uA == null) throw new Error(`Can't find base unit for dimension ${i}`);\n      this.name_ = uA.name + elem;\n    }\n\n    return num;\n  } // end mutateCoherent\n\n  /**\n   * Calculates the number of units that would result from converting a unit\n   * expressed in mass/grams to a unit expressed in moles.  The \"this\" unit is\n   * the unit expressed in some form of mass (g, mg, mmg, kg, whatever) and the\n   * target or \"to\" unit - the molUnit parameter - is a unit expressed in moles\n   * - mol, umol, mmol, etc.  The unit expressions surrounding the moles and\n   * mass must be convertible.  No validation of this requirement is performed.\n   *\n   * @param amt the quantity of this unit to be converted\n   * @param molUnit the target/to unit for which the converted # is wanted\n   * @param molecularWeight the molecular weight of the substance for which the\n   *  conversion is being made\n   * @return the equivalent amount in molUnit\n   */\n\n\n  convertMassToMol(amt, molUnit, molecularWeight) {\n    // The prefix values that have been applied to this unit, which is the mass\n    // (grams) unit, are reflected in the magnitude.  So the number of moles\n    // represented by this unit equals the number of grams -- amount * magnitude\n    // divided by the molecular Weight\n    let molAmt = this.magnitude_ * amt / molecularWeight; // The molUnit's basic magnitude, before prefixes are applied,\n    // is avogadro's number, get that and divide it out of the current magnitude.\n\n    let tabs = this._getUnitTables();\n\n    let avoNum = tabs.getUnitByCode('mol').magnitude_;\n    let molesFactor = molUnit.magnitude_ / avoNum; // return the molAmt divided by the molesFactor as the number of moles\n    // for the molUnit\n\n    return molAmt / molesFactor;\n  }\n  /**\n   * Calculates the number of units that would result from converting a unit\n   * expressed in moles to a unit expressed in mass (grams).  The \"this\" unit\n   * is the unit expressed in some form of moles, e.g., mol, umol, mmol, etc.,\n   * and the target or \"to\" unit is a unit expressed in some form of mass, e.g.,\n   * g, mg, mmg, kg, etc.  Any unit expressions surrounding the moles and mass\n   * must be convertible. No validation of this requirement is performed.\n   *\n   * @param amt the quantity of this unit to be converted\n   * @param massUnit the target/to unit for which the converted # is wanted\n   * @param molecularWeight the molecular weight of the substance for which the\n   *  conversion is being made\n   * @return the equivalent amount in massUnit\n   */\n\n\n  convertMolToMass(amt, massUnit, molecularWeight) {\n    // A simple mole unit has a magnitude of avogadro's number.  Get that\n    // number now (since not everyone agrees on what it is, and what is\n    // being used in this system might change).\n    let tabs = this._getUnitTables();\n\n    let avoNum = tabs.getUnitByCode('mol').magnitude_; // Determine what prefix values (mg or mg/dL, etc.) have been applied to\n    // this unit by dividing the simple mole unit magnitude out of the\n    // current mole unit magnitude.\n\n    let molesFactor = this.magnitude_ / avoNum; // The number of grams (mass) is equal to the number of moles (amt)\n    // times the molecular weight.  We also multiply that by the prefix values\n    // applied to the current unit (molesFactor) to get the grams for this\n    // particular unit.\n\n    let massAmt = molesFactor * amt * molecularWeight; // Finally, we return the mass amount/grams for this particular unit\n    // divided by any effects of prefixes applied to the \"to\" unit, which\n    // is assumed to be some form of a gram unit\n\n    return massAmt / massUnit.magnitude_;\n  }\n  /**\n   * Mutates this unit into a unit on a ratio scale and converts a specified\n   * number of units to an appropriate value for this converted unit\n   *\n   * @param num the number of this unit before it's converted\n   * @return the magnitude of this unit after it's converted\n   * @throw an error if the dimensions differ\n   */\n\n\n  mutateRatio(num) {\n    if (this.cnv_ == null) return this.mutateCoherent(num);else return num;\n  } // end mutateRatio\n\n  /**\n   * Multiplies this unit with a scalar. Special meaning for\n   * special units so that (0.1*B) is 1 dB.\n   *\n   * This function DOES NOT modify this unit.\n   *\n   * @param s the value by which this unit is to be multiplied\n   * @return a copy this unit multiplied by s\n   * */\n\n\n  multiplyThis(s) {\n    let retUnit = this.clone();\n    if (retUnit.cnv_ != null) retUnit.cnvPfx_ *= s;else retUnit.magnitude_ *= s;\n    let mulVal = s.toString();\n    retUnit.name_ = this._concatStrs(mulVal, '*', this.name_, '[', ']');\n    retUnit.csCode_ = this._concatStrs(mulVal, '.', this.csCode_, '(', ')');\n    retUnit.ciCode_ = this._concatStrs(mulVal, '.', this.ciCode_, '(', ')');\n    retUnit.printSymbol_ = this._concatStrs(mulVal, '.', this.printSymbol_, '(', ')');\n    return retUnit;\n  } // end multiplyThis\n\n  /**\n   * Multiplies this unit with another unit. If one of the\n   * units is a non-ratio unit the other must be dimensionless or\n   * else an exception is thrown.\n   *\n   * This function does NOT modify this unit\n   * @param unit2 the unit to be multiplied with this one\n   * @return this unit after it is multiplied\n   * @throws an error if one of the units is not on a ratio-scale\n   *         and the other is not dimensionless.\n   */\n\n\n  multiplyThese(unit2) {\n    var retUnit = this.clone();\n\n    if (retUnit.cnv_ != null) {\n      if (unit2.cnv_ == null && (!unit2.dim_ || unit2.dim_.isZero())) retUnit.cnvPfx_ *= unit2.magnitude_;else throw new Error(`Attempt to multiply non-ratio unit ${retUnit.name_} ` + 'failed.');\n    } // end if this unit has a conversion function\n    else if (unit2.cnv_ != null) {\n        if (!retUnit.dim_ || retUnit.dim_.isZero()) {\n          retUnit.cnvPfx_ = unit2.cnvPfx_ * retUnit.magnitude_;\n          retUnit.cnv_ = unit2.cnv_;\n        } else throw new Error(`Attempt to multiply non-ratio unit ${unit2.name_}`);\n      } // end if unit2 has a conversion function\n      // else neither unit has a conversion function\n      else {\n          retUnit.magnitude_ *= unit2.magnitude_;\n        } // end if unit2 does not have a conversion function\n    // If this.dim_ isn't there, clone the dimension in unit2 - if dimVec_\n    // is a dimension in unit2.dim_; else just transfer it to this dimension\n\n\n    if (!retUnit.dim_ || retUnit.dim_ && !retUnit.dim_.dimVec_) {\n      if (unit2.dim_) retUnit.dim_ = unit2.dim_.clone();else retUnit.dim_ = unit2.dim_;\n    } // Else this.dim_ is there.  If there is a dimension for unit2,\n    // add it to this one.\n    else if (unit2.dim_ && unit2.dim_ instanceof Dimension) {\n        retUnit.dim_.add(unit2.dim_);\n      } // Concatenate the unit info (name, code, etc) for all cases\n    // where the multiplication was performed (an error wasn't thrown)\n\n\n    retUnit.name_ = this._concatStrs(retUnit.name_, '*', unit2.name_, '[', ']');\n    retUnit.csCode_ = this._concatStrs(retUnit.csCode_, '.', unit2.csCode_, '(', ')');\n    if (retUnit.ciCode_ && unit2.ciCode_) retUnit.ciCode_ = this._concatStrs(retUnit.ciCode_, '.', unit2.ciCode_, '(', ')');else if (unit2.ciCode_) retUnit.ciCode_ = unit2.ciCode_;\n    retUnit.guidance_ = '';\n    if (retUnit.printSymbol_ && unit2.printSymbol_) retUnit.printSymbol_ = this._concatStrs(retUnit.printSymbol_, '.', unit2.printSymbol_, '(', ')');else if (unit2.printSymbol_) retUnit.printSymbol_ = unit2.printSymbol_; // Update the mole exponent count by adding the count for unit2 to the\n    // count for this unit.\n\n    retUnit.moleExp_ = retUnit.moleExp_ + unit2.moleExp_; // A unit that has the arbitrary attribute taints any unit created from it\n    // via an arithmetic operation.  Taint accordingly\n    // if (!retUnit.isMole_)\n    //   retUnit.isMole_ = unit2.isMole_ ;\n\n    if (!retUnit.isArbitrary_) retUnit.isArbitrary_ = unit2.isArbitrary_;\n    return retUnit;\n  } // end multiplyThese\n\n  /**\n   * Divides this unit by another unit. If this unit is not on a ratio\n   * scale an exception is raised. Mutating to a ratio scale unit\n   * is not possible for a unit, only for a measurement.\n   *\n   * This unit is NOT modified by this function.\n   * @param unit2 the unit by which to divide this one\n   * @return this unit after it is divided by unit2\n   * @throws an error if either of the units is not on a ratio scale.\n   * */\n\n\n  divide(unit2) {\n    var retUnit = this.clone();\n    if (retUnit.cnv_ != null) throw new Error(`Attempt to divide non-ratio unit ${retUnit.name_}`);\n    if (unit2.cnv_ != null) throw new Error(`Attempt to divide by non-ratio unit ${unit2.name_}`);\n    if (retUnit.name_ && unit2.name_) retUnit.name_ = this._concatStrs(retUnit.name_, '/', unit2.name_, '[', ']');else if (unit2.name_) retUnit.name_ = unit2.invertString(unit2.name_);\n    retUnit.csCode_ = this._concatStrs(retUnit.csCode_, '/', unit2.csCode_, '(', ')');\n    if (retUnit.ciCode_ && unit2.ciCode_) retUnit.ciCode_ = this._concatStrs(retUnit.ciCode_, '/', unit2.ciCode_, '(', ')');else if (unit2.ciCode_) retUnit.ciCode_ = unit2.invertString(unit2.ciCode_);\n    retUnit.guidance_ = '';\n    retUnit.magnitude_ /= unit2.magnitude_;\n    if (retUnit.printSymbol_ && unit2.printSymbol_) retUnit.printSymbol_ = this._concatStrs(retUnit.printSymbol_, '/', unit2.printSymbol_, '(', ')');else if (unit2.printSymbol_) retUnit.printSymbol_ = unit2.invertString(unit2.printSymbol_); // Continue if unit2 has a dimension object.\n    // If this object has a dimension object, subtract unit2's dim_ object from\n    // this one. The sub method will take care of cases where the dimVec_ arrays\n    // are missing on one or both dim_ objects.\n\n    if (unit2.dim_) {\n      if (retUnit.dim_) {\n        if (retUnit.dim_.isNull()) retUnit.dim_.assignZero();\n        retUnit.dim_ = retUnit.dim_.sub(unit2.dim_);\n      } // end if this.dim_ exists\n      // Else if this dim_ object is missing, clone unit2's dim_ object\n      // and give the inverted clone to this unit.\n      else retUnit.dim_ = unit2.dim_.clone().minus();\n    } // end if unit2 has a dimension object\n    // Update the mole exponent count by subtracting the count for unit2 from\n    // the // count for this unit.\n\n\n    retUnit.moleExp_ = retUnit.moleExp_ - unit2.moleExp_; // A unit that has the arbitrary attribute taints any unit created from\n    // it via an arithmetic operation.  Taint accordingly\n    // if (!retUnit.isMole_)\n    //   retUnit.isMole_ = unit2.isMole_ ;\n\n    if (!retUnit.isArbitrary_) retUnit.isArbitrary_ = unit2.isArbitrary_;\n    return retUnit;\n  } // end divide\n\n  /**\n   * Invert this unit with respect to multiplication. If this unit is not\n   * on a ratio scale an exception is thrown. Mutating to a ratio scale unit\n   * is not possible for a unit, only for a measurement (the magnitude and\n   * dimension).\n   *\n   *  This unit is modified by this function.\n   * @return this unit after being inverted\n   * @throws and error if this unit is not on a ratio scale\n   */\n\n\n  invert() {\n    if (this.cnv_ != null) throw new Error(`Attempt to invert a non-ratio unit - ${this.name_}`);\n    this.name_ = this.invertString(this.name_);\n    this.magnitude_ = 1 / this.magnitude_;\n    this.dim_.minus();\n    return this;\n  } // end invert\n\n  /**\n   * Inverts a string, where the string is assumed to be a code or a name\n   * of a division operation where the string is the divisor and the dividend\n   * is blank.\n   *\n   * @param the string to be inverted\n   * @return the inverted string\n   */\n\n\n  invertString(theString) {\n    if (theString.length > 0) {\n      let stringRep = theString.replace('/', \"!\").replace('.', '/').replace(\"!\", '.');\n\n      switch (stringRep.charAt(0)) {\n        case '.':\n          theString = stringRep.substr(1);\n          break;\n\n        case '/':\n          theString = stringRep;\n          break;\n\n        default:\n          theString = \"/\" + stringRep;\n      }\n    }\n\n    return theString;\n  } // end invertString\n\n  /**\n   * This function handles concatenation of two strings and an operator.\n   * It's called to build unit data, e.g., unit name, unit code, etc., from\n   * two different units, joined by the specified operator.\n   *\n   * @param str1 the first string to appear in the result\n   * @param operator the operator ('*', '.' or '/') to appear between the strings\n   * @param str2 the second string to appear in the result\n   * @param startChar the starting character to be used, when needed, to\n   *  enclose a string\n   * @param endChar the ending character to be used, when needed, to enclose\n   *  a string\n   * @returns the built string\n   */\n\n\n  _concatStrs(str1, operator, str2, startChar, endChar) {\n    return this._buildOneString(str1, startChar, endChar) + operator + this._buildOneString(str2, startChar, endChar);\n  }\n  /**\n   * This function handles creation of one string to be included in a\n   * concatenated string.   Basically it checks to see if the string\n   * needs to be enclosed either in parentheses or square brackets.\n   *\n   * The string is enclosed if it is not a number, does not start with\n   * a parenthesis or square bracket, and includes a period, and asterisk,\n   * a slash or a blank space.\n   *\n   * @param str the string\n   * @param startChar starting enclosing character\n   * @param endChar ending enclosing character\n   * @returns the string\n   */\n\n\n  _buildOneString(str, startChar, endChar) {\n    let ret = '';\n\n    if (intUtils_.isNumericString(str)) {\n      ret = str;\n    } else {\n      if (str.charAt(0) === '(' || str.charAt(0) === '[') {\n        ret = str;\n      } else if (str.includes('.') || str.includes('/') || str.includes('*') || str.includes(' ')) {\n        ret = startChar + str + endChar;\n      } else {\n        ret = str;\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Raises the unit to a power.  For example\n   *  kg.m/s2 raised to the -2 power would be kg-2.m-2/s-4\n   *\n   * If this unit is not on a ratio scale an error is thrown. Mutating\n   * to a ratio scale unit is not possible for a unit, only for a\n   * measurement (magnitude and dimension).\n   *\n   * This is based on the pow method in Gunter Schadow's java version,\n   * although it uses javascript capabilities to simplify the processing.\n   *\n   * This unit is modified by this function\n   *\n   * @param p the power to with this unit is to be raise\n   * @return this unit after it is raised\n   * @throws an error if this unit is not on a ratio scale.\n   */\n\n\n  power(p) {\n    if (this.cnv_ != null) throw new Error(`Attempt to raise a non-ratio unit, ${this.name_}, ` + 'to a power.'); //this.name_ = UnitString.pow(this.name_, p);\n    // the above line is replaced with the code below, as the pow method\n    // never actually existing in the UnitString class.  (Tried to use\n    // Schadow java code but this way ended up being a lot easier).\n\n    let uStr = this.csCode_;\n    let uArray = uStr.match(/([./]|[^./]+)/g);\n    let arLen = uArray.length;\n\n    for (let i = 0; i < arLen; i++) {\n      let un = uArray[i];\n\n      if (un !== '/' && un !== '.') {\n        let nun = parseInt(un);\n        if (isInteger(nun)) uArray[i] = Math.pow(nun, p).toString();else {\n          let uLen = un.length;\n\n          for (let u = uLen - 1; u >= 0; u--) {\n            let uChar = parseInt(un[u]);\n\n            if (!isInteger(uChar)) {\n              if (un[u] === '-' || un[u] === '+') {\n                u--;\n              }\n\n              if (u < uLen - 1) {\n                let exp = parseInt(un.substr(u));\n                exp = Math.pow(exp, p);\n                uArray[i] = un.substr(0, u) + exp.toString();\n                u = -1;\n              } else {\n                uArray[i] += p.toString();\n                u = -1;\n              } // end if there are/aren't some numbers at the end\n\n\n              u = -1;\n            } // end if this character is not a number\n\n          } // end searching backwards for start of exponent\n\n        } // end if this element is not a number\n      } // end if the current element is not an operator\n\n    } // end do for each element of the units array\n    // reassemble the updated units array to a string\n\n\n    this.csCode_ = uArray.join('');\n    this.magnitude_ = Math.pow(this.magnitude_, p);\n\n    if (this.dim_) {\n      this.dim_.mul(p);\n    }\n\n    return this;\n  } // end power\n\n  /*\n   * This function tests this unit against the unit passed in to see if the\n   * two are mole to mass commensurable.  It assumes that one of the units\n   * is a mole-based unit and the other is a mass-based unit.  It also assumes\n   * that the mole-based unit has a single mole unit in the numerator and that\n   * the mass-based unit has a single mass unit in the numerator.  It does NOT\n   * check to validate those assumptions.\n   *\n   * The check is made by setting the dimension vector element corresponding\n   * to the base mass unit (gram) in the mole unit, and then comparing the\n   * two dimension vectors.  If they match, the units are commensurable.\n   * Otherwise they are not.\n   *\n   * @param unit2 the unit to be compared to this one\n   * @returns boolean indicating commensurability\n   */\n\n\n  isMoleMassCommensurable(unit2) {\n    let tabs = this._getUnitTables();\n\n    let d = tabs.getMassDimensionIndex();\n    let commensurable = false;\n\n    if (this.moleExp_ === 1 && unit2.moleExp_ === 0) {\n      let testDim = this.dim_.clone();\n      let curVal = testDim.getElementAt(d);\n      testDim.setElementAt(d, curVal + this.moleExp_);\n      commensurable = testDim.equals(unit2.dim_);\n    } else if (unit2.moleExp_ === 1 && this.moleExp_ === 0) {\n      let testDim = unit2.dim_.clone();\n      let curVal = testDim.getElementAt(d);\n      testDim.setElementAt(d, curVal + unit2.moleExp_);\n      commensurable = testDim.equals(this.dim_);\n    }\n\n    return commensurable;\n  }\n  /**\n   * This returns the UnitTables singleton object.  Including the require\n   * statement included here causes a circular dependency condition that\n   * resulted in the UnitTables object not being defined for the Unit object.\n   * sigh.  Thanks, Paul, for figuring this out.\n   *\n   * @private\n   */\n\n\n  _getUnitTables() {\n    if (!UnitTables) UnitTables = require('./unitTables.js').UnitTables;\n    return UnitTables.getInstance();\n  }\n\n} // end Unit class\n\n\nexports.Unit = Unit;\n//# sourceMappingURL=unit.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnitString = void 0;\n\nvar intUtils_ = _interopRequireWildcard(require(\"./ucumInternalUtils.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * This class handles the parsing of a unit string into a unit object\n */\nvar Ucum = require('./config.js').Ucum;\n\nvar Unit = require('./unit.js').Unit;\n\nvar UnitTables = require('./unitTables.js').UnitTables;\n\nvar PrefixTables = require('./prefixTables.js').PrefixTables;\n\nclass UnitString {\n  /**\n   * Constructor\n   */\n  constructor() {\n    // Get instances of the unit and prefix tables and the utilities\n    this.utabs_ = UnitTables.getInstance();\n    this.pfxTabs_ = PrefixTables.getInstance(); // Set emphasis characters to defaults.  These are used to emphasize\n    // certain characters or strings in user messages.  They can be reset in\n    // the useHTMLInMessages method.\n\n    this.openEmph_ = Ucum.openEmph_;\n    this.closeEmph_ = Ucum.closeEmph_; // Set the braces message to blank.  This message is displayed for each\n    // validation request on the web page, but is included separately as\n    // a note on the validation spreadsheet.  The useBraceMsgForEachString\n    // method should be used to set the message to be displayed for each\n    // unit string.\n\n    this.bracesMsg_ = ''; // Set the flags used, with indices, as place holders in unit strings\n    // for parenthetical strings and strings within braces.\n\n    this.parensFlag_ = \"parens_placeholder\"; // in lieu of Jehoshaphat\n\n    this.pFlagLen_ = this.parensFlag_.length;\n    this.braceFlag_ = \"braces_placeholder\"; // in lieu of Nebuchadnezzar\n\n    this.bFlagLen_ = this.braceFlag_.length; // Initialize the message start/end strings, which will be set when\n    // parseString is called.\n\n    this.vcMsgStart_ = null;\n    this.vcMsgEnd_ = null; // Arrays used by multiple methods within this class to hold persistent\n    // data.  Just gets too bulky to pass these guys around.\n    // Messages to be returned to the calling function\n\n    this.retMsg_ = []; // Units for parenthetical unit strings\n\n    this.parensUnits_ = []; // annotation text for annotations found in unit strings\n\n    this.annotations_ = []; // suggestions for unit strings that for which no unit was found\n\n    this.suggestions = [];\n  } // end constructor\n\n  /**\n   * Sets the emphasis strings to the HTML used in the webpage display - or\n   * blanks them out, depending on the use parameter.\n   *\n   * @param use flag indicating whether or not to use the html message format;\n   *  defaults to true\n   */\n\n\n  useHTMLInMessages(use) {\n    if (use === undefined || use) {\n      this.openEmph_ = Ucum.openEmphHTML_;\n      this.closeEmph_ = Ucum.closeEmphHTML_;\n    } else {\n      this.openEmph_ = Ucum.openEmph_;\n      this.closeEmph_ = Ucum.closeEmph_;\n    }\n  } // end useHTMLInMessages\n\n  /**\n   * Sets the braces message to be displayed for each unit string validation\n   * requested, as appropriate.\n   *\n   * @param use flag indicating whether or not to use the braces message;\n   *  defaults to true\n   */\n\n\n  useBraceMsgForEachString(use) {\n    if (use === undefined || use) this.bracesMsg_ = Ucum.bracesMsg_;else this.bracesMsg_ = '';\n  }\n  /**\n   * Parses a unit string, returns a unit, a possibly updated version of\n   * the string passed in, and messages and suggestions where appropriate.\n   *\n   * The string returned may be updated if the input string contained unit\n   * names, e.g., \"pound\".  The unit code ([lb_av] for pound) is placed in\n   * the string returned, a the returned messages array includes a note\n   * explaining the substitution.\n   *\n   * @param uStr the string defining the unit\n   * @param valConv indicates what type of request this is for - a request to\n   *  validate (pass in 'validate') or a request to convert (pass in 'convert');\n   *  optional, defaults to 'validate'\n   * @param suggest a boolean to indicate whether or not suggestions are\n   *  requested for a string that cannot be resolved to a valid unit;\n   *  true indicates suggestions are wanted; false indicates they are not,\n   *  and is the default if the parameter is not specified;\n   * @returns an array containing:\n   *   the unit object or null if a unit could not be created.  In cases where\n   *     a fix was found for a problem string, .e.g., 2.mg for 2mg, a unit will\n   *     be returned but an error message will also be returned, describing\n   *     the substitution;\n   *   the possibly updated unit string passed in;\n   *   an array of any user messages (informational, error or warning)\n   *     generated (or an empty array); and\n   *   a suggestions array of hash objects (1 or more).  Each hash contains\n   *   three elements:\n   *     'msg' which is a message indicating what unit expression the\n   *       suggestions are for;\n   *     'invalidUnit' which is the unit expression the suggestions are\n   *       for; and\n   *     'units' which is an array of data for each suggested unit found.\n   *        Each array will contain the unit code, the unit name and the\n   *        unit guidance (if any).\n   *   The return array will not contain a suggestions array if a valid unit\n   *   was found or if suggestions were not requested.\n   * @throws an error if nothing was specified.\n   */\n\n\n  parseString(uStr, valConv, suggest) {\n    uStr = uStr.trim(); // Make sure we have something to work with\n\n    if (uStr === '' || uStr === null) {\n      throw new Error('Please specify a unit expression to be validated.');\n    }\n\n    if (valConv === 'validate') {\n      this.vcMsgStart_ = Ucum.valMsgStart_;\n      this.vcMsgEnd_ = Ucum.valMsgEnd_;\n    } else {\n      this.vcMsgStart_ = Ucum.cnvMsgStart_;\n      this.vcMsgEnd_ = Ucum.cnvMsgEnd_;\n    }\n\n    if (suggest === undefined || suggest === false) {\n      this.suggestions_ = null;\n    } else {\n      this.suggestions_ = [];\n    }\n\n    this.retMsg_ = [];\n    this.parensUnits_ = [];\n    this.annotations_ = [];\n    let origString = uStr;\n    let retObj = []; // Extract any annotations, i.e., text enclosed in braces ({}) from the\n    // string before further processing.  Store each one in this.annotations_\n    // array and put a placeholder in the string for the annotation.  Do\n    // this before other processing in case an annotation contains characters\n    // that will be interpreted as parenthetical markers or operators in\n    // subsequent processing.\n\n    uStr = this._getAnnotations(uStr);\n\n    if (this.retMsg_.length > 0) {\n      retObj[0] = null;\n      retObj[1] = null;\n    } else {\n      // Flag used to block further processing on an unrecoverable error\n      let endProcessing = this.retMsg_.length > 0; // First check for one of the \"special\" units.  If it's one of those, put\n      // in a substitution phrase for it to avoid having it separated on its\n      // embedded operator.  This will only happen, by the way, if it is\n      // preceded by a prefix or followed by an operator and another unit.\n\n      let sUnit = null;\n\n      for (sUnit in Ucum.specUnits_) {\n        while (uStr.includes(sUnit)) uStr = uStr.replace(sUnit, Ucum.specUnits_[sUnit]);\n      } // Check for spaces and throw an error if any are found.  The spec\n      // explicitly forbids spaces except in annotations, which is why any\n      // annotations are extracted before this check is made.\n\n\n      if (uStr.indexOf(' ') > -1) {\n        throw new Error('Blank spaces are not allowed in unit expressions.');\n      } // end if blanks were found in the string\n      // assign the array returned to retObj.  It will contain 2 elements:\n      //  the unit returned in position 0; and the origString (possibly\n      //  modified in position 1.  The origString in position 1 will not\n      //  be changed by subsequent processing.\n\n\n      retObj = this._parseTheString(uStr, origString);\n      let finalUnit = retObj[0]; // Do a final check to make sure that finalUnit is a unit and not\n      // just a number.  Something like \"8/{HCP}\" will return a \"unit\" of 8\n      // - which is not a unit.  Hm - evidently it is.  So just create a unit\n      // object for it.\n\n      if (intUtils_.isIntegerUnit(finalUnit) || typeof finalUnit === 'number') {\n        finalUnit = new Unit({\n          'csCode_': origString,\n          'magnitude_': finalUnit,\n          'name_': origString\n        });\n        retObj[0] = finalUnit;\n      } // end final check\n\n    } // end if no annotation errors were found\n\n\n    retObj[2] = this.retMsg_;\n    if (this.suggestions_ && this.suggestions_.length > 0) retObj[3] = this.suggestions_;\n    return retObj;\n  } // end parseString\n\n  /**\n   * Parses a unit string, returns a unit, a possibly updated version of\n   * the string passed in, and messages where appropriate.  This should\n   * only be called from within this class (or by test code).\n   *\n   * The string returned may be updated if the input string contained unit\n   * names, e.g., \"pound\".  The unit code ([lb_av] for pound) is placed in\n   * the string returned, a the returned messages array includes a note\n   * explaining the substitution.\n   *\n   * @param uStr the string defining the unit\n   * @param origString the original unit string passed in\n   *\n   * @returns\n   *  an array containing:\n   *    the unit object (or null if there were problems creating the unit); and\n   *    the possibly updated unit string passed in.\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   * the this.parensUnits_ array is referenced and possibly populated by\n   *   methods called within this one\n   * the this.annotations_ array is referenced by methods called within\n   *   this one\n   * the this.suggestions_ array may be populated by methods called within\n   *   this one\n   */\n\n\n  _parseTheString(uStr, origString) {\n    // Unit to be returned\n    let finalUnit = null; // Flag used to block further processing on an unrecoverable error\n\n    let endProcessing = this.retMsg_.length > 0; // Call _processParens to search for and process any/all parenthetical\n    // strings in uStr.  Units created for parenthetical strings will be\n    // stored in the this.parensUnits_ array.\n\n    let parensResp = this._processParens(uStr, origString);\n\n    endProcessing = parensResp[2]; // The array used to hold the units and their operators.\n\n    let uArray = []; // Continue if we didn't hit a problem\n\n    if (!endProcessing) {\n      uStr = parensResp[0];\n      origString = parensResp[1]; // Call _makeUnitsArray to convert the string to an array of unit\n      // descriptors with operators.\n\n      let mkUArray = this._makeUnitsArray(uStr, origString);\n\n      endProcessing = mkUArray[2];\n\n      if (!endProcessing) {\n        uArray = mkUArray[0];\n        origString = mkUArray[1]; // Create a unit object out of each un element\n\n        let uLen = uArray.length;\n\n        for (let u1 = 0; u1 < uLen; u1++) {\n          //for (let u1 = 0; u1 < uLen && !endProcessing; u1++) {\n          let curCode = uArray[u1]['un']; // Determine the type of the \"un\" attribute of the current array element\n          // Check to see if it's a number.  If so write the number version of\n          // the number back to the \"un\" attribute and move on\n\n          if (intUtils_.isIntegerUnit(curCode)) {\n            uArray[u1]['un'] = Number(curCode);\n          } else {\n            // The current unit array element is a string.  Check now to see\n            // if it is or contains a parenthesized unit from this.parensUnits_.\n            // If so, call _getParens to process the string and get the unit.\n            if (curCode.indexOf(this.parensFlag_) >= 0) {\n              let parenUnit = this._getParensUnit(curCode, origString); // if we couldn't process the string, set the end flag and bypass\n              // further processing.\n\n\n              if (!endProcessing) endProcessing = parenUnit[1]; // If we're good, put the unit in the uArray and replace the\n              // curCode, which contains the parentheses placeholders, etc.,\n              // with the unit's code - including any substitutions.\n\n              if (!endProcessing) {\n                uArray[u1]['un'] = parenUnit[0];\n              }\n            } // end if the curCode contains a parenthesized unit\n            // Else it's not a parenthetical unit and not a number. Call\n            // _makeUnit to create a unit for it.\n            else {\n                let uRet = this._makeUnit(curCode, origString); // If we didn't get a unit, set the endProcessing flag.\n\n\n                if (uRet[0] === null) {\n                  endProcessing = true;\n                } else {\n                  uArray[u1]['un'] = uRet[0];\n                  origString = uRet[1];\n                }\n              } // end if the curCode is not a parenthetical expression\n\n          } // end if the \"un\" array is a not a number\n\n        } // end do for each element in the units array\n\n      } // end if _makeUnitsArray did not return an error\n\n    } // end if _processParens did not find an error that causes a stop\n    // If we're still good, continue\n\n\n    if (!endProcessing) {\n      // Process the units (and numbers) to create one final unit object\n      if ((uArray[0] === null || uArray[0] === ' ' || uArray[0]['un'] === undefined || uArray[0]['un'] === null) && this.retMsg_.length === 0) {\n        // not sure what this might be, but this is a safeguard\n        this.retMsg_.push(`Unit string (${origString}) did not contain ` + `anything that could be used to create a unit, or else something ` + `that is not handled yet by this package.  Sorry`);\n        endProcessing = true;\n      }\n    }\n\n    if (!endProcessing) {\n      finalUnit = this._performUnitArithmetic(uArray, origString);\n    }\n\n    return [finalUnit, origString];\n  } // end _parseTheString\n\n  /**\n   * Extracts all annotations from a unit string, replacing them with\n   * placeholders for later evaluation.  The annotations are stored in the\n   * this.annotations_ array.  This should only be called from within this\n   * class (or by test code).\n   *\n   * @param uString the unit string being parsed\n   * @returns the string after the annotations are replaced with placeholders\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   * the this.annotations_ array is populated by this method\n   */\n\n\n  _getAnnotations(uString) {\n    let openBrace = uString.indexOf('{');\n\n    while (openBrace >= 0) {\n      let closeBrace = uString.indexOf('}');\n\n      if (closeBrace < 0) {\n        this.retMsg_.push('Missing closing brace for annotation starting at ' + this.openEmph_ + uString.substr(openBrace) + this.closeEmph_);\n        openBrace = -1;\n      } else {\n        let braceStr = uString.substring(openBrace, closeBrace + 1);\n        let aIdx = this.annotations_.length.toString();\n        uString = uString.replace(braceStr, this.braceFlag_ + aIdx + this.braceFlag_);\n        this.annotations_.push(braceStr);\n        openBrace = uString.indexOf('{');\n      }\n    } // end do while we have an opening brace\n    // check for a stray/unmatched closing brace\n\n\n    let closeBrace = uString.indexOf('}');\n    if (closeBrace >= 0) this.retMsg_.push('Missing opening brace for closing brace found at ' + this.openEmph_ + uString.substring(0, closeBrace + 1) + this.closeEmph_);\n    return uString;\n  } // end _getAnnotations\n\n  /**\n   * Finds and processes any/all parenthesized unit strings. This should only\n   * be called from within this class (or by test code).\n   *\n   * Nested parenthesized strings are processed from the inside out.  The\n   * parseString function is called from within this one for each parenthesized\n   * unit string, and the resulting unit object is stored in this.parensUnits_,\n   * to be processed after all strings are translated to units.\n   *\n   * A placeholder is placed in the unit string returned to indicate that the\n   * unit object should be obtained from the this.parensUnits_ array.  The\n   * placeholder consists of the parenthesis flag (this.parensFlag_) followed\n   * by the index of the unit in this.parensUnits_ followed by this.parensFlag_.\n   *\n   * @param uString the unit string being parsed, where this will be the full\n   *  string the first time this is called and parenthesized strings on any\n   *  subsequent calls\n   * @param origString the original string first passed in to parseString\n   * @returns\n   *  an array containing:\n   *   the string after the parentheses are replaced;\n   *   the original string; and\n   *   a boolean flag indicating whether or not an error occurred that\n   *     should stop processing.\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   * this this.parensUnits_ array will be populated with units found for\n   *   parenthetical unit strings\n   */\n\n\n  _processParens(uString, origString) {\n    // Unit strings array and index\n    let uStrArray = [];\n    let uStrAryPos = 0;\n    let stopProcessing = false;\n    let pu = this.parensUnits_.length; // Count of characters trimmed off the beginning of the unit string (uString)\n    // as units are removed from it; used for error messages to provide\n    // context.\n\n    let trimmedCt = 0; // Break the unit string into pieces that consist of text outside of\n    // parenthetical strings and placeholders for the parenthetical units.\n    // This method is called recursively for parenthetical strings and the units\n    // returned are stored in the this.parensUnits_ array.\n\n    while (uString !== \"\" && !stopProcessing) {\n      let openCt = 0;\n      let closeCt = 0;\n      let openPos = uString.indexOf('('); // If an opening parenthesis was not found, check for an unmatched\n      // close parenthesis.  If one was found report the error and end\n      // processing.\n\n      if (openPos < 0) {\n        let closePos = uString.indexOf(')');\n\n        if (closePos >= 0) {\n          let theMsg = `Missing open parenthesis for close ` + `parenthesis at ${uString.substring(0, closePos + trimmedCt)}` + `${this.openEmph_}${uString.substr(closePos, 1)}${this.closeEmph_}`;\n\n          if (closePos < uString.length - 1) {\n            theMsg += `${uString.substr(closePos + 1)}`;\n          }\n\n          this.retMsg_.push(theMsg);\n          uStrArray[uStrAryPos] = uString;\n          stopProcessing = true;\n        } // end if a close parenthesis was found\n        // If no parentheses were found in the current unit string, transfer\n        // it to the units array and blank out the string, which will end\n        // the search for parenthetical units.\n        else {\n            uStrArray[uStrAryPos] = uString;\n            uString = \"\";\n          } // end if no close parenthesis was found\n\n      } // end if no open parenthesis was found\n      // Otherwise an open parenthesis was found. Process the string that\n      // includes the parenthetical group\n      else {\n          openCt += 1; // Write the text before the parentheses (if any) to the unit strings array\n\n          let uLen = uString.length;\n\n          if (openPos > 0) {\n            uStrArray[uStrAryPos++] = uString.substr(0, openPos);\n          } // Find the matching closePos, i.e., the one that closes the\n          // parenthetical group that this one opens.  Look also for\n          // another open parenthesis, in case this includes nested parenthetical\n          // strings.  This continues until it finds the same number of close\n          // parentheses as open parentheses, or runs out of string to check.\n          // In the case of nested parentheses this will identify the outer set\n          // of parentheses.\n\n\n          let closePos = 0;\n          let c = openPos + 1;\n\n          for (; c < uLen && openCt != closeCt; c++) {\n            if (uString[c] === '(') openCt += 1;else if (uString[c] === ')') closeCt += 1;\n          } // Put a placeholder for the group in the unit strings array and recursively\n          // call this method for the parenthetical group.  Put the unit returned\n          // in this.parensUnits_.  Set the unit string to whatever follows\n          // the position of the closing parenthesis for this group, to be\n          // processed by the next iteration of this loop.  If there's nothing\n          // left uString is set to \"\".\n\n\n          if (openCt === closeCt) {\n            closePos = c;\n            uStrArray[uStrAryPos++] = this.parensFlag_ + pu.toString() + this.parensFlag_;\n\n            let parseResp = this._parseTheString(uString.substring(openPos + 1, closePos - 1), origString);\n\n            if (parseResp[0] === null) stopProcessing = true;else {\n              origString = parseResp[1];\n              this.parensUnits_[pu++] = parseResp[0];\n              uString = uString.substr(closePos);\n              trimmedCt = closePos;\n            }\n          } // end if the number of open and close parentheses matched\n          // If the number of open and close parentheses doesn't match, indicate\n          // an error.\n          else {\n              uStrArray.push(origString.substr(openPos));\n              this.retMsg_.push(`Missing close parenthesis for open parenthesis at ` + `${origString.substring(0, openPos + trimmedCt)}` + `${this.openEmph_}${origString.substr(openPos, 1)}` + `${this.closeEmph_}${origString.substr(openPos + 1)}`);\n              stopProcessing = true;\n            }\n        } // end if an open parenthesis was found\n\n    } // end do while the input string is not empty\n\n\n    if (stopProcessing) this.parensUnits_ = [];\n    return [uStrArray.join(''), origString, stopProcessing];\n  } // end _processParens\n\n  /**\n   * Breaks the unit string into an array of unit descriptors and operators.\n   * If a unit descriptor consists of a number preceding a unit code, with\n   * no multiplication operator, e.g., 2mg instead of 2.mg, it is handled\n   * as if it were a parenthetical expression.\n   *\n   * This should only be called from within this class (or by test code).\n   *\n   * @param uStr the unit string being parsed\n   * @param origString the original string passed to parseString\n   * @returns\n   *  an array containing:\n   *    the array representing the unit string;\n   *    the original string passed in, possibly updated with corrections; and\n   *    and a flag indicating whether or not processing can continue.\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   */\n\n\n  _makeUnitsArray(uStr, origString) {\n    // Separate the string into pieces based on delimiters / (division) and .\n    // (multiplication).  The idea is to get an array of units on which we\n    // can then perform any operations (prefixes, multiplication, division).\n    let uArray1 = uStr.match(/([./]|[^./]+)/g);\n    let endProcessing = false;\n    let uArray = [];\n    let startNumCheck = /(^[0-9]+)(\\[?[a-zA-Z\\_0-9a-zA-Z\\_]+\\]?$)/; // If the first element in the array is the division operator (/), the\n    // string started with '/'.  Add a first element containing 1 to the\n    // array, which will cause the correct computation to be performed (inversion).\n\n    if (uArray1[0] === \"/\") {\n      uArray1.unshift(\"1\");\n    } // If the first element in the array is the multiplication operator (.)\n    // return an error.\n    else if (uArray1[0] === '.') {\n        this.retMsg_.push(`${origString} is not a valid UCUM code. ` + `The multiplication operator at the beginning of the expression is ` + `not valid. A multiplication operator must appear only between ` + `two codes.`);\n        endProcessing = true;\n      }\n\n    if (!endProcessing) {\n      // Check to see if there is a number preceding a unit code, e.g., 2mg\n      // If so, update the first element to remove the number (2mg -> mg) and\n      // add two elements to the beginning of the array - the number and the\n      // multiplication operator.\n      if (!intUtils_.isNumericString(uArray1[0])) {\n        let numRes = uArray1[0].match(startNumCheck);\n\n        if (numRes && numRes.length === 3 && numRes[1] !== '' && numRes[2] !== '' && numRes[2].indexOf(this.braceFlag_) !== 0) {\n          let dispVal = numRes[2];\n\n          if (!endProcessing && numRes[2].includes(this.parensFlag_)) {\n            let parensback = this._getParensUnit(numRes[2], origString);\n\n            numRes[2] = parensback[0]['csCode_'];\n            dispVal = `(${numRes[2]})`;\n            endProcessing = parensback[1];\n          }\n\n          if (!endProcessing) {\n            this.retMsg_.push(`${numRes[1]}${dispVal} is not a valid UCUM code.` + `  ${this.vcMsgStart_}${numRes[1]}.${dispVal}${this.vcMsgEnd_}`);\n            origString = origString.replace(`${numRes[1]}${dispVal}`, `${numRes[1]}.${dispVal}`);\n            uArray1[0] = numRes[2];\n            uArray1.unshift(numRes[1], '.');\n          }\n        }\n      } // end if the first element is not a number (only)\n      // Create an array of unit/operator objects.  The unit is, for now, the\n      // string containing the unit code (e.g., Hz for hertz) including\n      // a possible prefix and exponent.   The operator is the operator to be\n      // applied to that unit and the one preceding it.  So, a.b would give\n      // us two objects.  The first will have a unit of a, and a blank operator\n      // (because it's the first unit).  The second would have a unit of b\n      // and the multiplication operator (.).\n\n\n      if (!endProcessing) {\n        let u1 = uArray1.length;\n        uArray = [{\n          op: \"\",\n          un: uArray1[0]\n        }];\n\n        for (let n = 1; n < u1; n++) {\n          // check to make sure that we don't have two operators together, e.g.,\n          // mg./K.  If so, let the user know the problem.\n          let theOp = uArray1[n++]; // oh wait - check to make sure something is even there, that the\n          // user didn't end the expression with an operator.\n\n          if (!uArray1[n]) {\n            this.retMsg_.push(`${origString} is not a valid UCUM code. ` + `It is terminated with the operator ${this.openEmph_}` + `${theOp}${this.closeEmph_}.`);\n            n = u1;\n            endProcessing = true;\n          } else if (Ucum.validOps_.includes(uArray1[n])) {\n            this.retMsg_.push(`${origString} is not a valid UCUM code. ` + `A unit code is missing between${this.openEmph_}` + `${theOp}${this.closeEmph_}and${this.openEmph_}` + `${uArray1[n]}${this.closeEmph_}in${this.openEmph_}` + `${theOp}${uArray1[n]}${this.closeEmph_}.`);\n            n = u1;\n            endProcessing = true;\n          } else {\n            // Check to see if a number precedes a unit code.\n            // If so, send the element to _processParens, inserting the multiplication\n            // operator where it belongs.  Treating it as parenthetical keeps it from\n            // being interpreted incorrectly because of operator parentheses.  For\n            // example, if the whole string is mg/2kJ we don't want to rewrite it as\n            // mg/2.kJ - because mg/2 would be performed, followed by .kJ.  Instead,\n            // handling 2kJ as a parenthesized unit will make sure mg is divided by\n            // 2.kJ.\n            if (!intUtils_.isNumericString(uArray1[n])) {\n              let numRes2 = uArray1[n].match(startNumCheck);\n\n              if (numRes2 && numRes2.length === 3 && numRes2[1] !== '' && numRes2[2] !== '' && numRes2[2].indexOf(this.braceFlag_) !== 0) {\n                let invalidString = numRes2[0];\n\n                if (!endProcessing && numRes2[2].includes(this.parensFlag_)) {\n                  let parensback = this._getParensUnit(numRes2[2], origString);\n\n                  numRes2[2] = parensback[0]['csCode_'];\n                  invalidString = `(${numRes2[2]})`;\n                  endProcessing = parensback[1];\n\n                  if (!endProcessing) {\n                    this.retMsg_.push(`${numRes2[1]}${invalidString} is not a ` + `valid UCUM code.  ${this.vcMsgStart_}${numRes2[1]}.${invalidString}` + `${this.vcMsgEnd_}`);\n                    let parensString = `(${numRes2[1]}.${invalidString})`;\n                    origString = origString.replace(`${numRes2[1]}${invalidString}`, parensString);\n\n                    let nextParens = this._processParens(parensString, origString);\n\n                    endProcessing = nextParens[2];\n\n                    if (!endProcessing) {\n                      uArray.push({\n                        op: theOp,\n                        un: nextParens[0]\n                      });\n                    } //uArray.push({op: '.', un: numRes2[2]});\n\n                  }\n                } // end if the string represents a parenthesized unit\n                else {\n                    let parensStr = '(' + numRes2[1] + '.' + numRes2[2] + ')';\n\n                    let parensResp = this._processParens(parensStr, origString); // if a \"stop processing\" flag was returned, set the n index to end\n                    // the loop and set the endProcessing flag\n\n\n                    if (parensResp[2]) {\n                      n = u1;\n                      endProcessing = true;\n                    } else {\n                      this.retMsg_.push(`${numRes2[0]} is not a ` + `valid UCUM code.  ${this.vcMsgStart_}${numRes2[1]}.${numRes2[2]}` + `${this.vcMsgEnd_}`);\n                      origString = origString.replace(numRes2[0], parensStr);\n                      uArray.push({\n                        op: theOp,\n                        un: parensResp[0]\n                      });\n                    } // end if no error on the processParens call\n\n                  } // end if the string does not represent a parenthesized unit\n\n              } // end if the string is a number followed by a string\n              else {\n                  uArray.push({\n                    op: theOp,\n                    un: uArray1[n]\n                  });\n                }\n            } else {\n              uArray.push({\n                op: theOp,\n                un: uArray1[n]\n              });\n            }\n          } // end if there isn't a missing operator or unit code\n\n        } // end do for each element in uArray1\n\n      } // end if a processing error didn't occur in getParensUnit\n\n    } // end if the string did not begin with a '.' with no following digit\n\n\n    return [uArray, origString, endProcessing];\n  } // end _makeUnitsArray\n\n  /**\n   * Takes a unit string containing parentheses flags and returns the unit they\n   * represent.  Any text found before and/or after the parenthetical\n   * expression is checked to see if we can tell what the user meant and\n   * let them know what it should have been.  For example, 2(mg), which\n   * would resolve to 2mg, should be 2.mg.\n   *\n   * This should only be called from within this class (or by test code).\n   *\n   * @param pStr the string being parsed\n   * @param origString the original unit string passed in; passed through\n   *  to _getAnnonText if annotation flags are found in any text preceding\n   *  or following the parenthetical unit\n   * @returns\n   *   an array containing\n   *     the unit object; and\n   *     a flag indicating whether or not processing should be ended.\n   *       True indicates that the string was invalid and no corrections\n   *         (substitutions or suggestions) could be found;\n   *       False indicates that it was either valid or substitutions/suggestions\n   *          were made.\n   *   the this.retMsg_ array will be updated with any user messages\n   *     (informational, error or warning) generated by this or called methods\n   *   this this.parensUnits_ array contains the units that are acquired by\n   *     this method\n   * @throws an error if an invalid parensUnit index was found.  This is\n   *    a processing error.\n   */\n\n\n  _getParensUnit(pStr, origString) {\n    let endProcessing = false;\n    let retAry = [];\n    let retUnit = null;\n    let befAnnoText = null;\n    let aftAnnoText = null; // Get the location of the flags.  We're assuming there are only two\n    // because _processParens takes care of nesting.  By the time we get\n    // here we should not be looking a nested parens.  Also get any text\n    // before and after the parentheses.  Once we get the unit we update\n    // the input string with the unit's csCode_, which will wipe out any\n    // before and after text\n\n    let psIdx = pStr.indexOf(this.parensFlag_);\n    let befText = null;\n\n    if (psIdx > 0) {\n      befText = pStr.substr(0, psIdx - 1);\n    }\n\n    let peIdx = pStr.lastIndexOf(this.parensFlag_);\n    let aftText = null;\n\n    if (peIdx + this.pFlagLen_ < pStr.length) {\n      aftText = pStr.substr(peIdx + this.pFlagLen_);\n    } // Get the text between the flags\n\n\n    let pNumText = pStr.substring(psIdx + this.pFlagLen_, peIdx); // Make sure the index is a number, and if it is, get the unit from the\n    // this.parensUnits_ array\n\n    if (intUtils_.isNumericString(pNumText)) {\n      retUnit = this.parensUnits_[Number(pNumText)];\n\n      if (!intUtils_.isIntegerUnit(retUnit)) {\n        pStr = retUnit.csCode_;\n      } else {\n        pStr = retUnit;\n      }\n    } // If it's not a number, it's a programming error.  Throw a fit.\n    else {\n        throw new Error(`Processing error - invalid parens number ${pNumText} ` + `found in ${pStr}.`);\n      } // If there's something in front of the starting parentheses flag, check to\n    // see if it's a number or an annotation.\n\n\n    if (befText) {\n      // If it's a number, assume that multiplication was assumed\n      if (intUtils_.isNumericString(befText)) {\n        let nMag = retUnit.getProperty('magnitude_');\n        nMag *= Number(befText);\n        retUnit.assignVals({\n          'magnitude_': nMag\n        });\n        pStr = `${befText}.${pStr}`;\n        this.retMsg_.push(`${befText}${pStr} is not a valid UCUM code.\\n` + this.vcMsgStart_ + pStr + this.vcMsgEnd_);\n      } else {\n        if (befText.indexOf(this.braceFlag_) >= 0) {\n          let annoRet = this._getAnnoText(befText, origString); // if we found not only an annotation, but text before or after\n          // the annotation (remembering that this is all before the\n          // parentheses) throw an error - because we don't know what\n          // to do with it.  Could it be missing an operator?\n\n\n          if (annoRet[1] || annoRet[2]) {\n            throw new Error(`Text found before the parentheses (` + `${befText}) included an annotation along with other text ` + `for parenthetical unit ${retUnit.csCode_}`);\n          } // Otherwise put the annotation after the unit string and note\n          // the misplacement.\n\n\n          pStr += annoRet[0];\n          this.retMsg_.push(`The annotation ${annoRet[0]} before the unit ` + `code is invalid.\\n` + this.vcMsgStart_ + pStr + this.vcMsgEnd_);\n        } // else the text before the parentheses is neither a number nor\n        // an annotation.  If suggestions were NOT requested, record an\n        // error.\n        else if (!this.suggestions_) {\n            this.retMsg_.push(`${befText} preceding the unit code ${pStr} ` + `is invalid.  Unable to make a substitution.`);\n            endProcessing = true;\n          } // otherwise try for suggestions\n          else {\n              let suggestStat = this._getSuggestions(befText);\n\n              endProcessing = suggestStat !== 'succeeded';\n            } // end if a brace was found or, if not, suggestions were not or\n        // were requested\n\n      } // end if text preceding the parentheses was not a number\n\n    } // end if there was text before the parentheses\n    // Process any text after the parentheses\n\n\n    if (aftText) {\n      // if it's an annotation, get it and add it to the pStr\n      if (aftText.indexOf(this.braceFlag_) >= 0) {\n        let annoRet = this._getAnnoText(aftText, origString); // if we found not only an annotation, but text before or after\n        // the annotation (remembering that this is all after the\n        // parentheses) throw an error - because we don't know what\n        // to do with it.  Could it be missing an operator?\n\n\n        if (annoRet[1] || annoRet[2]) {\n          throw new Error(`Text found after the parentheses (` + `${aftText}) included an annotation along with other text ` + `for parenthetical unit ${retUnit.csCode_}`);\n        } // Otherwise put the annotation after the unit string - no message\n        // needed.\n\n\n        pStr += annoRet[0];\n      } // Otherwise check to see if it's an exponent.  If so, warn the\n      // user that it's not valid - but try it anyway\n      else {\n          if (intUtils_.isNumericString(aftText)) {\n            pStr += aftText;\n            retUnit = retUnit.power(Number(aftText));\n            this.retMsg_.push(`An exponent (${aftText}) following a parenthesis ` + `is invalid as of revision 1.9 of the UCUM Specification.\\n  ` + this.vcMsgStart_ + pStr + this.vcMsgEnd_);\n          } // else the text after the parentheses is neither a number nor\n          // an annotation.  If suggestions were NOT requested, record an\n          // error.\n          else if (!this.suggestions_) {\n              this.retMsg_.push(`Text ${aftText} following the unit code ${pStr} ` + `is invalid.  Unable to make a substitution.`);\n              endProcessing = true;\n            } // otherwise try for suggestions\n            else {\n                let suggestStat = this._getSuggestions(befText);\n\n                endProcessing = suggestStat !== 'succeeded';\n              } // end if text following the parentheses not an exponent\n\n        } // end if text following the parentheses is not an annotation\n\n    } // end if there is text following the parentheses\n\n\n    if (!endProcessing) {\n      if (!retUnit) {\n        retUnit = new Unit({\n          'csCode_': pStr,\n          'magnitude_': 1,\n          'name_': pStr\n        });\n      } else if (intUtils_.isIntegerUnit(retUnit)) {\n        retUnit = new Unit({\n          'csCode_': retUnit,\n          'magnitude_': retUnit,\n          'name_': retUnit\n        });\n      } else {\n        retUnit.csCode_ = pStr;\n      }\n    }\n\n    return [retUnit, endProcessing];\n  } // end _getParensUnit\n\n  /**\n   * Takes a unit string containing annotation flags and returns the\n   * annotation they represent.  This also returns any text found before\n   * the annotation and any found after the annotation.\n   *\n   * This should only be called from within this class (or by test code).\n   * NEEDS FIX in next branch to handle string with multiple annotations.\n   *\n   * @param pStr the string being parsed\n   * @param origString the original string being parsed; used in error msg\n   *  thrown for an invalid index to the annotations array\n   * @returns\n   *  an array containing\n   *    the annotation for the pStr;\n   *    any text found before the annotation; and\n   *    any text found after the annotation.\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   * the this.annotations_ array is used as the source for the annotations text\n   * @throws an error if for a processing error - an invalid annotation index.\n   */\n\n\n  _getAnnoText(pStr, origString) {\n    // if the starting braces flag is not at index 0, get the starting\n    // text and the adjust the pStr to omit it.\n    let asIdx = pStr.indexOf(this.braceFlag_);\n    let startText = asIdx > 0 ? pStr.substring(0, asIdx) : null;\n\n    if (asIdx !== 0) {\n      pStr = pStr.substr(asIdx);\n    } // Get the location of the end flag and, if text follows it, get the text\n\n\n    let aeIdx = pStr.indexOf(this.braceFlag_, 1);\n    let endText = aeIdx + this.bFlagLen_ < pStr.length ? pStr.substr(aeIdx + this.bFlagLen_) : null; // Get the index of the annotation in this.annotations_.\n    // Check it to make sure it's valid, and if not, throw an error\n\n    let idx = pStr.substring(this.bFlagLen_, aeIdx);\n    let idxNum = Number(idx);\n\n    if (!intUtils_.isNumericString(idx) || idxNum >= this.annotations_.length) {\n      throw new Error(`Processing Error - invalid annotation index ${idx} found ` + `in ${pStr} that was created from ${origString}`);\n    } // Replace the flags and annotation index with the annotation expression\n\n\n    pStr = this.annotations_[idxNum];\n    return [pStr, startText, endText];\n  } // end _getAnnoText\n\n  /**\n   * Takes a unit string and looks for suggested units.  This should be\n   * called for unit strings that cannot be resolved to unit codes.  The\n   * string is searched for in the synonyms table found in the UnitTables\n   * class.  That table includes all synonyms and unit names for the units\n   * in the unit data table.\n   *\n   * @param pStr the string being parsed\n   * @returns an object that contains an element named 'status', whose\n   *  value indicates the status of the request:\n   *   'succeeded' indicates that synonyms were found;\n   *   'failed' indicates that no synonyms were found; or\n   *   'error' which indicates that an error occurred\n   *\n   * the this.retMsg_ array will be updated with a message indicating whether\n   *  or not synonyms/suggestions  were found\n   * the this.suggestions_ array will be updated with a hash (added to the\n   *   array if it already contains others) that contains three elements:\n   *   'msg' which is a message indicating what unit expression the\n   *      suggestions are for;\n   *   'invalidUnit' which is the unit expression the suggestions are for; and\n   *   'units' which is an array of data for each suggested unit found.\n   *       Each array will contain the unit code, the unit name and the\n   *       unit guidance (if any).\n   */\n\n\n  _getSuggestions(pStr) {\n    let retObj = intUtils_.getSynonyms(pStr);\n\n    if (retObj['status'] === 'succeeded') {\n      let suggSet = {};\n      suggSet['msg'] = `${pStr} is not a valid UCUM code.  We found possible ` + `units that might be what was meant:`;\n      suggSet['invalidUnit'] = pStr;\n      let synLen = retObj['units'].length;\n      suggSet['units'] = [];\n\n      for (let s = 0; s < synLen; s++) {\n        let unit = retObj['units'][s];\n        let unitArray = [unit['code'], unit['name'], unit['guidance']];\n        suggSet['units'].push(unitArray);\n      }\n\n      this.suggestions_.push(suggSet);\n    } else {\n      this.retMsg_.push(`${pStr} is not a valid UCUM code.  No alternatives ` + `were found.`);\n    }\n\n    return retObj['status'];\n  } // end getSuggestions\n\n  /**\n   * Creates a unit object from a string defining one unit.  The string\n   * should consist of a unit code for a unit already defined (base or\n   * otherwise).  It may include a prefix and an exponent, e.g., cm2\n   * (centimeter squared).  This should only be called from within this\n   * class (or by test code).\n   *\n   * @params uCode the string defining the unit\n   * @param origString the original string to be parsed; used to provide\n   *  context for messages\n   * @returns\n   *  an array containing:\n   *    a unit object, or null if there were problems creating the unit; and\n   *    the origString passed in, which may be updated if a unit name was\n   *    translated to a unit code.\n   *\n   *  the this.retMsg_ array will be updated with any user messages\n   *    (informational, error or warning) generated by this or called methods\n   *  the this.suggestions_ array will be populated if no unit (with or without\n   *    substitutions) could be found and suggestions were requested\n   */\n\n\n  _makeUnit(uCode, origString) {\n    // First try the code just as is, without looking for annotations,\n    // prefixes, exponents, or elephants.\n    let retUnit = this.utabs_.getUnitByCode(uCode);\n\n    if (retUnit) {\n      retUnit = retUnit.clone();\n    } // If we found it, we're done.  No need to parse for those elephants (or\n    // other stuff).\n    else if (uCode.indexOf(this.braceFlag_) >= 0) {\n        let getAnnoRet = this._getUnitWithAnnotation(uCode, origString);\n\n        retUnit = getAnnoRet[0];\n\n        if (retUnit) {\n          origString = getAnnoRet[1];\n        } // If a unit is not found, retUnit will be returned null and\n        // the this.retMsg_ array will contain a message describing the problem.\n        // If a unit is found, of course, all is good. So ... nothing left\n        // to see here, move along.\n\n      } // end if the uCode includes an annotation\n      else {\n          // So we didn't find a unit for the full uCode or for one with\n          // annotations.  Try looking for a unit that uses a carat (^)\n          // instead of an asterisk (*)\n          if (uCode.indexOf('^') > -1) {\n            let tryCode = uCode.replace('^', '*');\n            retUnit = this.utabs_.getUnitByCode(tryCode);\n\n            if (retUnit) {\n              retUnit = retUnit.clone();\n              retUnit.csCode_ = retUnit.csCode_.replace('*', '^');\n              retUnit.ciCode_ = retUnit.ciCode_.replace('*', '^');\n            }\n          } // If that didn't work, check to see if it should have brackets\n          // around it (uCode = degF when it should be [degF]\n\n\n          if (!retUnit) {\n            let addBrackets = '[' + uCode + ']';\n            retUnit = this.utabs_.getUnitByCode(addBrackets);\n\n            if (retUnit) {\n              retUnit = retUnit.clone();\n              origString = origString.replace(uCode, addBrackets);\n              this.retMsg_.push(`${uCode} is not a valid unit expression, but ` + `${addBrackets} is.\\n` + this.vcMsgStart_ + `${addBrackets} (${retUnit.name_})${this.vcMsgEnd_}`);\n            } // end if we found the unit after adding brackets\n\n          } // end trying to add brackets\n          // If we didn't find it, try it as a name\n\n\n          if (!retUnit) {\n            let retUnitAry = this.utabs_.getUnitByName(uCode);\n\n            if (retUnitAry && retUnitAry.length > 0) {\n              retUnit = retUnitAry[0].clone();\n              let mString = 'The UCUM code for ' + uCode + ' is ' + retUnit.csCode_ + '.\\n' + this.vcMsgStart_ + retUnit.csCode_ + this.vcMsgEnd_;\n              let dupMsg = false;\n\n              for (let r = 0; r < this.retMsg_.length && !dupMsg; r++) dupMsg = this.retMsg_[r] === mString;\n\n              if (!dupMsg) this.retMsg_.push(mString);\n              let rStr = new RegExp('(^|[.\\/({])(' + uCode + ')($|[.\\/)}])');\n              let res = origString.match(rStr);\n              origString = origString.replace(rStr, res[1] + retUnit.csCode_ + res[3]);\n              uCode = retUnit.csCode_;\n            }\n          } // If we still don't have a unit, try assuming a modifier (prefix and/or\n          // exponent) and look for a unit without the modifier\n\n\n          if (!retUnit) {\n            // Well, first see if it's one of the special units.  If so,\n            // replace the placeholder text with the actual unit string, keeping\n            // whatever text (probably a prefix) goes with the unit string.\n            let sUnit = null;\n\n            for (sUnit in Ucum.specUnits_) {\n              if (uCode.includes(Ucum.specUnits_[sUnit])) uCode = uCode.replace(Ucum.specUnits_[sUnit], sUnit);\n            }\n\n            retUnit = this.utabs_.getUnitByCode(uCode);\n            if (retUnit) retUnit = retUnit.clone();\n          }\n\n          if (!retUnit) {\n            let origCode = uCode;\n            let origUnit = null;\n            let exp = null;\n            let pfxCode = null;\n            let pfxObj = null;\n            let pfxVal = null;\n            let pfxExp = null; // Look first for an exponent.  If we got one, separate it out and\n            // try to get the unit again\n\n            let codeAndExp = this._isCodeWithExponent(uCode);\n\n            if (codeAndExp) {\n              uCode = codeAndExp[0];\n              exp = codeAndExp[1];\n              origUnit = this.utabs_.getUnitByCode(uCode);\n            } // If we still don't have a unit, separate out the prefix, if any,\n            // and try without it.\n\n\n            if (!origUnit) {\n              // Try for a single character prefix first.\n              pfxCode = uCode.charAt(0);\n              pfxObj = this.pfxTabs_.getPrefixByCode(pfxCode); // if we got a prefix, get its info and remove it from the unit code\n\n              if (pfxObj) {\n                pfxVal = pfxObj.getValue();\n                pfxExp = pfxObj.getExp();\n                let pCodeLen = pfxCode.length;\n                uCode = uCode.substr(pCodeLen); // try again for the unit\n\n                origUnit = this.utabs_.getUnitByCode(uCode); // If we still don't have a unit, see if the prefix could be the\n                // two character \"da\" (deka) prefix.  That's the only prefix with\n                // two characters, and without this check it's interpreted as \"d\"\n                // (deci) and the \"a\" is considered part of the unit code.\n\n                if (!origUnit && pfxCode == 'd' && uCode.substr(0, 1) == 'a') {\n                  pfxCode = 'da';\n                  pfxObj = this.pfxTabs_.getPrefixByCode(pfxCode);\n                  pfxVal = pfxObj.getValue();\n                  uCode = uCode.substr(1); // try one more time for the unit\n\n                  origUnit = this.utabs_.getUnitByCode(uCode);\n                }\n              } // end if we found a prefix\n\n            } // end if we didn't get a unit after removing an exponent\n            // If we still haven't found anything, we're done looking.\n            // (We tried with the full unit string, with the unit string\n            // without the exponent, the unit string without a prefix,\n            // common errors, etc. That's all we can try).\n\n\n            if (!origUnit) {\n              retUnit = null; // BUT if the user asked for suggestions, at least look for them\n\n              if (this.suggestions_) {\n                let suggestStat = this._getSuggestions(origCode);\n              } else {\n                this.retMsg_.push(`${origCode} is not a valid UCUM code.`);\n              }\n            } else {\n              // Otherwise we found a unit object.  Clone it and then apply the\n              // prefix and exponent, if any, to it.  And remove the guidance.\n              retUnit = origUnit.clone();\n              retUnit.guidance_ = '';\n              let theDim = retUnit.getProperty('dim_');\n              let theMag = retUnit.getProperty('magnitude_');\n              let theName = retUnit.getProperty('name_');\n              let theCiCode = retUnit.getProperty('ciCode_');\n              let thePrintSymbol = retUnit.getProperty('printSymbol_'); // If there is an exponent for the unit, apply it to the dimension\n              // and magnitude now\n\n              if (exp) {\n                exp = parseInt(exp);\n                let expMul = exp;\n                if (theDim) theDim = theDim.mul(exp);\n                theMag = Math.pow(theMag, exp);\n                retUnit.assignVals({\n                  'magnitude_': theMag\n                }); // If there is also a prefix, apply the exponent to the prefix.\n\n                if (pfxObj) {\n                  // if the prefix base is 10 it will have an exponent.  Multiply\n                  // the current prefix exponent by the exponent for the unit\n                  // we're working with.  Then raise the prefix value to the level\n                  // defined by the exponent.\n                  if (pfxExp) {\n                    expMul *= pfxObj.getExp();\n                    pfxVal = Math.pow(10, expMul);\n                  } // If the prefix base is not 10, it won't have an exponent.\n                  // At the moment I don't see any units using the prefixes\n                  // that aren't base 10.   But if we get one the prefix value\n                  // will be applied to the magnitude (below) if the unit does\n                  // not have a conversion function, and to the conversion prefix\n                  // if it does.\n\n                } // end if there's a prefix as well as the exponent\n\n              } // end if there's an exponent\n              // Now apply the prefix, if there is one, to the conversion\n              // prefix or the magnitude\n\n\n              if (pfxObj) {\n                if (retUnit.cnv_) {\n                  retUnit.assignVals({\n                    'cnvPfx_': pfxVal\n                  });\n                } else {\n                  theMag *= pfxVal;\n                  retUnit.assignVals({\n                    'magnitude_': theMag\n                  });\n                }\n              } // if we have a prefix and/or an exponent, add them to the unit\n              // attributes - name, csCode, ciCode and print symbol\n\n\n              let theCode = retUnit.csCode_;\n\n              if (pfxObj) {\n                theName = pfxObj.getName() + theName;\n                theCode = pfxCode + theCode;\n                theCiCode = pfxObj.getCiCode() + theCiCode;\n                thePrintSymbol = pfxObj.getPrintSymbol() + thePrintSymbol;\n                retUnit.assignVals({\n                  'name_': theName,\n                  'csCode_': theCode,\n                  'ciCode_': theCiCode,\n                  'printSymbol_': thePrintSymbol\n                });\n              }\n\n              if (exp) {\n                let expStr = exp.toString();\n                retUnit.assignVals({\n                  'name_': theName + '<sup>' + expStr + '</sup>',\n                  'csCode_': theCode + expStr,\n                  'ciCode_': theCiCode + expStr,\n                  'printSymbol_': thePrintSymbol + '<sup>' + expStr + '</sup>'\n                });\n              }\n            } // end if an original unit was found (without prefix and/or exponent)\n\n          } // end if we didn't get a unit for the full unit code (w/out modifiers)\n\n        } // end if we didn't find the unit on the first try, before parsing\n\n\n    return [retUnit, origString];\n  } // end _makeUnit\n\n  /**\n   * This method handles unit creation when an annotation is included\n   * in the unit string.  This basically isolates and retrieves the\n   * annotation and then calls _makeUnit to try to get a unit from\n   * any text that precedes or follows the annotation.\n   *\n   * @param uCode the string defining the unit\n   * @param origString the original full string submitted to parseString\n   * @returns the unit object found, or null if one could not be found\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   */\n\n\n  _getUnitWithAnnotation(uCode, origString) {\n    let retUnit = null; // Get the annotation and anything that precedes or follows it.\n\n    let annoRet = this._getAnnoText(uCode, origString);\n\n    let annoText = annoRet[0];\n    let befAnnoText = annoRet[1];\n    let aftAnnoText = annoRet[2]; // Add the warning about annotations - just once.\n\n    if (this.bracesMsg_ && !this.retMsg_.includes(this.bracesMsg_)) this.retMsg_.push(this.bracesMsg_); // If there's no text before or after the annotation, it's probably\n    // something that should be interpreted as a 1, e.g., {KCT'U}.\n    // HOWEVER, it could also be a case where someone used braces instead\n    // of brackets, e.g., {degF} instead of [degF].  Check for that before\n    // we assume it should be a 1.\n\n    let msgLen = this.retMsg_.length;\n\n    if (!befAnnoText && !aftAnnoText) {\n      let tryBrackets = '[' + annoText.substring(1, annoText.length - 1) + ']';\n\n      let mkUnitRet = this._makeUnit(tryBrackets, origString); // If we got back a unit, assign it to the returned unit, and add\n      // a message to advise the user that brackets should enclose the code\n\n\n      if (mkUnitRet[0]) {\n        retUnit = mkUnitRet[0];\n        origString = origString.replace(annoText, tryBrackets);\n        this.retMsg_.push(`${annoText} is not a valid unit expression, but ` + `${tryBrackets} is.\\n` + this.vcMsgStart_ + `${tryBrackets} (${retUnit.name_})${this.vcMsgEnd_}`);\n      } // Otherwise assume that this should be interpreted as a 1\n      else {\n          // remove error message generated for trybrackets\n          if (this.retMsg_.length > msgLen) {\n            this.retMsg_.pop();\n          }\n\n          uCode = 1;\n          retUnit = 1;\n        }\n    } // end if it's only an annotation\n    else {\n        // if there's text before and no text after, assume the text before\n        // the annotation is the unit code (with an annotation following it).\n        // Call _makeUnit for the text before the annotation.\n        if (befAnnoText && !aftAnnoText) {\n          // make sure that what's before the annoText is not a number, e.g.,\n          // /100{cells}.  But f it is a number, just set the return unit to\n          // the number.\n          if (intUtils_.isIntegerUnit(befAnnoText)) {\n            retUnit = befAnnoText;\n          } // Otherwise try to find a unit\n          else {\n              let mkUnitRet = this._makeUnit(befAnnoText, origString); // if a unit was returned\n\n\n              if (mkUnitRet[0]) {\n                retUnit = mkUnitRet[0];\n                retUnit.csCode_ += annoText;\n                origString = mkUnitRet[1];\n              } // Otherwise add a not found message\n              else {\n                  this.retMsg_.push(`Unable to find a unit for ${befAnnoText} that ` + `precedes the annotation ${annoText}.`);\n                }\n            }\n        } // else if there's only text after the annotation, try for a unit\n        // from the after text and assume the user put the annotation in\n        // the wrong place (and tell them)\n        else if (!befAnnoText && aftAnnoText) {\n            // Again, test for a number and if it is a number, set the return\n            // unit to the number.\n            if (intUtils_.isIntegerUnit(aftAnnoText)) {\n              retUnit = aftAnnoText + annoText;\n              this.retMsg_.push(`The annotation ${annoText} before the ``${aftAnnoText} is invalid.\\n` + this.vcMsgStart_ + retUnit + this.vcMsgEnd_);\n            } else {\n              let mkUnitRet = this._makeUnit(aftAnnoText, origString);\n\n              if (mkUnitRet[0]) {\n                retUnit = mkUnitRet[0];\n                retUnit.csCode_ += annoText;\n                origString = retUnit.csCode_;\n                this.retMsg_.push(`The annotation ${annoText} before the unit ` + `code is invalid.\\n` + this.vcMsgStart_ + retUnit.csCode_ + this.vcMsgEnd_);\n              } // Otherwise add a not found message\n              else {\n                  this.retMsg_.push(`Unable to find a unit for ${befAnnoText} that ` + `follows the annotation ${annoText}.`);\n                }\n            }\n          } // else it's got text before AND after the annotation.  Now what?\n          // For now this is an error.  This may be a case of a missing\n          // operator but that is not handled yet.\n          else {\n              this.retMsg_.push(`Unable to find a unit for ${befAnnoText}${annoText}` + `${aftAnnoText}.\\nWe are not sure how to interpret text both before ` + `and after the annotation.  Sorry`);\n            }\n      } // else if there's text before/and or after the annotation\n\n\n    return [retUnit, origString];\n  } // end _getUnitWithAnnotations\n\n  /**\n   * Performs unit arithmetic for the units in the units array.  That array\n   * contains units/numbers and the operators (division or multiplication) to\n   * be performed on each unit/unit or unit/number pair in the array.  This\n   * should only be called from within this class (or by test code).\n   *\n   * @params uArray the array that contains the units, numbers and operators\n   *  derived from the unit string passed in to parseString\n   * @param origString the original string to be parsed; used to provide\n   *  context for messages\n   *\n   * @returns a single unit object that is the result of the unit arithmetic\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   */\n\n\n  _performUnitArithmetic(uArray, origString) {\n    let finalUnit = uArray[0]['un'];\n\n    if (intUtils_.isIntegerUnit(finalUnit)) {\n      finalUnit = new Unit({\n        'csCode_': finalUnit,\n        'magnitude_': Number(finalUnit),\n        'name_': finalUnit\n      });\n    }\n\n    let uLen = uArray.length;\n    let endProcessing = false; // Perform the arithmetic for the units, starting with the first 2 units.\n    // We only need to do the arithmetic if we have more than one unit.\n\n    for (let u2 = 1; u2 < uLen && !endProcessing; u2++) {\n      let nextUnit = uArray[u2]['un'];\n\n      if (intUtils_.isIntegerUnit(nextUnit)) {\n        nextUnit = new Unit({\n          'csCode_': nextUnit,\n          'magnitude_': Number(nextUnit),\n          'name_': nextUnit\n        });\n      }\n\n      if (nextUnit === null || typeof nextUnit !== 'number' && !nextUnit.getProperty) {\n        let msgString = `Unit string (${origString}) contains unrecognized ` + 'element';\n\n        if (nextUnit) {\n          msgString += ` (${this.openEmph_}${nextUnit.toString()}` + `${this.closeEmph_})`;\n        }\n\n        msgString += '; could not parse full string.  Sorry';\n        this.retMsg_.push(msgString);\n        endProcessing = true;\n      } else {\n        try {\n          // Is the operation division?\n          let thisOp = uArray[u2]['op'];\n          let isDiv = thisOp === '/'; // Perform the operation.  Both the finalUnit and nextUnit\n          // are unit objects.\n\n          isDiv ? finalUnit = finalUnit.divide(nextUnit) : finalUnit = finalUnit.multiplyThese(nextUnit);\n        } catch (err) {\n          this.retMsg_.unshift(err.message);\n          endProcessing = true;\n          finalUnit = null;\n        }\n      } // end if we have another valid unit/number to process\n\n    } // end do for each unit after the first one\n\n\n    return finalUnit;\n  } // end _performUnitArithmetic\n\n  /**\n   * This tests a string to see if it starts with characters and ends with\n   * digits.  This is used to test for an exponent on a UCUM code (or what\n   * we think might be a UCUM code).  This is broken out to a separate\n   * function so that the regular expression can be verified to provide the\n   * results we expect, in case someone changes it.  (Per Paul Lynch)\n   * See \"Test _isCodeWithExponent method\" in testUnitString.spec.js\n   *\n   * This particular regex has been tweaked several times.  This one\n   * works with the following test strings:\n   * \"m[H2O]-21 gives [\"m[H2O]-21\", \"m[H2O]\", \"-21\"]\n   * \"m[H2O]+21 gives [\"m[H2O]+21\", \"m[H2O]\", \"+21\"]\n   * \"m[H2O]21 gives [\"m[H2O]-21\", \"m[H2O]\", \"21\"]\n   * \"s2\" gives [\"s2\", \"s, \"2\"]\n   * \"kg\" gives null\n   * \"m[H2O]\" gives null\n   * \"m[H2O]23X\" gives null\n   *\n   * @params uCode the code being tested\n   * @returns an array containing: (1) the code without the exponent (or\n   *  trailing number); and (2) the exponent/trailing number.  Returns null\n   *  if there is no trailing number or something follows the trailing\n   *  number, or if the first part is not characters.\n   */\n\n\n  _isCodeWithExponent(uCode) {\n    let ret = [];\n    let res = uCode.match(/(^[^\\-\\+]+?)([\\-\\+\\d]+)$/); // If we got a return with an exponent, separate the exponent from the\n    // unit and return both (as separate values)\n\n    if (res && res[2] && res[2] !== \"\") {\n      ret.push(res[1]);\n      ret.push(res[2]);\n    } // end if we got an exponent\n    else {\n        ret = null;\n      }\n\n    return ret;\n  } // end _isCodeWithExponent\n\n\n} // end class UnitString\n\n/**\n *  This function exists ONLY until the original UnitString constructor\n *  is called for the first time.  It's defined here in case getInstance\n *  is called before the constructor.   This calls the constructor.\n *\n *  The constructor redefines the getInstance function to return the\n *  singleton UnitString object.  This is based on the UnitTables singleton\n *  implementation; see more detail in the UnitTables constructor description.\n *\n *  @return the singleton UnitString object.\n */\n\n\nexports.UnitString = UnitString;\n\nUnitString.getInstance = function () {\n  return new UnitString();\n};\n/*\n// Perform the first request for the object, to set the getInstance method.\nUnitString.getInstance();\n\n*/\n//# sourceMappingURL=unitString.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnitTables = void 0;\n\n/**\n * This class manages Hashtables that provide references to\n * defined units.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nvar Ucum = require('./config.js').Ucum;\n\nvar fs = require('fs');\n\nclass UnitTablesFactory {\n  /**\n   * Constructor.  This creates the empty unit tables (hashes) once. After the\n   * tables are created, it redefines this constructor to throw an error\n   * stating that the constructor is no longer available and that the\n   * getInstance function must be used.   Here's a description of the first\n   * and then all subsequent calls to this constructor.\n   *\n   * First call to constructor:\n   * 1. creates  OBJECT1\n   * 2. initializes attributes of OBJECT1\n   * 3. stores reference to OBJECT1.prototype in holdthis local variable\n   * 4. redefines OBJECT1 as a function that throws an error\n   * 5. defines the getInstance function (which is also defined outside of\n   *    the class definition - see below).\n   *\n   * All subsequent calls to constructor:\n   * 1. throw error message referring to getInstance\n   * 2. call getInstance, returns this - which is OBJECT1.\n   */\n  constructor() {\n    /**\n     * Tracks units by name\n     * @type hash - key is the name;\n     *              value is an array of references to the Unit objects\n     *              with the name.  More than one unit may have the same\n     *              name, e.g., \"second\", which is shared by the base unit\n     *              with the code = \"s\" and the unit with code = \"'\".\n     */\n    this.unitNames_ = {};\n    /**\n     * Tracks units by code using case-sensitive version.\n     *\n     * @type hash - key is the code;\n     *              value is the reference to the Unit object.  Codes must\n     *              be unique.\n     */\n\n    this.unitCodes_ = {};\n    /**\n     * Keeps track of the order in which units are defined.  The order is\n     * important because unit definitions build on previous definitions.\n     *\n     * @type {Array}\n     */\n\n    this.codeOrder_ = [];\n    /**\n     * Tracks units by unit strings, e.g., cm-1\n     *\n     * @type hash - key is the unit string\n     *              value is an array of unit objects with that ciUnitString.\n     */\n\n    this.unitStrings_ = {};\n    /**\n     * Tracks units by Dimension vector\n     *\n     * @type hash - key is the dimension vector (not the object, just the\n     *              vector);\n     *              value is an array of references to the Unit objects\n     *              with that vector.  More than one unit may have the same\n     *              unit vector, and this can be used to provide a list\n     *              of commensurable units.\n     */\n\n    this.unitDimensions_ = {};\n    /**\n     * Maps synonyms to units.   Not built until first requested.\n     *\n     * @type hash - key is the synonym\n     *              value is an array of references to Unit objects that\n     *              include that synonym.\n     */\n\n    this.unitSynonyms_ = {};\n    /*\n     * Holds onto the index of the index of the dimension vector flag for\n     * the base mass unit (gram).  This is set when the base unit (gram) is\n     * created, and is stored here so that it doesn't have to be found\n     * over and over again to try to determine whether or not a unit is\n     * mass-based (for mole<->mass conversions)\n     *\n     * @type integer\n     */\n\n    this.massDimIndex_ = 0;\n  }\n  /**\n   * Provides the number of unit objects written to the tables, using the\n   * codes table since codes must be unique.\n   *\n   * @returns count of the number of unit objects in the unitCodes_ table.\n   */\n\n\n  unitsCount() {\n    return Object.keys(this.unitCodes_).length;\n  }\n  /**\n   * Adds a Unit object to the tables.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   * @throws passes on an error if one is thrown by the called functions for\n   *  a problem with the unit code or unit name\n   */\n\n\n  addUnit(theUnit) {\n    let uName = theUnit['name_'];\n\n    if (uName) {\n      this.addUnitName(theUnit);\n    }\n\n    this.addUnitCode(theUnit);\n    this.addUnitString(theUnit);\n\n    try {\n      if (theUnit['dim_'].getProperty('dimVec_')) this.addUnitDimension(theUnit);\n    } catch (err) {// do nothing - throws error if the property is null\n      // and that's OK here.\n    }\n  } // end addUnit\n\n  /**\n   * Adds a Unit object to the unitNames_ table.  More than one unit\n   * can have the same name, e.g., the two units with the name \"second\",\n   * where the code for one of them is 's' and the code for the other is\n   * \"'\".  Because of this, an array of unit objects is stored for the\n   * name.  In most cases it will be an array of one object, but this\n   * clarifies that there may be more than one.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   * @throws an error if the unit has no name\n   */\n\n\n  addUnitName(theUnit) {\n    let uName = theUnit['name_'];\n\n    if (uName) {\n      if (this.unitNames_[uName]) this.unitNames_[uName].push(theUnit);else this.unitNames_[uName] = [theUnit];\n    } else throw new Error('UnitTables.addUnitName called for a unit with no name.  ' + `Unit code = ${theUnit['csCode_']}.`);\n  } // end addUnitName\n\n  /**\n   * Adds a Unit object to the unitCodes_, unitUcCodes_, unitLcCodes_ and\n   * codeOrder_ tables.  This also sets the mass dimension index when the\n   * base mass unit (gram) is read.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   * @throws an error if the unitCodes_ table already contains a unit with\n   *  the code\n   */\n\n\n  addUnitCode(theUnit) {\n    let uCode = theUnit['csCode_'];\n\n    if (uCode) {\n      if (this.unitCodes_[uCode]) throw new Error(`UnitTables.addUnitCode called, already contains entry for ` + `unit with code = ${uCode}`);else {\n        this.unitCodes_[uCode] = theUnit;\n        this.codeOrder_.push(uCode);\n\n        if (uCode == 'g') {\n          let dimVec = theUnit.dim_.dimVec_;\n          let d = 0;\n\n          for (; d < dimVec.length && dimVec[d] < 1; d++);\n\n          this.massDimIndex_ = d;\n        }\n      }\n    } else throw new Error('UnitTables.addUnitCode called for unit that has ' + 'no code.');\n  } // end addUnitCode\n\n  /**\n   * Adds a unit object to the unitStrings_ table.  More than one unit\n   * can have the same string, so an array of unit objects is stored\n   * for the string.  The unit string is the string that creates a non-base\n   * unit, e.g., a Newton has a unit code of N, a name of Newton, and a\n   * unitString of kg.m/s2.\n   *\n   * If the unit has no string, nothing is stored and no error is reported.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   */\n\n\n  addUnitString(theUnit) {\n    let uString = null;\n    if (Ucum.caseSensitive_ == true) uString = theUnit['csUnitString_'];else uString = theUnit['ciUnitString_'];\n\n    if (uString) {\n      let uEntry = {\n        mag: theUnit['baseFactorStr_'],\n        unit: theUnit\n      };\n      if (this.unitStrings_[uString]) this.unitStrings_[uString].push(uEntry);else this.unitStrings_[uString] = [uEntry];\n    }\n  } // end addUnitString\n\n  /**\n   * Adds a Unit object to the unitDimensions_ table.  More than one unit\n   * can have the same dimension (commensurable units have the same dimension).\n   * Because of this, an array of unit objects is stored for the\n   * dimension.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   * @throws an error if the unit has no dimension\n   */\n\n\n  addUnitDimension(theUnit) {\n    let uDim = theUnit['dim_'].getProperty('dimVec_');\n\n    if (uDim) {\n      if (this.unitDimensions_[uDim]) this.unitDimensions_[uDim].push(theUnit);else this.unitDimensions_[uDim] = [theUnit];\n    } else throw new Error('UnitTables.addUnitDimension called for a unit with no dimension.  ' + `Unit code = ${theUnit['csCode_']}.`);\n  } // end addUnitDimension\n\n  /**\n   * Builds the unitSynonyms_ table. This is called the first time the\n   * getUnitsBySynonym method is called.  The table/hash contains each word\n   * (once) from each synonym as well as each word from each unit name.\n   *\n   * Hash keys are the words.  Hash values are an array of unit codes for\n   * each unit that has that word in its synonyms or name.\n   *\n   * @returns nothing\n   */\n\n\n  buildUnitSynonyms() {\n    for (let code in this.unitCodes_) {\n      let theUnit = this.unitCodes_[code];\n      let uSyns = theUnit.synonyms_; // If the current unit has synonyms, process each synonym (often multiples)\n\n      if (uSyns) {\n        let synsAry = uSyns.split(';');\n\n        if (synsAry[0] !== '') {\n          let aLen = synsAry.length;\n\n          for (let a = 0; a < aLen; a++) {\n            let theSyn = synsAry[a].trim(); // call addSynonymCodes to process each word in the\n            // synonym, e.g., \"British fluid ounces\"\n\n            this.addSynonymCodes(code, theSyn);\n          } // end do for each synonym\n\n        } // end if the current unit has a non-null synonym attribute\n\n      } // end if the unit has any synonyms\n      // Now call addSynonymCodes to process each word in the unit's name\n\n\n      this.addSynonymCodes(code, theUnit.name_);\n    } // end do for each unit\n\n  } // end buildUnitSynonyms\n\n  /**\n   * Adds unit code entries to the synonyms table for a string containing\n   * one or more words to be considered as synonyms.\n   *\n   * @param theCode the unit code to be connected to the synonyms\n   * @param theSynonyms a string containing one or more words to be\n   *  considered synonyms (and thus to be added to the unitSynonyms hash).\n   */\n\n\n  addSynonymCodes(theCode, theSynonyms) {\n    let words = theSynonyms.split(' ');\n    let wLen = words.length;\n\n    for (let w = 0; w < wLen; w++) {\n      let word = words[w]; // if there is already a synonyms entry for the word,\n      // get the array of unit codes currently assigned to\n      // the word and add the code for the current word to\n      // the synonyms array if it's not already there.\n\n      if (this.unitSynonyms_[word]) {\n        let synCodes = this.unitSynonyms_[word];\n\n        if (synCodes.indexOf(theCode) === -1) {\n          this.unitSynonyms_[word].push(theCode);\n        }\n      } // else there are no synonyms entry for the word.  Create a\n      // synonyms array for the word, setting it to contain the unit code.\n      else {\n          this.unitSynonyms_[word] = [theCode];\n        }\n    } // end do for each word in the synonyms being processed\n\n  } // end addSynonymCodes\n\n  /**\n   *  Returns a unit object with a case-sensitive code matching the\n   *  uCode parameter, or null if no unit is found with that code.\n   *\n   *  @param uCode the code of the unit to be returned\n   *  @returns the unit object or null if it is not found\n   */\n\n\n  getUnitByCode(uCode) {\n    let retUnit = null;\n\n    if (uCode) {\n      retUnit = this.unitCodes_[uCode];\n    }\n\n    return retUnit;\n  }\n  /**\n   *  Returns a array of unit objects based on the unit's name.  Usually this\n   *  will be an array of one, but there may be more, since unit names are\n   *  not necessarily unique.\n   *\n   *  @param uName the name of the unit to be returned.  If more than one\n   *  unit has the same name and you only want one specific unit, append the\n   *  csCode of the unit you want to the end of the name, separated by the\n   *  Ucum.codeSep_ value, e.g., inch - [in_i] vs. inch - [in_us].\n   *  @returns null if no unit was found for the specified name OR an array of\n   *  unit objects with the specified name.  Normally this will be an array\n   *  of one object.\n   *  @throws an error if no name is provided to search on\n   */\n\n\n  getUnitByName(uName) {\n    if (uName === null || uName === undefined) {\n      throw new Error('Unable to find unit by name because no name was provided.');\n    }\n\n    let sepPos = uName.indexOf(Ucum.codeSep_);\n    let uCode = null;\n\n    if (sepPos >= 1) {\n      uCode = uName.substr(sepPos + Ucum.codeSep_.length);\n      uName = uName.substr(0, sepPos);\n    }\n\n    let retUnits = this.unitNames_[uName];\n\n    if (retUnits) {\n      let uLen = retUnits.length;\n\n      if (uCode && uLen > 1) {\n        let i = 0;\n\n        for (; retUnits[i].csCode_ !== uCode && i < uLen; i++);\n\n        if (i < uLen) retUnits = [retUnits[i]];else {\n          retUnits = null;\n        }\n      } // end if we need to find both a name and a code\n\n    } // end if we got an array of units\n\n\n    return retUnits;\n  } // end getUnitByName\n\n  /**\n   *  Returns an array of unit objects with the specified unit string.\n   *  The array may contain one or more unit reference objects.\n   *  Or none, if no units have a matching unit string (which is not\n   *  considered an error)\n   *\n   *  @param name the name of the unit to be returned\n   *  @returns the array of unit references or null if none were found\n   */\n\n\n  getUnitByString(uString) {\n    let retAry = null;\n\n    if (uString) {\n      retAry = this.unitStrings_[uString];\n      if (retAry === undefined) retAry = null;\n    }\n\n    return retAry;\n  }\n  /**\n   *  Returns a array of unit objects based on the unit's dimension vector.\n   *\n   *  @param uName the dimension vector of the units to be returned.\n   *\n   *  @returns null if no unit was found for the specified vector OR an array of\n   *  one or more unit objects with the specified vector.\n   *  @throws an error if no vector is provided to search on\n   *  logs an error to the console if no unit is found\n   */\n\n\n  getUnitsByDimension(uDim) {\n    let unitsArray = null;\n\n    if (uDim === null || uDim === undefined) {\n      throw new Error('Unable to find unit by because no dimension ' + 'vector was provided.');\n    }\n\n    unitsArray = this.unitDimensions_[uDim];\n\n    if (unitsArray === undefined || unitsArray === null) {\n      console.log(`Unable to find unit with dimension = ${uDim}`);\n    }\n\n    return unitsArray;\n  } // end getUnitsByDimension\n\n  /**\n   *  Returns a array of unit objects that include the specified synonym.\n   *\n   *  @param uSyn the synonym of the units to be returned.\n   *\n   *  @returns an object with two of the following three elements:\n   *   'status' will be error, failed or succeeded\n   *   'msg' will be included for returns with status = error or failed and\n   *     will explain why the request did not return any units\n   *   'units' any array of unit objects with the specified synonym will be\n   *     returned for requests with status = succeeded\n   */\n\n\n  getUnitBySynonym(uSyn) {\n    let retObj = {};\n    let unitsArray = [];\n\n    try {\n      if (uSyn === null || uSyn === undefined) {\n        retObj['status'] = 'error';\n        throw new Error('Unable to find unit by synonym because no synonym ' + 'was provided.');\n      } // If this is the first request for a unit by synonym, build the hash map\n\n\n      if (Object.keys(this.unitSynonyms_).length === 0) {\n        this.buildUnitSynonyms();\n      }\n\n      let foundCodes = [];\n      foundCodes = this.unitSynonyms_[uSyn];\n\n      if (foundCodes) {\n        retObj['status'] = 'succeeded';\n        let fLen = foundCodes.length;\n\n        for (let f = 0; f < fLen; f++) {\n          unitsArray.push(this.unitCodes_[foundCodes[f]]);\n        }\n\n        retObj['units'] = unitsArray;\n      }\n\n      if (unitsArray.length === 0) {\n        retObj['status'] = 'failed';\n        retObj['msg'] = `Unable to find any units with synonym = ${uSyn}`;\n      }\n    } catch (err) {\n      retObj['msg'] = err.message;\n    }\n\n    return retObj;\n  } // end getUnitBySynonym\n\n  /**\n   * Gets a list of all unit names in the Unit tables\n   *\n   * @returns an array of the unit names\n   */\n\n\n  getAllUnitNames() {\n    return Object.keys(this.unitNames_);\n  } // end getAllUnitNames\n\n  /**\n   * Gets a list of all unit names in the tables.  Where more than one\n   * unit has the same name, the unit code, in parentheses, is appended\n   * to the end of the name.\n   *\n   * @returns {Array}\n   */\n\n\n  getUnitNamesList() {\n    let nameList = [];\n    let codes = Object.keys(this.unitCodes_);\n    codes.sort(this.compareCodes);\n    let uLen = codes.length;\n\n    for (let i = 0; i < uLen; i++) {\n      nameList[i] = codes[i] + Ucum.codeSep_ + this.unitCodes_[codes[i]].name_;\n    } // end do for each code\n\n\n    return nameList;\n  }\n  /*\n   * Returns the mass dimension index\n   * @returns this.massDimIndex_\n   */\n\n\n  getMassDimensionIndex() {\n    return this.massDimIndex_;\n  }\n  /**\n   * This provides a sort function for unit codes so that sorting ignores\n   * square brackets and case.\n   *\n   * @param a first value\n   * @param b second value\n   * @returns -1 if a is should fall before b; otherwise 1.\n   */\n\n\n  compareCodes(a, b) {\n    a = a.replace(/[\\[\\]]/g, '');\n    a = a.toLowerCase();\n    b = b.replace(/[\\[\\]]/g, '');\n    b = b.toLowerCase();\n    return a < b ? -1 : 1;\n  }\n  /**\n   * Gets a list of all unit codes in the Unit tables\n   *\n   * @returns an array of the unit names\n   */\n\n\n  getAllUnitCodes() {\n    return Object.keys(this.unitCodes_);\n  } // end getAllUnitNames\n\n  /**\n   * This is used to get all unit objects.  Currently it is used\n   * to get the objects to write to the json ucum definitions file\n   * that is used to provide prefix and unit definition objects for\n   * conversions and validations.\n   *\n   * @returns an array containing all unit objects, ordered by definition\n   * order\n   */\n\n\n  allUnitsByDef() {\n    let unitsList = [];\n    let uLen = this.codeOrder_.length;\n\n    for (let u = 0; u < uLen; u++) {\n      unitsList.push(this.getUnitByCode(this.codeOrder_[u]));\n    }\n\n    return unitsList;\n  } // end allUnitsByDef\n\n  /**\n   * This is used to get all unit objects, ordered by unit name.  Currently it\n   * is used to create a csv list of all units.\n   * @param sep separator character (or string) to be used to separate each\n   *  column in the output.  Optional, defaults to '|' if not specified.\n   *  (Used to use ; but the synonyms use that extensively).  Don't use a\n   *  comma or any other punctuation found in the output data.\n   * @returns a buffer containing all unit objects, ordered by name\n   * order\n   */\n\n\n  allUnitsByName(cols, sep) {\n    if (sep === undefined || sep === null) sep = '|';\n    let unitBuff = '';\n    let unitsList = this.getAllUnitNames();\n    let uLen = unitsList.length;\n    let cLen = cols.length;\n\n    for (let i = 0; i < uLen; i++) {\n      let nameRecs = this.getUnitByName(unitsList[i]);\n\n      for (let u = 0; u < nameRecs.length; u++) {\n        let rec = nameRecs[u];\n\n        for (let c = 0; c < cLen; c++) {\n          if (c > 0) unitBuff += sep;\n\n          if (cols[c] === 'dim_') {\n            if (rec.dim_ !== null && rec.dim_ !== undefined && rec.dim_.dimVec_ instanceof Array) unitBuff += '[' + rec.dim_.dimVec_.join(',') + ']';else unitBuff += '';\n          } else {\n            let cbuf = rec[cols[c]];\n            if (typeof cbuf === 'string') unitBuff += cbuf.replace(/[\\n\\r]/g, ' ');else unitBuff += cbuf;\n          }\n        } // end do for each column requested\n\n\n        unitBuff += '\\r\\n';\n      } // end do for each unit in the unit names array\n\n    }\n\n    return unitBuff;\n  } // end allUnitsByName\n\n  /**\n   * This creates a list of all units in the tables.  It uses the byCode\n   * table, and uses the codeOrder_ array to determine the order in which\n   * the units are listed.\n   *\n   * @param doLong boolean indicating how much to output.  If true, all data\n   *  from the unit objects is included.   If false, only a few major values\n   *  are included.\n   * @param sep separator character (or string) to be used to separate each\n   *  column in the output.  Optional, defaults to '|' if not specified.\n   *  (Used to use ; but the synonyms use that extensively).\n   * @returns {string} buffer containing all the listings\n   */\n\n\n  printUnits(doLong, sep) {\n    if (doLong === undefined) doLong = false;\n    if (sep === undefined) sep = '|';\n    let codeList = '';\n    let uLen = this.codeOrder_.length;\n    let unitString = 'csCode' + sep;\n\n    if (doLong) {\n      unitString += 'ciCode' + sep;\n    }\n\n    unitString += 'name' + sep;\n    if (doLong) unitString += 'isBase' + sep;\n    unitString += 'magnitude' + sep + 'dimension' + sep + 'from unit(s)' + sep + 'value' + sep + 'function' + sep;\n    if (doLong) unitString += 'property' + sep + 'printSymbol' + sep + 'synonyms' + sep + 'source' + sep + 'class' + sep + 'isMetric' + sep + 'variable' + sep + 'isSpecial' + sep + 'isAbitrary' + sep;\n    unitString += 'comment';\n    codeList = unitString + '\\n';\n\n    for (let u = 0; u < uLen; u++) {\n      let curUnit = this.getUnitByCode(this.codeOrder_[u]);\n      unitString = this.codeOrder_[u] + sep;\n\n      if (doLong) {\n        unitString += curUnit.getProperty('ciCode_') + sep;\n      }\n\n      unitString += curUnit.getProperty('name_') + sep;\n\n      if (doLong) {\n        if (curUnit.getProperty('isBase_')) unitString += 'true' + sep;else unitString += 'false' + sep;\n      }\n\n      unitString += curUnit.getProperty('magnitude_') + sep;\n      let curDim = curUnit.getProperty('dim_');\n\n      if (curDim) {\n        unitString += curDim.dimVec_ + sep;\n      } else {\n        unitString += 'null' + sep;\n      }\n\n      if (curUnit.csUnitString_) unitString += curUnit.csUnitString_ + sep + curUnit.baseFactor_ + sep;else unitString += 'null' + sep + 'null' + sep;\n      if (curUnit.cnv_) unitString += curUnit.cnv_ + sep;else unitString += 'null' + sep;\n\n      if (doLong) {\n        unitString += curUnit.getProperty('property_') + sep + curUnit.getProperty('printSymbol_') + sep + curUnit.getProperty('synonyms_') + sep + curUnit.getProperty('source_') + sep + curUnit.getProperty('class_') + sep + curUnit.getProperty('isMetric_') + sep + curUnit.getProperty('variable_') + sep + curUnit.getProperty('isSpecial_') + sep + curUnit.getProperty('isArbitrary_') + sep;\n      }\n\n      if (curUnit.defError_) unitString += 'problem parsing this one, deferred to later.';\n      codeList += unitString + '\\n';\n    }\n\n    return codeList;\n  }\n  /**\n   * This creates a list of the synonyms in the unitSynonyms hash.  It writes\n   * it in synonym order and in csv format, and includes the synonym, the number\n   * of units for the synonym, and the list of unit codes for the synonym.\n   * It uses | as a separator rather than a comma, to keep from interfering\n   * with the JSON output for the unit code arrays kept for each synonym.\n   *\n   * @returns outputs to a file named \"SynonymsList.txt'\n   */\n\n\n  printSynonyms() {\n    let sList = 'synonym|unit count|unit codes\\n';\n    let sKeys = Object.keys(this.unitSynonyms_).sort();\n    let sLen = sKeys.length;\n\n    for (let s = 0; s < sLen; s++) {\n      let sKey = sKeys[s];\n      let kLen = this.unitSynonyms_[sKey].length;\n      let codes = JSON.stringify(this.unitSynonyms_[sKey]);\n      codes = codes.substring(1, codes.length - 2);\n      sList += sKey + '|' + kLen + '|' + codes + '\\n';\n    }\n\n    fs.writeFileSync('SynonymsList.txt', sList, {\n      encoding: 'utf8',\n      mode: 0o666,\n      flag: 'w'\n    });\n  } // printSynonyms\n\n\n} // end UnitTablesFactory\n// Create a singleton instance and (to preserve the existing API) an object that\n// provides that instance via getInstance().\n\n\nvar unitTablesInstance = new UnitTablesFactory();\nconst UnitTables = {\n  getInstance: function () {\n    return unitTablesInstance;\n  }\n};\nexports.UnitTables = UnitTables;\n//# sourceMappingURL=unitTables.js.map\n","/* Copyright (c) 2017 Rod Vagg, MIT License */\n\nfunction AbstractChainedBatch (db) {\n  this._db = db\n  this._operations = []\n  this._written = false\n}\n\nAbstractChainedBatch.prototype._serializeKey = function (key) {\n  return this._db._serializeKey(key)\n}\n\nAbstractChainedBatch.prototype._serializeValue = function (value) {\n  return this._db._serializeValue(value)\n}\n\nAbstractChainedBatch.prototype._checkWritten = function () {\n  if (this._written) {\n    throw new Error('write() already called on this batch')\n  }\n}\n\nAbstractChainedBatch.prototype.put = function (key, value) {\n  this._checkWritten()\n\n  var err = this._db._checkKey(key, 'key')\n  if (err) { throw err }\n\n  key = this._serializeKey(key)\n  value = this._serializeValue(value)\n\n  this._put(key, value)\n\n  return this\n}\n\nAbstractChainedBatch.prototype._put = function (key, value) {\n  this._operations.push({ type: 'put', key: key, value: value })\n}\n\nAbstractChainedBatch.prototype.del = function (key) {\n  this._checkWritten()\n\n  var err = this._db._checkKey(key, 'key')\n  if (err) { throw err }\n\n  key = this._serializeKey(key)\n  this._del(key)\n\n  return this\n}\n\nAbstractChainedBatch.prototype._del = function (key) {\n  this._operations.push({ type: 'del', key: key })\n}\n\nAbstractChainedBatch.prototype.clear = function () {\n  this._checkWritten()\n  this._operations = []\n  this._clear()\n\n  return this\n}\n\nAbstractChainedBatch.prototype._clear = function noop () {}\n\nAbstractChainedBatch.prototype.write = function (options, callback) {\n  this._checkWritten()\n\n  if (typeof options === 'function') { callback = options }\n  if (typeof callback !== 'function') {\n    throw new Error('write() requires a callback argument')\n  }\n  if (typeof options !== 'object') { options = {} }\n\n  this._written = true\n\n  // @ts-ignore\n  if (typeof this._write === 'function') { return this._write(callback) }\n\n  if (typeof this._db._batch === 'function') {\n    return this._db._batch(this._operations, options, callback)\n  }\n\n  process.nextTick(callback)\n}\n\nmodule.exports = AbstractChainedBatch\n","/* Copyright (c) 2017 Rod Vagg, MIT License */\n\nfunction AbstractIterator (db) {\n  this.db = db\n  this._ended = false\n  this._nexting = false\n}\n\nAbstractIterator.prototype.next = function (callback) {\n  var self = this\n\n  if (typeof callback !== 'function') {\n    throw new Error('next() requires a callback argument')\n  }\n\n  if (self._ended) {\n    process.nextTick(callback, new Error('cannot call next() after end()'))\n    return self\n  }\n\n  if (self._nexting) {\n    process.nextTick(callback, new Error('cannot call next() before previous next() has completed'))\n    return self\n  }\n\n  self._nexting = true\n  self._next(function () {\n    self._nexting = false\n    callback.apply(null, arguments)\n  })\n\n  return self\n}\n\nAbstractIterator.prototype._next = function (callback) {\n  process.nextTick(callback)\n}\n\nAbstractIterator.prototype.end = function (callback) {\n  if (typeof callback !== 'function') {\n    throw new Error('end() requires a callback argument')\n  }\n\n  if (this._ended) {\n    return process.nextTick(callback, new Error('end() already called on iterator'))\n  }\n\n  this._ended = true\n  this._end(callback)\n}\n\nAbstractIterator.prototype._end = function (callback) {\n  process.nextTick(callback)\n}\n\nmodule.exports = AbstractIterator\n","/* Copyright (c) 2017 Rod Vagg, MIT License */\n\nvar xtend = require('xtend')\nvar AbstractIterator = require('./abstract-iterator')\nvar AbstractChainedBatch = require('./abstract-chained-batch')\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar rangeOptions = 'start end gt gte lt lte'.split(' ')\n\nfunction AbstractLevelDOWN (location) {\n  if (!arguments.length || location === undefined) {\n    throw new Error('constructor requires at least a location argument')\n  }\n\n  if (typeof location !== 'string') {\n    throw new Error('constructor requires a location string argument')\n  }\n\n  this.location = location\n  this.status = 'new'\n}\n\nAbstractLevelDOWN.prototype.open = function (options, callback) {\n  var self = this\n  var oldStatus = this.status\n\n  if (typeof options === 'function') { callback = options }\n\n  if (typeof callback !== 'function') {\n    throw new Error('open() requires a callback argument')\n  }\n\n  if (typeof options !== 'object') { options = {} }\n\n  options.createIfMissing = options.createIfMissing !== false\n  options.errorIfExists = !!options.errorIfExists\n\n  this.status = 'opening'\n  this._open(options, function (err) {\n    if (err) {\n      self.status = oldStatus\n      return callback(err)\n    }\n    self.status = 'open'\n    callback()\n  })\n}\n\nAbstractLevelDOWN.prototype._open = function (options, callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.close = function (callback) {\n  var self = this\n  var oldStatus = this.status\n\n  if (typeof callback !== 'function') {\n    throw new Error('close() requires a callback argument')\n  }\n\n  this.status = 'closing'\n  this._close(function (err) {\n    if (err) {\n      self.status = oldStatus\n      return callback(err)\n    }\n    self.status = 'closed'\n    callback()\n  })\n}\n\nAbstractLevelDOWN.prototype._close = function (callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.get = function (key, options, callback) {\n  if (typeof options === 'function') { callback = options }\n\n  if (typeof callback !== 'function') {\n    throw new Error('get() requires a callback argument')\n  }\n\n  var err = this._checkKey(key, 'key')\n  if (err) return process.nextTick(callback, err)\n\n  key = this._serializeKey(key)\n\n  if (typeof options !== 'object') { options = {} }\n\n  options.asBuffer = options.asBuffer !== false\n\n  this._get(key, options, callback)\n}\n\nAbstractLevelDOWN.prototype._get = function (key, options, callback) {\n  process.nextTick(function () { callback(new Error('NotFound')) })\n}\n\nAbstractLevelDOWN.prototype.put = function (key, value, options, callback) {\n  if (typeof options === 'function') { callback = options }\n\n  if (typeof callback !== 'function') {\n    throw new Error('put() requires a callback argument')\n  }\n\n  var err = this._checkKey(key, 'key')\n  if (err) return process.nextTick(callback, err)\n\n  key = this._serializeKey(key)\n  value = this._serializeValue(value)\n\n  if (typeof options !== 'object') { options = {} }\n\n  this._put(key, value, options, callback)\n}\n\nAbstractLevelDOWN.prototype._put = function (key, value, options, callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.del = function (key, options, callback) {\n  if (typeof options === 'function') { callback = options }\n\n  if (typeof callback !== 'function') {\n    throw new Error('del() requires a callback argument')\n  }\n\n  var err = this._checkKey(key, 'key')\n  if (err) return process.nextTick(callback, err)\n\n  key = this._serializeKey(key)\n\n  if (typeof options !== 'object') { options = {} }\n\n  this._del(key, options, callback)\n}\n\nAbstractLevelDOWN.prototype._del = function (key, options, callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.batch = function (array, options, callback) {\n  if (!arguments.length) { return this._chainedBatch() }\n\n  if (typeof options === 'function') { callback = options }\n\n  if (typeof array === 'function') { callback = array }\n\n  if (typeof callback !== 'function') {\n    throw new Error('batch(array) requires a callback argument')\n  }\n\n  if (!Array.isArray(array)) {\n    return process.nextTick(callback, new Error('batch(array) requires an array argument'))\n  }\n\n  if (!options || typeof options !== 'object') { options = {} }\n\n  var serialized = new Array(array.length)\n\n  for (var i = 0; i < array.length; i++) {\n    if (typeof array[i] !== 'object' || array[i] === null) {\n      return process.nextTick(callback, new Error('batch(array) element must be an object and not `null`'))\n    }\n\n    var e = xtend(array[i])\n\n    if (e.type !== 'put' && e.type !== 'del') {\n      return process.nextTick(callback, new Error(\"`type` must be 'put' or 'del'\"))\n    }\n\n    var err = this._checkKey(e.key, 'key')\n    if (err) return process.nextTick(callback, err)\n\n    e.key = this._serializeKey(e.key)\n\n    if (e.type === 'put') { e.value = this._serializeValue(e.value) }\n\n    serialized[i] = e\n  }\n\n  this._batch(serialized, options, callback)\n}\n\nAbstractLevelDOWN.prototype._batch = function (array, options, callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {\n  options = cleanRangeOptions(options)\n\n  options.reverse = !!options.reverse\n  options.keys = options.keys !== false\n  options.values = options.values !== false\n  options.limit = 'limit' in options ? options.limit : -1\n  options.keyAsBuffer = options.keyAsBuffer !== false\n  options.valueAsBuffer = options.valueAsBuffer !== false\n\n  return options\n}\n\nfunction cleanRangeOptions (options) {\n  var result = {}\n\n  for (var k in options) {\n    if (!hasOwnProperty.call(options, k)) continue\n    if (isRangeOption(k) && isEmptyRangeOption(options[k])) continue\n\n    result[k] = options[k]\n  }\n\n  return result\n}\n\nfunction isRangeOption (k) {\n  return rangeOptions.indexOf(k) !== -1\n}\n\nfunction isEmptyRangeOption (v) {\n  return v === '' || v == null || isEmptyBuffer(v)\n}\n\nfunction isEmptyBuffer (v) {\n  return Buffer.isBuffer(v) && v.length === 0\n}\n\nAbstractLevelDOWN.prototype.iterator = function (options) {\n  if (typeof options !== 'object') { options = {} }\n  options = this._setupIteratorOptions(options)\n  return this._iterator(options)\n}\n\nAbstractLevelDOWN.prototype._iterator = function (options) {\n  return new AbstractIterator(this)\n}\n\nAbstractLevelDOWN.prototype._chainedBatch = function () {\n  return new AbstractChainedBatch(this)\n}\n\nAbstractLevelDOWN.prototype._serializeKey = function (key) {\n  return Buffer.isBuffer(key) ? key : String(key)\n}\n\nAbstractLevelDOWN.prototype._serializeValue = function (value) {\n  if (value == null) return ''\n  return Buffer.isBuffer(value) || process.browser ? value : String(value)\n}\n\nAbstractLevelDOWN.prototype._checkKey = function (obj, type) {\n  if (obj === null || obj === undefined) {\n    return new Error(type + ' cannot be `null` or `undefined`')\n  }\n\n  if (Buffer.isBuffer(obj) && obj.length === 0) {\n    return new Error(type + ' cannot be an empty Buffer')\n  }\n\n  if (String(obj) === '') {\n    return new Error(type + ' cannot be an empty String')\n  }\n}\n\nmodule.exports = AbstractLevelDOWN\n","exports.AbstractLevelDOWN = require('./abstract-leveldown')\nexports.AbstractIterator = require('./abstract-iterator')\nexports.AbstractChainedBatch = require('./abstract-chained-batch')\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbXX0=","var leveljs = require('level-js');\nvar levelup = require('levelup');\nvar fs = require('level-filesystem');\n\nvar db = levelup(leveljs('level-filesystem'));\nmodule.exports = fs(db);","var toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict';\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n// shim for Node's 'util' package\n// DO NOT REMOVE THIS! It is required for compatibility with EnderJS (http://enderjs.com/).\nvar util = {\n  isArray: function (ar) {\n    return Array.isArray(ar) || (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n  },\n  isDate: function (d) {\n    return typeof d === 'object' && objectToString(d) === '[object Date]';\n  },\n  isRegExp: function (re) {\n    return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n  },\n  getRegExpFlags: function (re) {\n    var flags = '';\n    re.global && (flags += 'g');\n    re.ignoreCase && (flags += 'i');\n    re.multiline && (flags += 'm');\n    return flags;\n  }\n};\n\n\nif (typeof module === 'object')\n  module.exports = clone;\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\n\nfunction clone(parent, circular, depth, prototype) {\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (util.isArray(parent)) {\n      child = [];\n    } else if (util.isRegExp(parent)) {\n      child = new RegExp(parent.source, util.getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (util.isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n      \n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n","var Writable = require('readable-stream').Writable\nvar inherits = require('inherits')\nvar bufferFrom = require('buffer-from')\n\nif (typeof Uint8Array === 'undefined') {\n  var U8 = require('typedarray').Uint8Array\n} else {\n  var U8 = Uint8Array\n}\n\nfunction ConcatStream(opts, cb) {\n  if (!(this instanceof ConcatStream)) return new ConcatStream(opts, cb)\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n  if (!opts) opts = {}\n\n  var encoding = opts.encoding\n  var shouldInferEncoding = false\n\n  if (!encoding) {\n    shouldInferEncoding = true\n  } else {\n    encoding =  String(encoding).toLowerCase()\n    if (encoding === 'u8' || encoding === 'uint8') {\n      encoding = 'uint8array'\n    }\n  }\n\n  Writable.call(this, { objectMode: true })\n\n  this.encoding = encoding\n  this.shouldInferEncoding = shouldInferEncoding\n\n  if (cb) this.on('finish', function () { cb(this.getBody()) })\n  this.body = []\n}\n\nmodule.exports = ConcatStream\ninherits(ConcatStream, Writable)\n\nConcatStream.prototype._write = function(chunk, enc, next) {\n  this.body.push(chunk)\n  next()\n}\n\nConcatStream.prototype.inferEncoding = function (buff) {\n  var firstBuffer = buff === undefined ? this.body[0] : buff;\n  if (Buffer.isBuffer(firstBuffer)) return 'buffer'\n  if (typeof Uint8Array !== 'undefined' && firstBuffer instanceof Uint8Array) return 'uint8array'\n  if (Array.isArray(firstBuffer)) return 'array'\n  if (typeof firstBuffer === 'string') return 'string'\n  if (Object.prototype.toString.call(firstBuffer) === \"[object Object]\") return 'object'\n  return 'buffer'\n}\n\nConcatStream.prototype.getBody = function () {\n  if (!this.encoding && this.body.length === 0) return []\n  if (this.shouldInferEncoding) this.encoding = this.inferEncoding()\n  if (this.encoding === 'array') return arrayConcat(this.body)\n  if (this.encoding === 'string') return stringConcat(this.body)\n  if (this.encoding === 'buffer') return bufferConcat(this.body)\n  if (this.encoding === 'uint8array') return u8Concat(this.body)\n  return this.body\n}\n\nvar isArray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]'\n}\n\nfunction isArrayish (arr) {\n  return /Array\\]$/.test(Object.prototype.toString.call(arr))\n}\n\nfunction isBufferish (p) {\n  return typeof p === 'string' || isArrayish(p) || (p && typeof p.subarray === 'function')\n}\n\nfunction stringConcat (parts) {\n  var strings = []\n  var needsToString = false\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i]\n    if (typeof p === 'string') {\n      strings.push(p)\n    } else if (Buffer.isBuffer(p)) {\n      strings.push(p)\n    } else if (isBufferish(p)) {\n      strings.push(bufferFrom(p))\n    } else {\n      strings.push(bufferFrom(String(p)))\n    }\n  }\n  if (Buffer.isBuffer(parts[0])) {\n    strings = Buffer.concat(strings)\n    strings = strings.toString('utf8')\n  } else {\n    strings = strings.join('')\n  }\n  return strings\n}\n\nfunction bufferConcat (parts) {\n  var bufs = []\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i]\n    if (Buffer.isBuffer(p)) {\n      bufs.push(p)\n    } else if (isBufferish(p)) {\n      bufs.push(bufferFrom(p))\n    } else {\n      bufs.push(bufferFrom(String(p)))\n    }\n  }\n  return Buffer.concat(bufs)\n}\n\nfunction arrayConcat (parts) {\n  var res = []\n  for (var i = 0; i < parts.length; i++) {\n    res.push.apply(res, parts[i])\n  }\n  return res\n}\n\nfunction u8Concat (parts) {\n  var len = 0\n  for (var i = 0; i < parts.length; i++) {\n    if (typeof parts[i] === 'string') {\n      parts[i] = bufferFrom(parts[i])\n    }\n    len += parts[i].length\n  }\n  var u8 = new U8(len)\n  for (var i = 0, offset = 0; i < parts.length; i++) {\n    var part = parts[i]\n    for (var j = 0; j < part.length; j++) {\n      u8[offset++] = part[j]\n    }\n  }\n  return u8\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","\n\nclass ResizeableBuffer{\n  constructor(size=100){\n    this.size = size\n    this.length = 0\n    this.buf = Buffer.alloc(size)\n  }\n  prepend(val){\n    const length = this.length++\n    if(length === this.size){\n      this.resize()\n    }\n    const buf = this.clone()\n    this.buf[0] = val\n    buf.copy(this.buf,1, 0, length)\n  }\n  append(val){\n    const length = this.length++\n    if(length === this.size){\n      this.resize()\n    }\n    this.buf[length] = val\n  }\n  clone(){\n    return Buffer.from(this.buf.slice(0, this.length))\n  }\n  resize(){\n    const length = this.length\n    this.size = this.size * 2\n    const buf = Buffer.alloc(this.size)\n    this.buf.copy(buf,0, 0, length)\n    this.buf = buf\n  }\n  toString(){\n    return this.buf.slice(0, this.length).toString()\n  }\n  reset(){\n    this.length = 0\n  }\n}\n\nmodule.exports = ResizeableBuffer\n","\n/*\nCSV Parse\n\nPlease look at the [project documentation](https://csv.js.org/parse/) for additional\ninformation.\n*/\n\nconst { Transform } = require('stream')\nconst ResizeableBuffer = require('./ResizeableBuffer')\n\nconst cr = 13\nconst nl = 10\nconst space = 32\nconst tab = 9\nconst bom_utf8 = Buffer.from([239, 187, 191])\n\nclass Parser extends Transform {\n  constructor(opts = {}){\n    super({...{readableObjectMode: true}, ...opts})\n    const options = {}\n    // Merge with user options\n    for(let opt in opts){\n      options[underscore(opt)] = opts[opt]\n    }\n    // Normalize option `bom`\n    if(options.bom === undefined || options.bom === null || options.bom === false){\n      options.bom = false\n    }else if(options.bom !== true){\n      throw new Error(`Invalid Option: bom must be true, got ${JSON.stringify(options.bom)}`)\n    }\n    // Normalize option `cast`\n    let fnCastField = null\n    if(options.cast === undefined || options.cast === null || options.cast === false || options.cast === ''){\n      options.cast = undefined\n    }else if(typeof options.cast === 'function'){\n      fnCastField = options.cast\n      options.cast = true\n    }else if(options.cast !== true){\n      throw new Error('Invalid Option: cast must be true or a function')\n    }\n    // Normalize option `cast_date`\n    if(options.cast_date === undefined || options.cast_date === null || options.cast_date === false || options.cast_date === ''){\n      options.cast_date = false\n    }else if(options.cast_date === true){\n      options.cast_date = function(value){\n        const date = Date.parse(value)\n        return !isNaN(date) ? new Date(date) : value\n      }\n    }else if(typeof options.cast_date !== 'function'){\n      throw new Error('Invalid Option: cast_date must be true or a function')\n    }\n    // Normalize option `columns`\n    let fnFirstLineToHeaders = null\n    if(options.columns === true){\n      // Fields in the first line are converted as-is to columns\n      fnFirstLineToHeaders = undefined\n    }else if(typeof options.columns === 'function'){\n      fnFirstLineToHeaders = options.columns\n      options.columns = true\n    }else if(Array.isArray(options.columns)){\n      options.columns = normalizeColumnsArray(options.columns)\n    }else if(options.columns === undefined || options.columns === null || options.columns === false){\n      options.columns = false\n    }else{\n      throw new Error(`Invalid Option columns: expect an object or true, got ${JSON.stringify(options.columns)}`)\n    }\n    // Normalize option `comment`\n    if(options.comment === undefined || options.comment === null || options.comment === false || options.comment === ''){\n      options.comment = null\n    }else{\n      if(typeof options.comment === 'string'){\n        options.comment = Buffer.from(options.comment)\n      }\n      if(!Buffer.isBuffer(options.comment)){\n        throw new Error(`Invalid Option: comment must be a buffer or a string, got ${JSON.stringify(options.comment)}`)\n      }\n    }\n    // Normalize option `delimiter`\n    if(options.delimiter === undefined || options.delimiter === null || options.delimiter === false){\n      options.delimiter = Buffer.from(',')\n    }else if(Buffer.isBuffer(options.delimiter)){\n      if(options.delimiter.length === 0){\n        throw new Error(`Invalid Option: delimiter must be a non empty buffer`)\n      }\n      // Great, nothing to do\n    }else if(typeof options.delimiter === 'string'){\n      if(options.delimiter.length === 0){\n        throw new Error(`Invalid Option: delimiter must be a non empty string`)\n      }\n      options.delimiter = Buffer.from(options.delimiter)\n    }else{\n      throw new Error(`Invalid Option: delimiter must be a string or a buffer, got ${options.delimiter}`)\n    }\n    // Normalize option `escape`\n    if(options.escape === undefined || options.escape === null){\n      options.escape = Buffer.from('\"')\n    }else if(typeof options.escape === 'string'){\n      options.escape = Buffer.from(options.escape)\n    }\n    if(!Buffer.isBuffer(options.escape)){\n      throw new Error(`Invalid Option: escape must be a buffer or a string, got ${JSON.stringify(options.escape)}`)\n    }else if(options.escape.length !== 1){\n      throw new Error(`Invalid Option Length: escape must be one character, got ${options.escape.length}`)\n    }else{\n      options.escape = options.escape[0]\n    }\n    // Normalize option `from`\n    if(options.from === undefined || options.from === null){\n      options.from = 1\n    }else{\n      if(typeof options.from === 'string' && /\\d+/.test(options.from)){\n        options.from = parseInt(options.from)\n      }\n      if(Number.isInteger(options.from)){\n        if(options.from < 0){\n          throw new Error(`Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`)\n        }\n      }else{\n        throw new Error(`Invalid Option: from must be an integer, got ${JSON.stringify(options.from)}`)\n      }\n    }\n    // Normalize option `from_line`\n    if(options.from_line === undefined || options.from_line === null){\n      options.from_line = 1\n    }else{\n      if(typeof options.from_line === 'string' && /\\d+/.test(options.from_line)){\n        options.from_line = parseInt(options.from_line)\n      }\n      if(Number.isInteger(options.from_line)){\n        if(options.from_line <= 0){\n          throw new Error(`Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`)\n        }\n      }else{\n        throw new Error(`Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`)\n      }\n    }\n    // Normalize option `info`\n    if(options.info === undefined || options.info === null || options.info === false){\n      options.info = false\n    }else if(options.info !== true){\n      throw new Error(`Invalid Option: info must be true, got ${JSON.stringify(options.info)}`)\n    }\n    // Normalize option `max_record_size`\n    if(options.max_record_size === undefined || options.max_record_size === null || options.max_record_size === false){\n      options.max_record_size = 0\n    }else if(Number.isInteger(options.max_record_size) && options.max_record_size >= 0){\n      // Great, nothing to do\n    }else if(typeof options.max_record_size === 'string' && /\\d+/.test(options.max_record_size)){\n      options.max_record_size = parseInt(options.max_record_size)\n    }else{\n      throw new Error(`Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options.max_record_size)}`)\n    }\n    // Normalize option `objname`\n    if(options.objname === undefined || options.objname === null || options.objname === false){\n      options.objname = undefined\n    }else if(Buffer.isBuffer(options.objname)){\n      if(options.objname.length === 0){\n        throw new Error(`Invalid Option: objname must be a non empty buffer`)\n      }\n      options.objname = options.objname.toString()\n    }else if(typeof options.objname === 'string'){\n      if(options.objname.length === 0){\n        throw new Error(`Invalid Option: objname must be a non empty string`)\n      }\n      // Great, nothing to do\n    }else{\n      throw new Error(`Invalid Option: objname must be a string or a buffer, got ${options.objname}`)\n    }\n    // Normalize option `quote`\n    if(options.quote === null || options.quote === false || options.quote === ''){\n      options.quote = null\n    }else{\n      if(options.quote === undefined || options.quote === true){\n        options.quote = Buffer.from('\"')\n      }else if(typeof options.quote === 'string'){\n        options.quote = Buffer.from(options.quote)\n      }\n      if(!Buffer.isBuffer(options.quote)){\n        throw new Error(`Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options.quote)}`)\n      }else if(options.quote.length !== 1){\n        throw new Error(`Invalid Option Length: quote must be one character, got ${options.quote.length}`)\n      }else{\n        options.quote = options.quote[0]\n      }\n    }\n    // Normalize option `raw`\n    if(options.raw === undefined || options.raw === null || options.raw === false){\n      options.raw = false\n    }else if(options.raw !== true){\n      throw new Error(`Invalid Option: raw must be true, got ${JSON.stringify(options.raw)}`)\n    }\n    // Normalize option `record_delimiter`\n    if(!options.record_delimiter){\n      options.record_delimiter = []\n    }else if(!Array.isArray(options.record_delimiter)){\n      options.record_delimiter = [options.record_delimiter]\n    }\n    options.record_delimiter = options.record_delimiter.map( function(rd){\n      if(typeof rd === 'string'){\n        rd = Buffer.from(rd)\n      }\n      return rd\n    })\n    // Normalize option `relax`\n    if(typeof options.relax === 'boolean'){\n      // Great, nothing to do\n    }else if(options.relax === undefined || options.relax === null){\n      options.relax = false\n    }else{\n      throw new Error(`Invalid Option: relax must be a boolean, got ${JSON.stringify(options.relax)}`)\n    }\n    // Normalize option `relax_column_count`\n    if(typeof options.relax_column_count === 'boolean'){\n      // Great, nothing to do\n    }else if(options.relax_column_count === undefined || options.relax_column_count === null){\n      options.relax_column_count = false\n    }else{\n      throw new Error(`Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options.relax_column_count)}`)\n    }\n    // Normalize option `skip_empty_lines`\n    if(typeof options.skip_empty_lines === 'boolean'){\n      // Great, nothing to do\n    }else if(options.skip_empty_lines === undefined || options.skip_empty_lines === null){\n      options.skip_empty_lines = false\n    }else{\n      throw new Error(`Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options.skip_empty_lines)}`)\n    }\n    // Normalize option `skip_lines_with_empty_values`\n    if(typeof options.skip_lines_with_empty_values === 'boolean'){\n      // Great, nothing to do\n    }else if(options.skip_lines_with_empty_values === undefined || options.skip_lines_with_empty_values === null){\n      options.skip_lines_with_empty_values = false\n    }else{\n      throw new Error(`Invalid Option: skip_lines_with_empty_values must be a boolean, got ${JSON.stringify(options.skip_lines_with_empty_values)}`)\n    }\n    // Normalize option `skip_lines_with_error`\n    if(typeof options.skip_lines_with_error === 'boolean'){\n      // Great, nothing to do\n    }else if(options.skip_lines_with_error === undefined || options.skip_lines_with_error === null){\n      options.skip_lines_with_error = false\n    }else{\n      throw new Error(`Invalid Option: skip_lines_with_error must be a boolean, got ${JSON.stringify(options.skip_lines_with_error)}`)\n    }\n    // Normalize option `rtrim`\n    if(options.rtrim === undefined || options.rtrim === null || options.rtrim === false){\n      options.rtrim = false\n    }else if(options.rtrim !== true){\n      throw new Error(`Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options.rtrim)}`)\n    }\n    // Normalize option `ltrim`\n    if(options.ltrim === undefined || options.ltrim === null || options.ltrim === false){\n      options.ltrim = false\n    }else if(options.ltrim !== true){\n      throw new Error(`Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options.ltrim)}`)\n    }\n    // Normalize option `trim`\n    if(options.trim === undefined || options.trim === null || options.trim === false){\n      options.trim = false\n    }else if(options.trim !== true){\n      throw new Error(`Invalid Option: trim must be a boolean, got ${JSON.stringify(options.trim)}`)\n    }\n    // Normalize options `trim`, `ltrim` and `rtrim`\n    if(options.trim === true && opts.ltrim !== false){\n      options.ltrim = true\n    }else if(options.ltrim !== true){\n      options.ltrim = false\n    }\n    if(options.trim === true && opts.rtrim !== false){\n      options.rtrim = true\n    }else if(options.rtrim !== true){\n      options.rtrim = false\n    }\n    // Normalize option `to`\n    if(options.to === undefined || options.to === null){\n      options.to = -1\n    }else{\n      if(typeof options.to === 'string' && /\\d+/.test(options.to)){\n        options.to = parseInt(options.to)\n      }\n      if(Number.isInteger(options.to)){\n        if(options.to <= 0){\n          throw new Error(`Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`)\n        }\n      }else{\n        throw new Error(`Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`)\n      }\n    }\n    // Normalize option `to_line`\n    if(options.to_line === undefined || options.to_line === null){\n      options.to_line = -1\n    }else{\n      if(typeof options.to_line === 'string' && /\\d+/.test(options.to_line)){\n        options.to_line = parseInt(options.to_line)\n      }\n      if(Number.isInteger(options.to_line)){\n        if(options.to_line <= 0){\n          throw new Error(`Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`)\n        }\n      }else{\n        throw new Error(`Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`)\n      }\n    }\n    this.info = {\n      comment_lines: 0,\n      empty_lines: 0,\n      invalid_field_length: 0,\n      lines: 1,\n      records: 0\n    }\n    this.options = options\n    this.state = {\n      bomSkipped: false,\n      castField: fnCastField,\n      commenting: false,\n      enabled: options.from_line === 1,\n      escaping: false,\n      escapeIsQuote: options.escape === options.quote,\n      expectedRecordLength: options.columns === null ? 0 : options.columns.length,\n      field: new ResizeableBuffer(20),\n      firstLineToHeaders: fnFirstLineToHeaders,\n      info: Object.assign({}, this.info),\n      previousBuf: undefined,\n      quoting: false,\n      stop: false,\n      rawBuffer: new ResizeableBuffer(100),\n      record: [],\n      recordHasError: false,\n      record_length: 0,\n      recordDelimiterMaxLength: options.record_delimiter.length === 0 ? 2 : Math.max(...options.record_delimiter.map( (v) => v.length)),\n      trimChars: [Buffer.from(' ')[0], Buffer.from('\\t')[0]],\n      wasQuoting: false,\n      wasRowDelimiter: false\n    }\n  }\n  // Implementation of `Transform._transform`\n  _transform(buf, encoding, callback){\n    if(this.state.stop === true){\n      return\n    }\n    const err = this.__parse(buf, false)\n    if(err !== undefined){\n      this.state.stop = true\n    }\n    callback(err)\n  }\n  // Implementation of `Transform._flush`\n  _flush(callback){\n    if(this.state.stop === true){\n      return\n    }\n    const err = this.__parse(undefined, true)\n    callback(err)\n  }\n  // Central parser implementation\n  __parse(nextBuf, end){\n    const {bom, comment, escape, from, from_line, info, ltrim, max_record_size, quote, raw, relax, rtrim, skip_empty_lines, to, to_line} = this.options\n    let {record_delimiter} = this.options\n    const {bomSkipped, previousBuf, rawBuffer, escapeIsQuote, trimChars} = this.state\n    let buf\n    if(previousBuf === undefined){\n      if(nextBuf === undefined){\n        // Handle empty string\n        this.push(null)\n        return\n      }else{\n        buf = nextBuf\n      }\n    }else if(previousBuf !== undefined && nextBuf === undefined){\n      buf = previousBuf\n    }else{\n      buf = Buffer.concat([previousBuf, nextBuf])\n    }\n    // Handle UTF BOM\n    if(bomSkipped === false){\n      if(bom === false){\n        this.state.bomSkipped = true\n      }else if(buf.length < 3){\n        // No enough data\n        if(end === false){\n          // Wait for more data\n          this.state.previousBuf = buf\n          return\n        }\n        // skip BOM detect because data length < 3\n      }else{\n        if(bom_utf8.compare(buf, 0, 3) === 0){\n          // Skip BOM\n          buf = buf.slice(3)\n        }\n        this.state.bomSkipped = true\n      }\n    }\n    const bufLen = buf.length\n    let pos\n    for(pos = 0; pos < bufLen; pos++){\n      // Ensure we get enough space to look ahead\n      // There should be a way to move this out of the loop\n      if(this.__needMoreData(pos, bufLen, end)){\n        break\n      }\n      if(this.state.wasRowDelimiter === true){\n        this.info.lines++\n        if(info === true && this.state.record.length === 0 && this.state.field.length === 0 && this.state.wasQuoting === false){\n          this.state.info = Object.assign({}, this.info)\n        }\n        this.state.wasRowDelimiter = false\n      }\n      if(to_line !== -1 && this.info.lines > to_line){\n        this.state.stop = true\n        this.push(null)\n        return\n      }\n      // Auto discovery of record_delimiter, unix, mac and windows supported\n      if(this.state.quoting === false && record_delimiter.length === 0){\n        const record_delimiterCount = this.__autoDiscoverRowDelimiter(buf, pos)\n        if(record_delimiterCount){\n          record_delimiter = this.options.record_delimiter\n        }\n      }\n      const chr = buf[pos]\n      if(raw === true){\n        rawBuffer.append(chr)\n      }\n      if((chr === cr || chr === nl) && this.state.wasRowDelimiter === false ){\n        this.state.wasRowDelimiter = true\n      }\n      // Previous char was a valid escape char\n      // treat the current char as a regular char\n      if(this.state.escaping === true){\n        this.state.escaping = false\n      }else{\n        // Escape is only active inside quoted fields\n        if(this.state.quoting === true && chr === escape && pos + 1 < bufLen){\n          // We are quoting, the char is an escape chr and there is a chr to escape\n          if(escapeIsQuote){\n            if(buf[pos+1] === quote){\n              this.state.escaping = true\n              continue\n            }\n          }else{\n            this.state.escaping = true\n            continue\n          }\n        }\n        // Not currently escaping and chr is a quote\n        // TODO: need to compare bytes instead of single char\n        if(this.state.commenting === false && chr === quote){\n          if(this.state.quoting === true){\n            const nextChr = buf[pos+1]\n            const isNextChrTrimable = rtrim && this.__isCharTrimable(nextChr)\n            // const isNextChrComment = nextChr === comment\n            const isNextChrComment = comment !== null && this.__compareBytes(comment, buf, pos+1, nextChr)\n            const isNextChrDelimiter = this.__isDelimiter(nextChr, buf, pos+1)\n            const isNextChrRowDelimiter = record_delimiter.length === 0 ? this.__autoDiscoverRowDelimiter(buf, pos+1) : this.__isRecordDelimiter(nextChr, buf, pos+1)\n            // Escape a quote\n            // Treat next char as a regular character\n            // TODO: need to compare bytes instead of single char\n            if(chr === escape && nextChr === quote){\n              pos++\n            }else if(!nextChr || isNextChrDelimiter || isNextChrRowDelimiter || isNextChrComment || isNextChrTrimable){\n              this.state.quoting = false\n              this.state.wasQuoting = true\n              continue\n            }else if(relax === false){\n              const err = this.__error(`Invalid Closing Quote: got \"${String.fromCharCode(nextChr)}\" at line ${this.info.lines} instead of delimiter, row delimiter, trimable character (if activated) or comment`)\n              if(err !== undefined) return err\n            }else{\n              this.state.quoting = false\n              this.state.wasQuoting = true\n              // continue\n              this.state.field.prepend(quote)\n            }\n          }else{\n            if(this.state.field.length !== 0){\n              // In relax mode, treat opening quote preceded by chrs as regular\n              if( relax === false ){\n                const err = this.__error(`Invalid opening quote at line ${this.info.lines}`)\n                if(err !== undefined) return err\n              }\n            }else{\n              this.state.quoting = true\n              continue\n            }\n          }\n        }\n        if(this.state.quoting === false){\n          let recordDelimiterLength = this.__isRecordDelimiter(chr, buf, pos)\n          if(recordDelimiterLength !== 0){\n            // Do not emit comments which take a full line\n            const skipCommentLine = this.state.commenting && (this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0)\n            if(skipCommentLine){\n              this.info.comment_lines++\n              // Skip full comment line\n            }else{\n              // Skip if line is empty and skip_empty_lines activated\n              if(skip_empty_lines === true && this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0){\n                this.info.empty_lines++\n                pos += recordDelimiterLength - 1\n                continue\n              }\n              // Activate records emition if above from_line\n              if(this.state.enabled === false && this.info.lines + (this.state.wasRowDelimiter === true ? 1: 0 ) >= from_line){\n                this.state.enabled = true\n                this.__resetField()\n                this.__resetRow()\n                pos += recordDelimiterLength - 1\n                continue\n              }else{\n                const errField = this.__onField()\n                if(errField !== undefined) return errField\n                const errRecord = this.__onRow()\n                if(errRecord !== undefined) return errRecord\n              }\n              if(to !== -1 && this.info.records >= to){\n                this.state.stop = true\n                this.push(null)\n                return\n              }\n            }\n            this.state.commenting = false\n            pos += recordDelimiterLength - 1\n            continue\n          }\n          if(this.state.commenting){\n            continue\n          }\n          const commentCount = comment === null ? 0 : this.__compareBytes(comment, buf, pos, chr)\n          if(commentCount !== 0){\n            this.state.commenting = true\n            continue\n          }\n          let delimiterLength = this.__isDelimiter(chr, buf, pos)\n          if(delimiterLength !== 0){\n            const errField = this.__onField()\n            if(errField !== undefined) return errField\n            pos += delimiterLength - 1\n            continue\n          }\n        }\n      }\n      if(this.state.commenting === false){\n        if(max_record_size !== 0 && this.state.record_length + this.state.field.length > max_record_size){\n          const err = this.__error(`Max Record Size: record exceed the maximum number of tolerated bytes of ${max_record_size} on line ${this.info.lines}`)\n          if(err !== undefined) return err\n        }\n      }\n\n      const lappend = ltrim === false || this.state.quoting === true || this.state.field.length !== 0 || !this.__isCharTrimable(chr)\n      // rtrim in non quoting is handle in __onField\n      const rappend = rtrim === false || this.state.wasQuoting === false\n      if( lappend === true && rappend === true ){\n        this.state.field.append(chr)\n      }else if(rtrim === true && !this.__isCharTrimable(chr)){\n        const err = this.__error(`Invalid Closing Quote: found non trimable byte after quote at line ${this.info.lines}`)\n        if(err !== undefined) return err\n      }\n    }\n    if(end === true){\n      if(this.state.quoting === true){\n        const err = this.__error(`Invalid Closing Quote: quote is not closed at line ${this.info.lines}`)\n        if(err !== undefined) return err\n      }else{\n        // Skip last line if it has no characters\n        if(this.state.wasQuoting === true || this.state.record.length !== 0 || this.state.field.length !== 0){\n          const errField = this.__onField()\n          if(errField !== undefined) return errField\n          const errRecord = this.__onRow()\n          if(errRecord !== undefined) return errRecord\n        }else if(this.state.wasRowDelimiter === true){\n          this.info.empty_lines++\n        }else if(this.state.commenting === true){\n          this.info.comment_lines++\n        }\n      }\n    }else{\n      this.state.previousBuf = buf.slice(pos)\n    }\n    if(this.state.wasRowDelimiter === true){\n      this.info.lines++\n      this.state.wasRowDelimiter = false\n    }\n  }\n  // Helper to test if a character is a space or a line delimiter\n  __isCharTrimable(chr){\n    return chr === space || chr === tab || chr === cr || chr === nl\n  }\n  __onRow(){\n    const {columns, info, from, relax_column_count, raw, skip_lines_with_empty_values} = this.options\n    const {enabled, record} = this.state\n    // Convert the first line into column names\n    if(columns === true){\n      return this.__firstLineToColumns(record)\n    }\n    const recordLength = record.length\n    if(columns === false && this.info.records === 0){\n      this.state.expectedRecordLength = recordLength\n    }else if(enabled === true){\n      if(recordLength !== this.state.expectedRecordLength){\n        if(relax_column_count === true){\n          this.info.invalid_field_length++\n        }else{\n          if(columns === false){\n            const err = this.__error(`Invalid Record Length: expect ${this.state.expectedRecordLength}, got ${recordLength} on line ${this.info.lines}`)\n            if(err !== undefined) return err\n          }else{\n            const err = this.__error(`Invalid Record Length: header length is ${columns.length}, got ${recordLength} on line ${this.info.lines}`)\n            if(err !== undefined) return err\n          }\n        }\n      }\n    }\n    if(enabled === false){\n      return this.__resetRow()\n    }\n    if(skip_lines_with_empty_values === true){\n      if(record.map( (field) => field.trim() ).join('') === ''){\n        this.__resetRow()\n        return\n      }\n    }\n    if(this.state.recordHasError === true){\n      this.__resetRow()\n      this.state.recordHasError = false\n      return\n    }\n    this.info.records++\n    if(from === 1 || this.info.records >= from){\n      if(columns !== false){\n        const obj = {}\n        // Transform record array to an object\n        for(let i in record){\n          if(columns[i] === undefined || columns[i].disabled) continue\n          obj[columns[i].name] = record[i]\n        }\n        const {objname} = this.options\n        if(objname === undefined){\n          if(raw === true || info === true){\n            this.push(Object.assign(\n              {record: obj},\n              (raw === true ? {raw: this.state.rawBuffer.toString()}: {}),\n              (info === true ? {info: this.state.info}: {})\n            ))\n          }else{\n            this.push(obj)\n          }\n        }else{\n          if(raw === true || info === true){\n            this.push(Object.assign(\n              {record: [obj[objname], obj]},\n              raw === true ? {raw: this.state.rawBuffer.toString()}: {},\n              info === true ? {info: this.state.info}: {}\n            ))\n          }else{\n            this.push([obj[objname], obj])\n          }\n        }\n      }else{\n        if(raw === true || info === true){\n          this.push(Object.assign(\n            {record: record},\n            raw === true ? {raw: this.state.rawBuffer.toString()}: {},\n            info === true ? {info: this.state.info}: {}\n          ))\n        }else{\n          this.push(record)\n        }\n      }\n    }\n    this.__resetRow()\n  }\n  __firstLineToColumns(record){\n    const {firstLineToHeaders} = this.state\n    try{\n      // record = record.filter(function(field){ return field !== undefined})\n      const headers = firstLineToHeaders === undefined ? record : firstLineToHeaders.call(null, record)\n      if(!Array.isArray(headers)){\n        return this.__error(`Invalid Header Mapping: expect an array, got ${JSON.stringify(headers)}`)\n      }\n      const normalizedHeaders = normalizeColumnsArray(headers)\n      this.state.expectedRecordLength = normalizedHeaders.length\n      this.options.columns = normalizedHeaders\n      this.__resetRow()\n      return\n    }catch(err){\n      return err\n    }\n  }\n  __resetRow(){\n    const {info} = this.options\n    if(this.options.raw === true){\n      this.state.rawBuffer.reset()\n    }\n    this.state.record = []\n    this.state.record_length = 0\n  }\n  __onField(){\n    const {cast, rtrim, max_record_size} = this.options\n    const {enabled, wasQuoting} = this.state\n    // Deal with from_to options\n    if(this.options.columns !== true && enabled === false){\n      return this.__resetField()\n    }\n    let field = this.state.field.toString()\n    if(rtrim === true && wasQuoting === false){\n      field = field.trimRight()\n    }\n    if(cast === true){\n      const [err, f] = this.__cast(field)\n      if(err !== undefined) return err\n      field = f\n    }\n    this.state.record.push(field)\n    // Increment record length if record size must not exceed a limit\n    if(max_record_size !== 0 && typeof field === 'string'){\n      this.state.record_length += field.length\n    }\n    this.__resetField()\n  }\n  __resetField(){\n    this.state.field.reset()\n    this.state.wasQuoting = false\n  }\n  // Return a tuple with the error and the casted value\n  __cast(field){\n    const isColumns = Array.isArray(this.options.columns)\n    // Dont loose time calling cast if the field wont be part of the final record\n    if( isColumns === true && this.options.columns.length <= this.state.record.length ){\n      return [undefined, undefined]\n    }\n    const context = {\n      column: isColumns === true ?\n        this.options.columns[this.state.record.length].name :\n        this.state.record.length,\n      empty_lines: this.info.empty_lines,\n      header: this.options.columns === true,\n      index: this.state.record.length,\n      invalid_field_length: this.info.invalid_field_length,\n      quoting: this.state.wasQuoting,\n      lines: this.info.lines,\n      records: this.info.records\n    }\n    if(this.state.castField !== null){\n      try{\n        return [undefined, this.state.castField.call(null, field, context)]\n      }catch(err){\n        return [err]\n      }\n    }\n    if(this.__isFloat(field)){\n      return [undefined, parseFloat(field)]\n    }else if(this.options.cast_date !== false){\n      return [undefined, this.options.cast_date.call(null, field, context)]\n    }\n    return [undefined, field]\n  }\n  // Keep it in case we implement the `cast_int` option\n  // __isInt(value){\n  //   // return Number.isInteger(parseInt(value))\n  //   // return !isNaN( parseInt( obj ) );\n  //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n  // }\n  __isFloat(value){\n    return (value - parseFloat( value ) + 1) >= 0 // Borrowed from jquery\n  }\n  __compareBytes(sourceBuf, targetBuf, pos, firtByte){\n    if(sourceBuf[0] !== firtByte) return 0\n    const sourceLength = sourceBuf.length\n    for(let i = 1; i < sourceLength; i++){\n      if(sourceBuf[i] !== targetBuf[pos+i]) return 0\n    }\n    return sourceLength\n  }\n  __needMoreData(i, bufLen, end){\n    if(end){\n      return false\n    }\n    const {comment, delimiter, escape} = this.options\n    const {quoting, recordDelimiterMaxLength} = this.state\n    const numOfCharLeft = bufLen - i - 1\n    const requiredLength = Math.max(\n      // Skip if the remaining buffer smaller than comment\n      comment ? comment.length : 0,\n      // Skip if the remaining buffer smaller than row delimiter\n      recordDelimiterMaxLength,\n      // Skip if the remaining buffer can be row delimiter following the closing quote\n      // 1 is for quote.length\n      quoting ? (1 + recordDelimiterMaxLength) : 0,\n      // Skip if the remaining buffer can be delimiter\n      delimiter.length,\n      // Skip if the remaining buffer can be escape sequence\n      // 1 is for escape.length\n      1\n    )\n    return numOfCharLeft < requiredLength\n  }\n  __isDelimiter(chr, buf, pos){\n    const {delimiter} = this.options\n    const delLength = delimiter.length\n    if(delimiter[0] !== chr) return 0\n    for(let i = 1; i < delLength; i++){\n      if(delimiter[i] !== buf[pos+i]) return 0\n    }\n    return delimiter.length\n  }\n  __isRecordDelimiter(chr, buf, pos){\n    const {record_delimiter} = this.options\n    const recordDelimiterLength = record_delimiter.length\n    loop1: for(let i = 0; i < recordDelimiterLength; i++){\n      const rd = record_delimiter[i]\n      const rdLength = rd.length\n      if(rd[0] !== chr){\n        continue\n      }\n      for(let j = 1; j < rdLength; j++){\n        if(rd[j] !== buf[pos+j]){\n          continue loop1\n        }\n      }\n      return rd.length\n    }\n    return 0\n  }\n  __autoDiscoverRowDelimiter(buf, pos){\n    const chr = buf[pos]\n    if(chr === cr){\n      if(buf[pos+1] === nl){\n        this.options.record_delimiter.push(Buffer.from('\\r\\n'))\n        this.state.recordDelimiterMaxLength = 2\n        return 2\n      }else{\n        this.options.record_delimiter.push(Buffer.from('\\r'))\n        this.state.recordDelimiterMaxLength = 1\n        return 1\n      }\n    }else if(chr === nl){\n      this.options.record_delimiter.push(Buffer.from('\\n'))\n      this.state.recordDelimiterMaxLength = 1\n      return 1\n    }\n    return 0\n  }\n  __error(msg){\n    const {skip_lines_with_error} = this.options\n    const err = new Error(msg)\n    if(skip_lines_with_error){\n      this.state.recordHasError = true\n      this.emit('skip', err)\n      return undefined\n    }else{\n      return err\n    }\n  }\n}\n\nconst parse = function(){\n  let data, options, callback\n  for(let i in arguments){\n    const argument = arguments[i]\n    const type = typeof argument\n    if(data === undefined && (typeof argument === 'string' || Buffer.isBuffer(argument))){\n      data = argument\n    }else if(options === undefined && isObject(argument)){\n      options = argument\n    }else if(callback === undefined && type === 'function'){\n      callback = argument\n    }else{\n      throw new Error(`Invalid argument: got ${JSON.stringify(argument)} at index ${i}`)\n    }\n  }\n  const parser = new Parser(options)\n  if(callback){\n    const records = options === undefined || options.objname === undefined ? [] : {}\n    parser.on('readable', function(){\n      let record\n      while(record = this.read()){\n        if(options === undefined || options.objname === undefined){\n          records.push(record)\n        }else{\n          records[record[0]] = record[1]\n        }\n      }\n    })\n    parser.on('error', function(err){\n      callback(err, undefined, parser.info)\n    })\n    parser.on('end', function(){\n      callback(undefined, records, parser.info)\n    })\n  }\n  if(data !== undefined){\n    parser.write(data)\n    parser.end()\n  }\n  return parser\n}\n\nparse.Parser = Parser\n\nmodule.exports = parse\n\nconst underscore = function(str){\n  return str.replace(/([A-Z])/g, function(_, match, index){\n    return '_' + match.toLowerCase()\n  })\n}\n\nconst isObject = function(obj){\n  return (typeof obj === 'object' && obj !== null && !Array.isArray(obj))\n}\n\nconst normalizeColumnsArray = function(columns){\n  // console.log('columns', columns)\n  const normalizedColumns = [];\n\n  for(let i=0; i< columns.length; i++){\n    const column = columns[i]\n    if(column === undefined || column === null || column === false){\n      normalizedColumns[i] = { disabled: true }\n    }else if(typeof column === 'string'){\n      normalizedColumns[i] = { name: column }\n    }else if(isObject(column)){\n      if(typeof column.name !== 'string'){\n        throw new Error(`Invalid Option columns: property \"name\" is required at position ${i} when column is an object literal`)\n      }\n      normalizedColumns[i] = column\n    }else{\n      throw new Error(`Invalid Option columns: expect a string or an object, got ${JSON.stringify(column)} at position ${i}`)\n    }\n  }\n  // console.log(normalizedColumns)\n  return normalizedColumns;\n}\n","// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n","var AbstractIterator = require('abstract-leveldown').AbstractIterator\nvar inherits = require('inherits')\n\nfunction DeferredIterator (options) {\n  AbstractIterator.call(this, options)\n\n  this._options = options\n  this._iterator = null\n  this._operations = []\n}\n\ninherits(DeferredIterator, AbstractIterator)\n\nDeferredIterator.prototype.setDb = function (db) {\n  var it = this._iterator = db.iterator(this._options)\n  this._operations.forEach(function (op) {\n    it[op.method].apply(it, op.args)\n  })\n}\n\nDeferredIterator.prototype._operation = function (method, args) {\n  if (this._iterator) return this._iterator[method].apply(this._iterator, args)\n  this._operations.push({ method: method, args: args })\n}\n\n'next end'.split(' ').forEach(function (m) {\n  DeferredIterator.prototype['_' + m] = function () {\n    this._operation(m, arguments)\n  }\n})\n\nmodule.exports = DeferredIterator\n","var AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\nvar inherits = require('inherits')\nvar DeferredIterator = require('./deferred-iterator')\nvar deferrables = 'put get del batch'.split(' ')\n\nfunction DeferredLevelDOWN (db) {\n  AbstractLevelDOWN.call(this, '')\n  this._db = db\n  this._operations = []\n  this._iterators = []\n  closed(this)\n}\n\ninherits(DeferredLevelDOWN, AbstractLevelDOWN)\n\nDeferredLevelDOWN.prototype._open = function (options, callback) {\n  var self = this\n\n  this._db.open(options, function (err) {\n    if (err) return callback(err)\n\n    self._operations.forEach(function (op) {\n      self._db[op.method].apply(self._db, op.args)\n    })\n    self._operations = []\n    self._iterators.forEach(function (it) {\n      it.setDb(self._db)\n    })\n    self._iterators = []\n    open(self)\n    callback()\n  })\n}\n\nDeferredLevelDOWN.prototype._close = function (callback) {\n  var self = this\n\n  this._db.close(function (err) {\n    if (err) return callback(err)\n    closed(self)\n    callback()\n  })\n}\n\nfunction open (self) {\n  deferrables.concat('iterator').forEach(function (m) {\n    self['_' + m] = function () {\n      return this._db[m].apply(this._db, arguments)\n    }\n  })\n  if (self._db.approximateSize) {\n    self.approximateSize = function () {\n      return this._db.approximateSize.apply(this._db, arguments)\n    }\n  }\n}\n\nfunction closed (self) {\n  deferrables.forEach(function (m) {\n    self['_' + m] = function () {\n      this._operations.push({ method: m, args: arguments })\n    }\n  })\n  if (typeof self._db.approximateSize === 'function') {\n    self.approximateSize = function () {\n      this._operations.push({\n        method: 'approximateSize',\n        args: arguments\n      })\n    }\n  }\n  self._iterator = function (options) {\n    var it = new DeferredIterator(options)\n    this._iterators.push(it)\n    return it\n  }\n}\n\nDeferredLevelDOWN.prototype._serializeKey = function (key) {\n  return key\n}\n\nDeferredLevelDOWN.prototype._serializeValue = function (value) {\n  return value\n}\n\nmodule.exports = DeferredLevelDOWN\nmodule.exports.DeferredIterator = DeferredIterator\n","var prr = require('prr')\n\nfunction init (type, message, cause) {\n  if (!!message && typeof message != 'string') {\n    message = message.message || message.name\n  }\n  prr(this, {\n      type    : type\n    , name    : type\n      // can be passed just a 'cause'\n    , cause   : typeof message != 'string' ? message : cause\n    , message : message\n  }, 'ewr')\n}\n\n// generic prototype, not intended to be actually used - helpful for `instanceof`\nfunction CustomError (message, cause) {\n  Error.call(this)\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, this.constructor)\n  init.call(this, 'CustomError', message, cause)\n}\n\nCustomError.prototype = new Error()\n\nfunction createError (errno, type, proto) {\n  var err = function (message, cause) {\n    init.call(this, type, message, cause)\n    //TODO: the specificity here is stupid, errno should be available everywhere\n    if (type == 'FilesystemError') {\n      this.code    = this.cause.code\n      this.path    = this.cause.path\n      this.errno   = this.cause.errno\n      this.message =\n        (errno.errno[this.cause.errno]\n          ? errno.errno[this.cause.errno].description\n          : this.cause.message)\n        + (this.cause.path ? ' [' + this.cause.path + ']' : '')\n    }\n    Error.call(this)\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, err)\n  }\n  err.prototype = !!proto ? new proto() : new CustomError()\n  return err\n}\n\nmodule.exports = function (errno) {\n  var ce = function (type, proto) {\n    return createError(errno, type, proto)\n  }\n  return {\n      CustomError     : CustomError\n    , FilesystemError : ce('FilesystemError')\n    , createError     : ce\n  }\n}\n","var all = module.exports.all = [\n  {\n    errno: -2,\n    code: 'ENOENT',\n    description: 'no such file or directory'\n  },\n  {\n    errno: -1,\n    code: 'UNKNOWN',\n    description: 'unknown error'\n  },\n  {\n    errno: 0,\n    code: 'OK',\n    description: 'success'\n  },\n  {\n    errno: 1,\n    code: 'EOF',\n    description: 'end of file'\n  },\n  {\n    errno: 2,\n    code: 'EADDRINFO',\n    description: 'getaddrinfo error'\n  },\n  {\n    errno: 3,\n    code: 'EACCES',\n    description: 'permission denied'\n  },\n  {\n    errno: 4,\n    code: 'EAGAIN',\n    description: 'resource temporarily unavailable'\n  },\n  {\n    errno: 5,\n    code: 'EADDRINUSE',\n    description: 'address already in use'\n  },\n  {\n    errno: 6,\n    code: 'EADDRNOTAVAIL',\n    description: 'address not available'\n  },\n  {\n    errno: 7,\n    code: 'EAFNOSUPPORT',\n    description: 'address family not supported'\n  },\n  {\n    errno: 8,\n    code: 'EALREADY',\n    description: 'connection already in progress'\n  },\n  {\n    errno: 9,\n    code: 'EBADF',\n    description: 'bad file descriptor'\n  },\n  {\n    errno: 10,\n    code: 'EBUSY',\n    description: 'resource busy or locked'\n  },\n  {\n    errno: 11,\n    code: 'ECONNABORTED',\n    description: 'software caused connection abort'\n  },\n  {\n    errno: 12,\n    code: 'ECONNREFUSED',\n    description: 'connection refused'\n  },\n  {\n    errno: 13,\n    code: 'ECONNRESET',\n    description: 'connection reset by peer'\n  },\n  {\n    errno: 14,\n    code: 'EDESTADDRREQ',\n    description: 'destination address required'\n  },\n  {\n    errno: 15,\n    code: 'EFAULT',\n    description: 'bad address in system call argument'\n  },\n  {\n    errno: 16,\n    code: 'EHOSTUNREACH',\n    description: 'host is unreachable'\n  },\n  {\n    errno: 17,\n    code: 'EINTR',\n    description: 'interrupted system call'\n  },\n  {\n    errno: 18,\n    code: 'EINVAL',\n    description: 'invalid argument'\n  },\n  {\n    errno: 19,\n    code: 'EISCONN',\n    description: 'socket is already connected'\n  },\n  {\n    errno: 20,\n    code: 'EMFILE',\n    description: 'too many open files'\n  },\n  {\n    errno: 21,\n    code: 'EMSGSIZE',\n    description: 'message too long'\n  },\n  {\n    errno: 22,\n    code: 'ENETDOWN',\n    description: 'network is down'\n  },\n  {\n    errno: 23,\n    code: 'ENETUNREACH',\n    description: 'network is unreachable'\n  },\n  {\n    errno: 24,\n    code: 'ENFILE',\n    description: 'file table overflow'\n  },\n  {\n    errno: 25,\n    code: 'ENOBUFS',\n    description: 'no buffer space available'\n  },\n  {\n    errno: 26,\n    code: 'ENOMEM',\n    description: 'not enough memory'\n  },\n  {\n    errno: 27,\n    code: 'ENOTDIR',\n    description: 'not a directory'\n  },\n  {\n    errno: 28,\n    code: 'EISDIR',\n    description: 'illegal operation on a directory'\n  },\n  {\n    errno: 29,\n    code: 'ENONET',\n    description: 'machine is not on the network'\n  },\n  {\n    errno: 31,\n    code: 'ENOTCONN',\n    description: 'socket is not connected'\n  },\n  {\n    errno: 32,\n    code: 'ENOTSOCK',\n    description: 'socket operation on non-socket'\n  },\n  {\n    errno: 33,\n    code: 'ENOTSUP',\n    description: 'operation not supported on socket'\n  },\n  {\n    errno: 34,\n    code: 'ENOENT',\n    description: 'no such file or directory'\n  },\n  {\n    errno: 35,\n    code: 'ENOSYS',\n    description: 'function not implemented'\n  },\n  {\n    errno: 36,\n    code: 'EPIPE',\n    description: 'broken pipe'\n  },\n  {\n    errno: 37,\n    code: 'EPROTO',\n    description: 'protocol error'\n  },\n  {\n    errno: 38,\n    code: 'EPROTONOSUPPORT',\n    description: 'protocol not supported'\n  },\n  {\n    errno: 39,\n    code: 'EPROTOTYPE',\n    description: 'protocol wrong type for socket'\n  },\n  {\n    errno: 40,\n    code: 'ETIMEDOUT',\n    description: 'connection timed out'\n  },\n  {\n    errno: 41,\n    code: 'ECHARSET',\n    description: 'invalid Unicode character'\n  },\n  {\n    errno: 42,\n    code: 'EAIFAMNOSUPPORT',\n    description: 'address family for hostname not supported'\n  },\n  {\n    errno: 44,\n    code: 'EAISERVICE',\n    description: 'servname not supported for ai_socktype'\n  },\n  {\n    errno: 45,\n    code: 'EAISOCKTYPE',\n    description: 'ai_socktype not supported'\n  },\n  {\n    errno: 46,\n    code: 'ESHUTDOWN',\n    description: 'cannot send after transport endpoint shutdown'\n  },\n  {\n    errno: 47,\n    code: 'EEXIST',\n    description: 'file already exists'\n  },\n  {\n    errno: 48,\n    code: 'ESRCH',\n    description: 'no such process'\n  },\n  {\n    errno: 49,\n    code: 'ENAMETOOLONG',\n    description: 'name too long'\n  },\n  {\n    errno: 50,\n    code: 'EPERM',\n    description: 'operation not permitted'\n  },\n  {\n    errno: 51,\n    code: 'ELOOP',\n    description: 'too many symbolic links encountered'\n  },\n  {\n    errno: 52,\n    code: 'EXDEV',\n    description: 'cross-device link not permitted'\n  },\n  {\n    errno: 53,\n    code: 'ENOTEMPTY',\n    description: 'directory not empty'\n  },\n  {\n    errno: 54,\n    code: 'ENOSPC',\n    description: 'no space left on device'\n  },\n  {\n    errno: 55,\n    code: 'EIO',\n    description: 'i/o error'\n  },\n  {\n    errno: 56,\n    code: 'EROFS',\n    description: 'read-only file system'\n  },\n  {\n    errno: 57,\n    code: 'ENODEV',\n    description: 'no such device'\n  },\n  {\n    errno: 58,\n    code: 'ESPIPE',\n    description: 'invalid seek'\n  },\n  {\n    errno: 59,\n    code: 'ECANCELED',\n    description: 'operation canceled'\n  }\n]\n\nmodule.exports.errno = {}\nmodule.exports.code = {}\n\nall.forEach(function (error) {\n  module.exports.errno[error.errno] = error\n  module.exports.code[error.code] = error\n})\n\nmodule.exports.custom = require('./custom')(module.exports)\nmodule.exports.create = module.exports.custom.createError\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n","\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n","var Writable = require('readable-stream/writable');\nvar Readable = require('readable-stream/readable');\nvar Duplex = require('readable-stream/duplex');\n\nvar DUMMY = new Buffer(0);\nvar noop = function() {};\n\nvar toFunction = function(fn) {\n\tif (typeof fn === 'function') return fn;\n\treturn function(cb) {\n\t\tcb(null, fn);\n\t};\n};\n\nvar onreadable = function(rs, init) {\n\tvar reading = false;\n\tvar destroyed = false;\n\n\trs._read = function() {\n\t\treading = true;\n\t};\n\n\trs.destroy = function() {\n\t\tdestroyed = true;\n\t};\n\n\tinit(function(err, source) {\n\t\tif (err) return rs.emit('error', err);\n\n\t\tvar fwd = function() {\n\t\t\tvar data;\n\t\t\twhile ((data = source.read()) !== null) {\n\t\t\t\treading = false;\n\t\t\t\trs.push(data);\n\t\t\t}\n\t\t};\n\n\t\tsource.on('readable', function() {\n\t\t\tif (reading) fwd();\n\t\t});\n\n\t\tsource.on('end', function() {\n\t\t\tfwd();\n\t\t\trs.push(null);\n\t\t});\n\n\t\tsource.on('error', function(err) {\n\t\t\trs.emit('error', err);\n\t\t});\n\n\t\tsource.on('close', function() {\n\t\t\tfwd();\n\t\t\tprocess.nextTick(function() {\n\t\t\t\trs.emit('close');\n\t\t\t});\n\t\t});\n\n\t\trs._read = function() {\n\t\t\treading = true;\n\t\t\tfwd();\n\t\t};\n\n\t\trs.destroy = function() {\n\t\t\tif (destroyed) return;\n\t\t\tdestroyed = true;\n\t\t\tif (source.destroy) source.destroy();\n\t\t};\n\n\t\tif (destroyed) {\n\t\t\tdestroyed = false;\n\t\t\trs.destroy();\n\t\t\treturn;\n\t\t}\n\n\t\tif (reading) fwd();\n\t});\n\n\treturn rs;\n};\n\nvar onwritable = function(ws, init) {\n\tvar ready = noop;\n\tvar destroyed = false;\n\n\tws._write = function(data, enc, cb) {\n\t\tready = cb;\n\t};\n\n\tws.destroy = function() {\n\t\tdestroyed = true;\n\t};\n\n\tws.write(DUMMY);\n\n\tinit(function(err, source) {\n\t\tif (err) return ws.emit('error', err);\n\n\t\tsource.on('close', function() {\n\t\t\tws.emit('close');\n\t\t});\n\n\t\tsource.on('error', function(err) {\n\t\t\tws.emit('error', err);\n\t\t});\n\n\t\tws._write = function(data, enc, cb) {\n\t\t\tif (data === DUMMY) return cb();\n\t\t\tsource.write(data, enc, cb);\n\t\t};\n\n\t\tvar emit = ws.emit;\n\n\t\tsource.on('finish', function() {\n\t\t\temit.call(ws, 'finish');\n\t\t});\n\n\t\tws.destroy = function() {\n\t\t\tif (destroyed) return;\n\t\t\tdestroyed = true;\n\t\t\tif (source.destroy) source.destroy();\n\t\t};\n\n\t\tws.emit = function(name) {\n\t\t\tif (name !== 'finish') return emit.apply(ws, arguments);\n\t\t\tsource.end();\n\t\t};\n\n\t\tif (destroyed) {\n\t\t\tdestroyed = false;\n\t\t\tws.destroy();\n\t\t\treturn;\n\t\t}\n\n\t\tready();\n\t});\n\n\treturn ws;\n};\n\nexports.readable = function(opts, init) {\n\tif (arguments.length === 1) return exports.readable(null, opts);\n\tif (!opts) opts = {};\n\treturn onreadable(new Readable(opts), toFunction(init));\n};\n\nexports.writable = function(opts, init) {\n\tif (arguments.length === 1) return exports.writable(null, opts);\n\tif (!opts) opts = {};\n\treturn onwritable(new Writable(opts), toFunction(init));\n};\n\nexports.duplex = function(opts, initWritable, initReadable) {\n\tif (arguments.length === 2) return exports.duplex(null, opts, initWritable);\n\tif (!opts) opts = {};\n\tvar dupl = new Duplex(opts);\n\tonwritable(dupl, toFunction(initWritable));\n\tonreadable(dupl, toFunction(initReadable));\n\treturn dupl;\n};","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n  var ret;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    ret = null;\n\n    // In cases where the decoder did not receive enough data\n    // to produce a full chunk, then immediately received an\n    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].\n    // howMuchToRead will see this and coerce the amount to\n    // read to zero (because it's looking at the length of the\n    // first <Buffer > in state.buffer), and we'll end up here.\n    //\n    // This can only happen via state.decoder -- no other venue\n    // exists for pushing a zero-length chunk into state.buffer\n    // and triggering this behavior. In this case, we return our\n    // remaining data and end the stream, if appropriate.\n    if (state.length > 0 && state.decoder) {\n      ret = fromList(n, state);\n      state.length -= ret.length;\n    }\n\n    if (state.length === 0)\n      endReadable(this);\n\n    return ret;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    //if (state.objectMode && util.isNullOrUndefined(chunk))\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  var ts = this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('finish', function() {\n    if ('function' === typeof this._flush)\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var rs = stream._readableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n","var Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n","module.exports = require(\"./lib/_stream_writable.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\nvar types = [\n  require('./nextTick'),\n  require('./mutation.js'),\n  require('./messageChannel'),\n  require('./stateChange'),\n  require('./timeout')\n];\nvar draining;\nvar currentQueue;\nvar queueIndex = -1;\nvar queue = [];\nvar scheduled = false;\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n  draining = false;\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n  if (queue.length) {\n    nextTick();\n  }\n}\n\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  if (draining) {\n    return;\n  }\n  scheduled = false;\n  draining = true;\n  var len = queue.length;\n  var timeout = setTimeout(cleanUpNextTick);\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n    while (currentQueue && ++queueIndex < len) {\n      currentQueue[queueIndex].run();\n    }\n    queueIndex = -1;\n    len = queue.length;\n  }\n  currentQueue = null;\n  queueIndex = -1;\n  draining = false;\n  clearTimeout(timeout);\n}\nvar scheduleDrain;\nvar i = -1;\nvar len = types.length;\nwhile (++i < len) {\n  if (types[i] && types[i].test && types[i].test()) {\n    scheduleDrain = types[i].install(nextTick);\n    break;\n  }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\nItem.prototype.run = function () {\n  var fun = this.fun;\n  var array = this.array;\n  switch (array.length) {\n  case 0:\n    return fun();\n  case 1:\n    return fun(array[0]);\n  case 2:\n    return fun(array[0], array[1]);\n  case 3:\n    return fun(array[0], array[1], array[2]);\n  default:\n    return fun.apply(null, array);\n  }\n\n};\nmodule.exports = immediate;\nfunction immediate(task) {\n  var args = new Array(arguments.length - 1);\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n  queue.push(new Item(task, args));\n  if (!scheduled && !draining) {\n    scheduled = true;\n    scheduleDrain();\n  }\n}\n","'use strict';\n\nexports.test = function () {\n  if (global.setImmediate) {\n    // we can only get here in IE10\n    // which doesn't handel postMessage well\n    return false;\n  }\n  return typeof global.MessageChannel !== 'undefined';\n};\n\nexports.install = function (func) {\n  var channel = new global.MessageChannel();\n  channel.port1.onmessage = func;\n  return function () {\n    channel.port2.postMessage(0);\n  };\n};","'use strict';\n//based off rsvp https://github.com/tildeio/rsvp.js\n//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE\n//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js\n\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nexports.test = function () {\n  return Mutation;\n};\n\nexports.install = function (handle) {\n  var called = 0;\n  var observer = new Mutation(handle);\n  var element = global.document.createTextNode('');\n  observer.observe(element, {\n    characterData: true\n  });\n  return function () {\n    element.data = (called = ++called % 2);\n  };\n};","'use strict';\nexports.test = function () {\n  // Don't get fooled by e.g. browserify environments.\n  return (typeof process !== 'undefined') && !process.browser;\n};\n\nexports.install = function (func) {\n  return function () {\n    process.nextTick(func);\n  };\n};\n","'use strict';\n\nexports.test = function () {\n  return 'document' in global && 'onreadystatechange' in global.document.createElement('script');\n};\n\nexports.install = function (handle) {\n  return function () {\n\n    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n    var scriptEl = global.document.createElement('script');\n    scriptEl.onreadystatechange = function () {\n      handle();\n\n      scriptEl.onreadystatechange = null;\n      scriptEl.parentNode.removeChild(scriptEl);\n      scriptEl = null;\n    };\n    global.document.documentElement.appendChild(scriptEl);\n\n    return handle;\n  };\n};","'use strict';\nexports.test = function () {\n  return true;\n};\n\nexports.install = function (t) {\n  return function () {\n    setTimeout(t, 0);\n  };\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\nvar numberIsNan = require('number-is-nan');\n\nmodule.exports = Number.isFinite || function (val) {\n\treturn !(typeof val !== 'number' || numberIsNan(val) || val === Infinity || val === -Infinity);\n};\n","// https://github.com/paulmillr/es6-shim\n// http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger\nvar isFinite = require(\"is-finite\");\nmodule.exports = Number.isInteger || function(val) {\n  return typeof val === \"number\" &&\n    isFinite(val) &&\n    Math.floor(val) === val;\n};\n","module.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint8ClampedArray]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint8ClampedArray\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n","\n/**!\n * is\n * the definitive JavaScript type testing library\n * \n * @copyright 2013 Enrico Marino\n * @license MIT\n */\n\nvar objProto = Object.prototype;\nvar owns = objProto.hasOwnProperty;\nvar toString = objProto.toString;\nvar isActualNaN = function (value) {\n  return value !== value;\n};\nvar NON_HOST_TYPES = {\n  \"boolean\": 1,\n  \"number\": 1,\n  \"string\": 1,\n  \"undefined\": 1\n};\n\n/**\n * Expose `is`\n */\n\nvar is = module.exports = {};\n\n/**\n * Test general.\n */\n\n/**\n * is.type\n * Test if `value` is a type of `type`.\n *\n * @param {Mixed} value value to test\n * @param {String} type type\n * @return {Boolean} true if `value` is a type of `type`, false otherwise\n * @api public\n */\n\nis.a =\nis.type = function (value, type) {\n  return typeof value === type;\n};\n\n/**\n * is.defined\n * Test if `value` is defined.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if 'value' is defined, false otherwise\n * @api public\n */\n\nis.defined = function (value) {\n  return value !== undefined;\n};\n\n/**\n * is.empty\n * Test if `value` is empty.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is empty, false otherwise\n * @api public\n */\n\nis.empty = function (value) {\n  var type = toString.call(value);\n  var key;\n\n  if ('[object Array]' === type || '[object Arguments]' === type) {\n    return value.length === 0;\n  }\n\n  if ('[object Object]' === type) {\n    for (key in value) if (owns.call(value, key)) return false;\n    return true;\n  }\n\n  if ('[object String]' === type) {\n    return '' === value;\n  }\n\n  return false;\n};\n\n/**\n * is.equal\n * Test if `value` is equal to `other`.\n *\n * @param {Mixed} value value to test\n * @param {Mixed} other value to compare with\n * @return {Boolean} true if `value` is equal to `other`, false otherwise\n */\n\nis.equal = function (value, other) {\n  var type = toString.call(value)\n  var key;\n\n  if (type !== toString.call(other)) {\n    return false;\n  }\n\n  if ('[object Object]' === type) {\n    for (key in value) {\n      if (!is.equal(value[key], other[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if ('[object Array]' === type) {\n    key = value.length;\n    if (key !== other.length) {\n      return false;\n    }\n    while (--key) {\n      if (!is.equal(value[key], other[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if ('[object Function]' === type) {\n    return value.prototype === other.prototype;\n  }\n\n  if ('[object Date]' === type) {\n    return value.getTime() === other.getTime();\n  }\n\n  return value === other;\n};\n\n/**\n * is.hosted\n * Test if `value` is hosted by `host`.\n *\n * @param {Mixed} value to test\n * @param {Mixed} host host to test with\n * @return {Boolean} true if `value` is hosted by `host`, false otherwise\n * @api public\n */\n\nis.hosted = function (value, host) {\n  var type = typeof host[value];\n  return type === 'object' ? !!host[value] : !NON_HOST_TYPES[type];\n};\n\n/**\n * is.instance\n * Test if `value` is an instance of `constructor`.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an instance of `constructor`\n * @api public\n */\n\nis.instance = is['instanceof'] = function (value, constructor) {\n  return value instanceof constructor;\n};\n\n/**\n * is.null\n * Test if `value` is null.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is null, false otherwise\n * @api public\n */\n\nis['null'] = function (value) {\n  return value === null;\n};\n\n/**\n * is.undefined\n * Test if `value` is undefined.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is undefined, false otherwise\n * @api public\n */\n\nis.undefined = function (value) {\n  return value === undefined;\n};\n\n/**\n * Test arguments.\n */\n\n/**\n * is.arguments\n * Test if `value` is an arguments object.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an arguments object, false otherwise\n * @api public\n */\n\nis.arguments = function (value) {\n  var isStandardArguments = '[object Arguments]' === toString.call(value);\n  var isOldArguments = !is.array(value) && is.arraylike(value) && is.object(value) && is.fn(value.callee);\n  return isStandardArguments || isOldArguments;\n};\n\n/**\n * Test array.\n */\n\n/**\n * is.array\n * Test if 'value' is an array.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an array, false otherwise\n * @api public\n */\n\nis.array = function (value) {\n  return '[object Array]' === toString.call(value);\n};\n\n/**\n * is.arguments.empty\n * Test if `value` is an empty arguments object.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an empty arguments object, false otherwise\n * @api public\n */\nis.arguments.empty = function (value) {\n  return is.arguments(value) && value.length === 0;\n};\n\n/**\n * is.array.empty\n * Test if `value` is an empty array.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an empty array, false otherwise\n * @api public\n */\nis.array.empty = function (value) {\n  return is.array(value) && value.length === 0;\n};\n\n/**\n * is.arraylike\n * Test if `value` is an arraylike object.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an arguments object, false otherwise\n * @api public\n */\n\nis.arraylike = function (value) {\n  return !!value && !is.boolean(value)\n    && owns.call(value, 'length')\n    && isFinite(value.length)\n    && is.number(value.length)\n    && value.length >= 0;\n};\n\n/**\n * Test boolean.\n */\n\n/**\n * is.boolean\n * Test if `value` is a boolean.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is a boolean, false otherwise\n * @api public\n */\n\nis.boolean = function (value) {\n  return '[object Boolean]' === toString.call(value);\n};\n\n/**\n * is.false\n * Test if `value` is false.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is false, false otherwise\n * @api public\n */\n\nis['false'] = function (value) {\n  return is.boolean(value) && (value === false || value.valueOf() === false);\n};\n\n/**\n * is.true\n * Test if `value` is true.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is true, false otherwise\n * @api public\n */\n\nis['true'] = function (value) {\n  return is.boolean(value) && (value === true || value.valueOf() === true);\n};\n\n/**\n * Test date.\n */\n\n/**\n * is.date\n * Test if `value` is a date.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is a date, false otherwise\n * @api public\n */\n\nis.date = function (value) {\n  return '[object Date]' === toString.call(value);\n};\n\n/**\n * Test element.\n */\n\n/**\n * is.element\n * Test if `value` is an html element.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an HTML Element, false otherwise\n * @api public\n */\n\nis.element = function (value) {\n  return value !== undefined\n    && typeof HTMLElement !== 'undefined'\n    && value instanceof HTMLElement\n    && value.nodeType === 1;\n};\n\n/**\n * Test error.\n */\n\n/**\n * is.error\n * Test if `value` is an error object.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an error object, false otherwise\n * @api public\n */\n\nis.error = function (value) {\n  return '[object Error]' === toString.call(value);\n};\n\n/**\n * Test function.\n */\n\n/**\n * is.fn / is.function (deprecated)\n * Test if `value` is a function.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is a function, false otherwise\n * @api public\n */\n\nis.fn = is['function'] = function (value) {\n  var isAlert = typeof window !== 'undefined' && value === window.alert;\n  return isAlert || '[object Function]' === toString.call(value);\n};\n\n/**\n * Test number.\n */\n\n/**\n * is.number\n * Test if `value` is a number.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is a number, false otherwise\n * @api public\n */\n\nis.number = function (value) {\n  return '[object Number]' === toString.call(value);\n};\n\n/**\n * is.infinite\n * Test if `value` is positive or negative infinity.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is positive or negative Infinity, false otherwise\n * @api public\n */\nis.infinite = function (value) {\n  return value === Infinity || value === -Infinity;\n};\n\n/**\n * is.decimal\n * Test if `value` is a decimal number.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is a decimal number, false otherwise\n * @api public\n */\n\nis.decimal = function (value) {\n  return is.number(value) && !isActualNaN(value) && !is.infinite(value) && value % 1 !== 0;\n};\n\n/**\n * is.divisibleBy\n * Test if `value` is divisible by `n`.\n *\n * @param {Number} value value to test\n * @param {Number} n dividend\n * @return {Boolean} true if `value` is divisible by `n`, false otherwise\n * @api public\n */\n\nis.divisibleBy = function (value, n) {\n  var isDividendInfinite = is.infinite(value);\n  var isDivisorInfinite = is.infinite(n);\n  var isNonZeroNumber = is.number(value) && !isActualNaN(value) && is.number(n) && !isActualNaN(n) && n !== 0;\n  return isDividendInfinite || isDivisorInfinite || (isNonZeroNumber && value % n === 0);\n};\n\n/**\n * is.int\n * Test if `value` is an integer.\n *\n * @param value to test\n * @return {Boolean} true if `value` is an integer, false otherwise\n * @api public\n */\n\nis.int = function (value) {\n  return is.number(value) && !isActualNaN(value) && value % 1 === 0;\n};\n\n/**\n * is.maximum\n * Test if `value` is greater than 'others' values.\n *\n * @param {Number} value value to test\n * @param {Array} others values to compare with\n * @return {Boolean} true if `value` is greater than `others` values\n * @api public\n */\n\nis.maximum = function (value, others) {\n  if (isActualNaN(value)) {\n    throw new TypeError('NaN is not a valid value');\n  } else if (!is.arraylike(others)) {\n    throw new TypeError('second argument must be array-like');\n  }\n  var len = others.length;\n\n  while (--len >= 0) {\n    if (value < others[len]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * is.minimum\n * Test if `value` is less than `others` values.\n *\n * @param {Number} value value to test\n * @param {Array} others values to compare with\n * @return {Boolean} true if `value` is less than `others` values\n * @api public\n */\n\nis.minimum = function (value, others) {\n  if (isActualNaN(value)) {\n    throw new TypeError('NaN is not a valid value');\n  } else if (!is.arraylike(others)) {\n    throw new TypeError('second argument must be array-like');\n  }\n  var len = others.length;\n\n  while (--len >= 0) {\n    if (value > others[len]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * is.nan\n * Test if `value` is not a number.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is not a number, false otherwise\n * @api public\n */\n\nis.nan = function (value) {\n  return !is.number(value) || value !== value;\n};\n\n/**\n * is.even\n * Test if `value` is an even number.\n *\n * @param {Number} value value to test\n * @return {Boolean} true if `value` is an even number, false otherwise\n * @api public\n */\n\nis.even = function (value) {\n  return is.infinite(value) || (is.number(value) && value === value && value % 2 === 0);\n};\n\n/**\n * is.odd\n * Test if `value` is an odd number.\n *\n * @param {Number} value value to test\n * @return {Boolean} true if `value` is an odd number, false otherwise\n * @api public\n */\n\nis.odd = function (value) {\n  return is.infinite(value) || (is.number(value) && value === value && value % 2 !== 0);\n};\n\n/**\n * is.ge\n * Test if `value` is greater than or equal to `other`.\n *\n * @param {Number} value value to test\n * @param {Number} other value to compare with\n * @return {Boolean}\n * @api public\n */\n\nis.ge = function (value, other) {\n  if (isActualNaN(value) || isActualNaN(other)) {\n    throw new TypeError('NaN is not a valid value');\n  }\n  return !is.infinite(value) && !is.infinite(other) && value >= other;\n};\n\n/**\n * is.gt\n * Test if `value` is greater than `other`.\n *\n * @param {Number} value value to test\n * @param {Number} other value to compare with\n * @return {Boolean}\n * @api public\n */\n\nis.gt = function (value, other) {\n  if (isActualNaN(value) || isActualNaN(other)) {\n    throw new TypeError('NaN is not a valid value');\n  }\n  return !is.infinite(value) && !is.infinite(other) && value > other;\n};\n\n/**\n * is.le\n * Test if `value` is less than or equal to `other`.\n *\n * @param {Number} value value to test\n * @param {Number} other value to compare with\n * @return {Boolean} if 'value' is less than or equal to 'other'\n * @api public\n */\n\nis.le = function (value, other) {\n  if (isActualNaN(value) || isActualNaN(other)) {\n    throw new TypeError('NaN is not a valid value');\n  }\n  return !is.infinite(value) && !is.infinite(other) && value <= other;\n};\n\n/**\n * is.lt\n * Test if `value` is less than `other`.\n *\n * @param {Number} value value to test\n * @param {Number} other value to compare with\n * @return {Boolean} if `value` is less than `other`\n * @api public\n */\n\nis.lt = function (value, other) {\n  if (isActualNaN(value) || isActualNaN(other)) {\n    throw new TypeError('NaN is not a valid value');\n  }\n  return !is.infinite(value) && !is.infinite(other) && value < other;\n};\n\n/**\n * is.within\n * Test if `value` is within `start` and `finish`.\n *\n * @param {Number} value value to test\n * @param {Number} start lower bound\n * @param {Number} finish upper bound\n * @return {Boolean} true if 'value' is is within 'start' and 'finish'\n * @api public\n */\nis.within = function (value, start, finish) {\n  if (isActualNaN(value) || isActualNaN(start) || isActualNaN(finish)) {\n    throw new TypeError('NaN is not a valid value');\n  } else if (!is.number(value) || !is.number(start) || !is.number(finish)) {\n    throw new TypeError('all arguments must be numbers');\n  }\n  var isAnyInfinite = is.infinite(value) || is.infinite(start) || is.infinite(finish);\n  return isAnyInfinite || (value >= start && value <= finish);\n};\n\n/**\n * Test object.\n */\n\n/**\n * is.object\n * Test if `value` is an object.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is an object, false otherwise\n * @api public\n */\n\nis.object = function (value) {\n  return value && '[object Object]' === toString.call(value);\n};\n\n/**\n * is.hash\n * Test if `value` is a hash - a plain object literal.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is a hash, false otherwise\n * @api public\n */\n\nis.hash = function (value) {\n  return is.object(value) && value.constructor === Object && !value.nodeType && !value.setInterval;\n};\n\n/**\n * Test regexp.\n */\n\n/**\n * is.regexp\n * Test if `value` is a regular expression.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is a regexp, false otherwise\n * @api public\n */\n\nis.regexp = function (value) {\n  return '[object RegExp]' === toString.call(value);\n};\n\n/**\n * Test string.\n */\n\n/**\n * is.string\n * Test if `value` is a string.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if 'value' is a string, false otherwise\n * @api public\n */\n\nis.string = function (value) {\n  return '[object String]' === toString.call(value);\n};\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var Writable = require('readable-stream/writable');\nvar Readable = require('readable-stream/readable');\nvar peek = require('level-peek');\nvar util = require('util');\nvar once = require('once');\n\nvar EMPTY = new Buffer(0);\nvar ENCODER = {\n\tencode: function(data) {\n\t\treturn typeof data === 'string' ? data = new Buffer(data) : data;\n\t},\n\tdecode: function(data) {\n\t\treturn Buffer.isBuffer(data) ? data : new Buffer(data);\n\t},\n\tbuffer: true,\n\ttype: 'raw'\n};\n\nvar noop = function() {};\n\nvar pad = function(n) {\n\tn = n.toString(16);\n\treturn '00000000'.slice(0, -n.length)+n;\n};\n\nvar expand = function(buf, len) {\n\tvar tmp = new Buffer(len);\n\tbuf.copy(tmp);\n\treturn tmp;\n};\n\nmodule.exports = function(db, opts) {\n\tif (!opts) opts = {};\n\n\tvar blobs = {};\n\n\tvar blockSize = opts.blockSize || 65536;\n\tvar maxBatch = opts.batch || 100;\n\tvar blank = new Buffer(blockSize);\n\n\tdb.put('\\x00', 'ignore', noop); // memdown#12 workaround\n\n\tvar reservations = {};\n\tvar mutateBlock = function(key, offset, block, append, cb) {\n\t\tvar release = function() {\n\t\t\tif (!--reservations[key].locks) delete reservations[key];\n\t\t};\n\n\t\tvar onreservation = function(r) {\n\t\t\tr.locks++;\n\n\t\t\tif (!r.block && !offset) {\n\t\t\t\tr.block = block;\n\t\t\t\tcb(null, r.block, release);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!r.block) r.block = new Buffer(blockSize);\n\t\t\tif (r.block.length < offset + block.length) r.block = expand(r.block, offset + block.length);\n\n\t\t\tblock.copy(r.block, offset);\n\n\t\t\tif (!append && offset + block.length < r.block.length) r.block = r.block.slice(0, offset+block.length);\n\t\t\tcb(null, r.block, release);\n\t\t};\n\n\t\tif (reservations[key]) return onreservation(reservations[key]);\n\n\t\tdb.get(key, {valueEncoding:ENCODER}, function(err, block) {\n\t\t\tif (err && !err.notFound) return cb(err);\n\t\t\tif (!reservations[key]) reservations[key] = {locks:0, block:block};\n\t\t\tonreservation(reservations[key]);\n\t\t});\n\t};\n\n\tvar WriteStream = function(name, opts) {\n\t\tif (!(this instanceof WriteStream)) return new WriteStream(name, opts);\n\t\tif (!opts) opts = {};\n\n\t\tthis.name = name;\n\t\tthis.blocks = [];\n\t\tthis.batch = [];\n\t\tthis.bytesWritten = 0;\n\t\tthis.truncate = !opts.append;\n\t\tthis.append = opts.append;\n\n\t\tthis._shouldInitAppend = this.append && opts.start === undefined;\n\t\tthis._destroyed = false;\n\t\tthis._init(opts.start || 0);\n\n\t\tWritable.call(this);\n\t};\n\n\tutil.inherits(WriteStream, Writable);\n\n\tWriteStream.prototype._init = function(start) {\n\t\tthis.blockIndex = (start / blockSize) | 0;\n\t\tthis.blockOffset = start - this.blockIndex * blockSize;\n\t\tthis.blockLength = this.blockOffset;\n\t};\n\n\tWriteStream.prototype._flush = function(cb) {\n\t\tif (!this.batch.length) return cb();\n\n\t\tvar key = this.batch[this.batch.length-1].key;\n\t\tvar batch = this.batch;\n\t\tthis.batch = [];\n\n\t\tif (!this.truncate) return db.batch(batch, cb);\n\t\tthis.truncate = false;\n\t\tthis._truncate(batch, key, cb);\n\t};\n\n\tWriteStream.prototype._truncate = function(batch, key, cb) {\n\t\tcb = once(cb);\n\n\t\tvar dels = [];\n\t\tvar keys = db.createKeyStream({\n\t\t\tstart: key,\n\t\t\tend: this.name+'\\xff\\xff'\n\t\t});\n\n\t\tkeys.on('error', cb);\n\n\t\tkeys.on('data', function(key) {\n\t\t\tdels.push({type:'del', key:key});\n\t\t});\n\n\t\tkeys.on('end', function() {\n\t\t\tdels.push.apply(dels, batch);\n\t\t\tdb.batch(dels, cb);\n\t\t});\n\t};\n\n\tWriteStream.prototype._writeBlock = function(cb) {\n\t\tvar block = this.blocks.length === 1 ? this.blocks[0] : Buffer.concat(this.blocks, this.blockLength - this.blockOffset);\n\t\tvar index = this.blockIndex;\n\t\tvar offset = this.blockOffset;\n\t\tvar self = this;\n\n\t\tthis.blockOffset = 0;\n\t\tthis.blockLength = 0;\n\t\tthis.blockIndex++;\n\t\tthis.blocks = [];\n\n\t\tvar key = this.name+'\\xff'+pad(index);\n\n\t\tvar append = function(block, force, cb) {\n\t\t\tif (block.length) {\n\t\t\t\tself.batch.push({\n\t\t\t\t\ttype: 'put',\n\t\t\t\t\tkey: key,\n\t\t\t\t\tvalue: block,\n\t\t\t\t\tvalueEncoding: ENCODER\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!force && self.batch.length < maxBatch) return cb();\n\t\t\treturn self._flush(cb);\n\t\t};\n\n\t\tif (!offset && block.length === blockSize) return append(block, false, cb);\n\t\tif (!offset && !this.append) return append(block, false, cb);\n\n\t\t// partial write\n\t\tmutateBlock(key, offset, block, this.append, function(err, block, release) {\n\t\t\tif (err) return cb(err);\n\t\t\tappend(block, true, function(err) {\n\t\t\t\trelease();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tWriteStream.prototype._initAppend = function(data, enc, cb) {\n\t\tvar self = this;\n\t\tthis._shouldInitAppend = false;\n\t\tblobs.size(this.name, function(err, size) {\n\t\t\tif (err) return cb(err);\n\t\t\tself._init(size);\n\t\t\tself._write(data, enc, cb);\n\t\t});\n\t};\n\n\tWriteStream.prototype._write = function(data, enc, cb) {\n\t\tif (!data.length || this._destroyed) return cb();\n\t\tif (this._shouldInitAppend) return this._initAppend(data, enc, cb);\n\n\t\tvar self = this;\n\t\tvar overflow;\n\t\tvar free = blockSize - this.blockLength;\n\n\t\tvar done = function(err) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (overflow) return self._write(overflow, enc, cb);\n\t\t\tcb();\n\t\t};\n\n\t\tif (data.length > free) {\n\t\t\toverflow = data.slice(free);\n\t\t\tdata = data.slice(0, free);\n\t\t}\n\n\t\tthis.bytesWritten += data.length;\n\t\tthis.blockLength += data.length;\n\t\tthis.blocks.push(data);\n\n\t\tif (data.length < free) return done();\n\t\tthis._writeBlock(done);\n\t};\n\n\tWriteStream.prototype.destroy = function() {\n\t\tif (this._destroyed) return;\n\t\tthis._destroyed = true;\n\t\tprocess.nextTick(this.emit.bind(this, 'close'));\n\t};\n\n\tWriteStream.prototype.end = function(data) {\n\t\tvar self = this;\n\t\tvar args = arguments;\n\n\t\tif (data && typeof data !== 'function') {\n\t\t\tthis.write(data);\n\t\t\tdata = EMPTY;\n\t\t}\n\n\t\tthis.write(EMPTY, function() {\n\t\t\tself._writeBlock(function(err) {\n\t\t\t\tif (err) return self.emit('error', err);\n\t\t\t\tself._flush(function(err) {\n\t\t\t\t\tif (err) return self.emit('error', err);\n\t\t\t\t\tWritable.prototype.end.apply(self, args);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tvar ReadStream = function(name, opts) {\n\t\tif (!opts) opts = {};\n\n\t\tvar self = this;\n\n\t\tvar start = opts.start || 0;\n\t\tvar blockIndex = (start / blockSize) | 0;\n\t\tvar blockOffset = start - blockIndex * blockSize;\n\t\tvar key = name+'\\xff'+pad(blockIndex);\n\n\t\tthis.name = name;\n\t\tthis._missing = (typeof opts.end === 'number' ? opts.end : Infinity) - start + 1;\n\t\tthis._paused = false;\n\t\tthis._destroyed = false;\n\n\t\tthis._reader = db.createReadStream({\n\t\t\tstart: key,\n\t\t\tend: name+'\\xff\\xff',\n\t\t\tvalueEncoding: ENCODER\n\t\t});\n\n\t\tvar onblock = function(val) {\n\t\t\tkey = name+'\\xff'+pad(++blockIndex);\n\n\t\t\tif (!self._missing) return false;\n\n\t\t\tif (blockOffset) {\n\t\t\t\tval = val.slice(blockOffset);\n\t\t\t\tblockOffset = 0;\n\t\t\t\tif (!val.length) return true;\n\t\t\t}\n\n\t\t\tif (val.length > self._missing) val = val.slice(0, self._missing);\n\n\t\t\tself._missing -= val.length;\n\t\t\tself._pause(!self.push(val));\n\n\t\t\treturn !!self._missing;\n\t\t};\n\n\t\tthis._reader.on('data', function(data) {\n\t\t\twhile (data.key > key) {\n\t\t\t\tif (!onblock(blank)) return;\n\t\t\t}\n\n\t\t\tonblock(data.value);\n\t\t});\n\n\t\tthis._reader.on('error', function(err) {\n\t\t\tself.emit('error', err);\n\t\t});\n\n\t\tthis._reader.on('end', function() {\n\t\t\tself.push(null);\n\t\t});\n\n\t\tReadable.call(this);\n\t};\n\n\tutil.inherits(ReadStream, Readable);\n\n\tReadStream.prototype.destroy = function() {\n\t\tif (this._destroyed) return;\n\t\tthis._destroyed = true;\n\t\tthis._reader.destroy();\n\t\tprocess.nextTick(this.emit.bind(this, 'close'));\n\t};\n\n\tReadStream.prototype._pause = function(paused) {\n\t\tif (this._paused === paused) return;\n\t\tthis._paused = paused;\n\t\tif (this._paused) this._reader.pause();\n\t\telse this._reader.resume();\n\t};\n\n\tReadStream.prototype._read = function() {\n\t\tthis._pause(false);\n\t};\n\n\tblobs.remove = function(name, cb) {\n\t\tcb = once(cb || noop);\n\n\t\tvar batch = [];\n\t\tvar keys = db.createKeyStream({\n\t\t\tstart: name+'\\xff',\n\t\t\tend: name+'\\xff\\xff'\n\t\t});\n\n\t\tkeys.on('error', cb);\n\n\t\tkeys.on('data', function(key) {\n\t\t\tbatch.push({type:'del', key:key});\n\t\t});\n\n\t\tkeys.on('end', function() {\n\t\t\tdb.batch(batch, cb);\n\t\t});\n\t};\n\n\tblobs.size = function(name, cb) {\n\t\tpeek.last(db, {\n\t\t\tstart: name+'\\xff',\n\t\t\tend: name+'\\xff\\xff',\n\t\t\tvalueEncoding:ENCODER\n\t\t}, function(err, latest, val) {\n\t\t\tif (err && err.message === 'range not found') return cb(null, 0);\n\t\t\tif (err) return cb(err);\n\t\t\tif (latest.slice(0, name.length+1) !== name+'\\xff') return cb(null, 0);\n\n\t\t\tcb(null, parseInt(latest.toString().slice(name.length+1), 16) * blockSize + val.length);\n\t\t});\n\t};\n\n\tblobs.write = function(name, data, opts, cb) {\n\t\tif (typeof opts === 'function') return blobs.write(name, data, null, opts);\n\t\tif (!opts) opts = {};\n\t\tif (!cb) cb = noop;\n\n\t\tvar ws = blobs.createWriteStream(name, opts);\n\n\t\tws.on('error', cb);\n\t\tws.on('finish', function() {\n\t\t\tcb();\n\t\t});\n\n\t\tws.write(data);\n\t\tws.end();\n\t}\n\n\tblobs.read = function(name, opts, cb) {\n\t\tif (typeof opts === 'function') return blobs.read(name, null, opts);\n\t\tif (!opts) opts = {};\n\n\t\tvar rs = blobs.createReadStream(name, opts);\n\t\tvar list = [];\n\n\t\trs.on('error', cb);\n\t\trs.on('data', function(data) {\n\t\t\tlist.push(data);\n\t\t});\n\t\trs.on('end', function() {\n\t\t\tcb(null, list.length === 1 ? list[0] : Buffer.concat(list));\n\t\t});\n\t};\n\n\tblobs.createReadStream = function(name, opts) {\n\t\treturn new ReadStream(name, opts);\n\t};\n\n\tblobs.createWriteStream = function(name, opts) {\n\t\treturn new WriteStream(name, opts);\n\t};\n\n\treturn blobs;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n","var createError = require('errno').create\nvar LevelUPError = createError('LevelUPError')\nvar NotFoundError = createError('NotFoundError', LevelUPError)\n\nNotFoundError.prototype.notFound = true\nNotFoundError.prototype.status = 404\n\nmodule.exports = {\n  LevelUPError: LevelUPError,\n  InitializationError: createError('InitializationError', LevelUPError),\n  OpenError: createError('OpenError', LevelUPError),\n  ReadError: createError('ReadError', LevelUPError),\n  WriteError: createError('WriteError', LevelUPError),\n  NotFoundError: NotFoundError,\n  EncodingError: createError('EncodingError', LevelUPError)\n}\n","var errno = require('errno');\n\nObject.keys(errno.code).forEach(function(code) {\n\tvar e = errno.code[code];\n\n\texports[code] = function(path) {\n\t\tvar err = new Error(code+', '+e.description+(path ? ' \\''+path+'\\'' : ''));\n\t\terr.errno = e.errno;\n\t\terr.code = code;\n\t\terr.path = path;\n\t\treturn err;\n\t};\n});","var fwd = require('fwd-stream');\nvar sublevel = require('level-sublevel');\nvar blobs = require('level-blobs');\nvar peek = require('level-peek');\nvar once = require('once');\nvar octal = require('octal')\nvar errno = require('./errno');\nvar paths = require('./paths');\nvar watchers = require('./watchers');\n\nvar nextTick = function(cb, err, val) {\n\tprocess.nextTick(function() {\n\t\tcb(err, val);\n\t});\n};\n\nvar noop = function() {};\n\nmodule.exports = function(db, opts) {\n\tvar fs = {};\n\n\tdb = sublevel(db);\n\n\tvar bl = blobs(db.sublevel('blobs'), opts);\n\tvar ps = paths(db.sublevel('stats'));\n\tvar links = db.sublevel('links');\n\n\tvar listeners = watchers();\n\tvar fds = [];\n\n\tvar now = Date.now();\n\tvar inc = function() {\n\t\treturn ++now;\n\t};\n\n\tfs.mkdir = function(key, mode, cb) {\n\t\tif (typeof mode === 'function') return fs.mkdir(key, null, mode);\n\t\tif (!mode) mode = octal(777);\n\t\tif (!cb) cb = noop;\n\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err && err.code !== 'ENOENT') return cb(err);\n\t\t\tif (stat) return cb(errno.EEXIST(key));\n\n\t\t\tps.put(key, {\n\t\t\t\ttype:'directory',\n\t\t\t\tmode: mode,\n\t\t\t\tsize: 4096\n\t\t\t}, listeners.cb(key, cb));\n\t\t});\n\t};\n\n\tfs.rmdir = function(key, cb) {\n\t\tif (!cb) cb = noop;\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tfs.readdir(key, function(err, files) {\n\t\t\t\tif (err) return cb(err);\n\t\t\t\tif (files.length) return cb(errno.ENOTEMPTY(key));\n\t\t\t\tps.del(key, listeners.cb(key, cb));\n\t\t\t});\n\t\t});\n\n\t};\n\n\tfs.readdir = function(key, cb) {\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (!stat) return cb(errno.ENOENT(key));\n\t\t\tif (!stat.isDirectory()) return cb(errno.ENOTDIR(key));\n\t\t\tps.list(key, cb);\n\t\t});\n\t};\n\n\tvar stat = function(key, lookup, cb) {\n\t\tlookup(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (!stat.isFile()) return cb(null, stat);\n\t\t\tvar blob = stat && stat.blob || key;\n\t\t\tbl.size(blob, function(err, size) {\n\t\t\t\tif (err) return cb(err);\n\t\t\t\tstat.size = size;\n\t\t\t\tcb(null, stat);\n\t\t\t});\n\t\t});\n\t};\n\n\tfs.stat = function(key, cb) {\n\t\tstat(key, ps.follow, cb);\n\t};\n\n\tfs.lstat = function(key, cb) {\n\t\tstat(key, ps.get, cb);\n\t};\n\n\tfs.exists = function(key, cb) {\n\t\tps.follow(key, function(err) {\n\t\t\tcb(!err);\n\t\t});\n\t};\n\n\tvar chmod = function(key, lookup, mode, cb) {\n\t\tif (!cb) cb = noop;\n\t\tlookup(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tps.update(key, {mode:mode}, listeners.cb(key, cb));\n\t\t});\n\t};\n\n\tfs.chmod = function(key, mode, cb) {\n\t\tchmod(key, ps.follow, mode, cb);\n\t};\n\n\tfs.lchmod = function(key, mode, cb) {\n\t\tchmod(key, ps.get, mode, cb);\n\t};\n\n\tvar chown = function(key, lookup, uid, gid, cb) {\n\t\tif (!cb) cb = noop;\n\t\tlookup(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tps.update(key, {uid:uid, gid:gid}, listeners.cb(key, cb));\n\t\t});\n\t};\n\n\tfs.chown = function(key, uid, gid, cb) {\n\t\tchown(key, ps.follow, uid, gid, cb);\n\t};\n\n\tfs.lchown = function(key, uid, gid, cb) {\n\t\tchown(key, ps.get, uid, gid, cb);\n\t};\n\n\tfs.utimes = function(key, atime, mtime, cb) {\n\t\tif (!cb) cb = noop;\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tvar upd = {};\n\t\t\tif (atime) upd.atime = atime;\n\t\t\tif (mtime) upd.mtime = mtime;\n\t\t\tps.update(key, upd, listeners.cb(key, cb));\n\t\t});\n\t};\n\n\tfs.rename = function(from, to, cb) {\n\t\tif (!cb) cb = noop;\n\n\t\tps.follow(from, function(err, statFrom, from) {\n\t\t\tif (err) return cb(err);\n\n\t\t\tvar rename = function() {\n\t\t\t\tcb = listeners.cb(to, listeners.cb(from, cb));\n\t\t\t\tps.put(to, statFrom, function(err) {\n\t\t\t\t\tif (err) return cb(err);\n\t\t\t\t\tps.del(from, cb);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tps.follow(to, function(err, statTo, to) {\n\t\t\t\tif (err && err.code !== 'ENOENT') return cb(err);\n\t\t\t\tif (!statTo) return rename();\n\t\t\t\tif (statFrom.isDirectory() !== statTo.isDirectory()) return cb(errno.EISDIR(from));\n\n\t\t\t\tif (statTo.isDirectory()) {\n\t\t\t\t\tfs.readdir(to, function(err, list) {\n\t\t\t\t\t\tif (err) return cb(err);\n\t\t\t\t\t\tif (list.length) return cb(errno.ENOTEMPTY(from));\n\t\t\t\t\t\trename();\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\trename();\n\t\t\t});\n\t\t});\n\t};\n\n\tfs.realpath = function(key, cache, cb) {\n\t\tif (typeof cache === 'function') return fs.realpath(key, null, cache);\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tcb(null, key);\n\t\t});\n\t};\n\n\tfs.writeFile = function(key, data, opts, cb) {\n\t\tif (typeof opts === 'function') return fs.writeFile(key, data, null, opts);\n\t\tif (typeof opts === 'string') opts = {encoding:opts};\n\t\tif (!opts) opts = {};\n\t\tif (!cb) cb = noop;\n\n\t\tif (!Buffer.isBuffer(data)) data = new Buffer(data, opts.encoding || 'utf-8');\n\n\t\tvar flags = opts.flags || 'w';\n\t\topts.append = flags[0] !== 'w';\n\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err && err.code !== 'ENOENT') return cb(err);\n\t\t\tif (stat && stat.isDirectory()) return cb(errno.EISDIR(key));\n\t\t\tif (stat && flags[1] === 'x') return cb(errno.EEXIST(key));\n\n\t\t\tvar blob = stat && stat.blob || key;\n\t\t\tps.writable(key, function(err) {\n\t\t\t\tif (err) return cb(err);\n\n\t\t\t\tbl.write(blob, data, opts, function(err) {\n\t\t\t\t\tif (err) return cb(err);\n\n\t\t\t\t\tps.put(key, {\n\t\t\t\t\t\tctime: stat && stat.ctime,\n\t\t\t\t\t\tmtime: new Date(),\n\t\t\t\t\t\tmode: opts.mode || octal(666),\n\t\t\t\t\t\ttype:'file'\n\t\t\t\t\t}, listeners.cb(key, cb));\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tfs.appendFile = function(key, data, opts, cb) {\n\t\tif (typeof opts === 'function') return fs.appendFile(key, data, null, opts);\n\t\tif (typeof opts === 'string') opts = {encoding:opts};\n\t\tif (!opts) opts = {};\n\n\t\topts.flags = 'a';\n\t\tfs.writeFile(key, data, opts, cb);\n\t};\n\n\tfs.unlink = function(key, cb) {\n\t\tif (!cb) cb = noop;\n\n\t\tps.get(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (stat.isDirectory()) return cb(errno.EISDIR(key));\n\n\t\t\tvar clean = function(target) {\n\t\t\t\tpeek(links, {start:target+'\\xff', end:target+'\\xff\\xff'}, function(err) {\n\t\t\t\t\tif (err) return bl.remove(target, cb); // no more links\n\t\t\t\t\tcb();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar onlink = function() {\n\t\t\t\tvar target = stat.link.slice(0, stat.link.indexOf('\\xff'));\n\t\t\t\tlinks.del(stat.link, function(err) {\n\t\t\t\t\tif (err) return cb(err);\n\t\t\t\t\tclean(target);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tps.del(key, listeners.cb(key, function(err) {\n\t\t\t\tif (err) return cb(err);\n\t\t\t\tif (stat.link) return onlink();\n\t\t\t\tlinks.del(key+'\\xff', function(err) {\n\t\t\t\t\tif (err) return cb(err);\n\t\t\t\t\tclean(key);\n\t\t\t\t});\n\t\t\t}));\n\t\t});\n\t};\n\n\tfs.readFile = function(key, opts, cb) {\n\t\tif (typeof opts === 'function') return fs.readFile(key, null, opts);\n\t\tif (typeof opts === 'string') opts = {encoding:opts};\n\t\tif (!opts) opts = {};\n\n\t\tvar encoding = opts.encoding || 'binary';\n\t\tvar flag = opts.flag || 'r';\n\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (stat.isDirectory()) return cb(errno.EISDIR(key));\n\n\t\t\tvar blob = stat && stat.blob || key;\n\t\t\tbl.read(blob, function(err, data) {\n\t\t\t\tif (err) return cb(err);\n\t\t\t\tcb(null, opts.encoding ? data.toString(opts.encoding) : data);\n\t\t\t});\n\t\t});\n\t};\n\n\tfs.createReadStream = function(key, opts) {\n\t\tif (!opts) opts = {};\n\n\t\tvar closed = false;\n\t\tvar rs = fwd.readable(function(cb) {\n\t\t\tps.follow(key, function(err, stat, key) {\n\t\t\t\tif (err) return cb(err);\n\t\t\t\tif (stat.isDirectory()) return cb(errno.EISDIR(key));\n\n\t\t\t\tvar blob = stat && stat.blob || key;\n\t\t\t\tvar r = bl.createReadStream(blob, opts);\n\n\t\t\t\trs.emit('open');\n\t\t\t\tr.on('end', function() {\n\t\t\t\t\tprocess.nextTick(function() {\n\t\t\t\t\t\tif (!closed) rs.emit('close');\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tcb(null, r);\n\t\t\t});\n\t\t});\n\n\t\trs.on('close', function() {\n\t\t\tclosed = true;\n\t\t});\n\n\t\treturn rs;\n\t};\n\n\tfs.createWriteStream = function(key, opts) {\n\t\tif (!opts) opts = {};\n\n\t\tvar flags = opts.flags || 'w';\n\t\tvar closed = false;\n\t\tvar mode = opts.mode || octal(666);\n\n\t\topts.append = flags[0] === 'a';\n\n\t\tvar ws = fwd.writable(function(cb) {\n\t\t\tps.follow(key, function(err, stat, key) {\n\t\t\t\tif (err && err.code !== 'ENOENT') return cb(err);\n\t\t\t\tif (stat && stat.isDirectory()) return cb(errno.EISDIR(key));\n\t\t\t\tif (stat && flags[1] === 'x') return cb(errno.EEXIST(key));\n\n\t\t\t\tvar blob = stat && stat.blob || key;\n\t\t\t\tps.writable(blob, function(err) {\n\t\t\t\t\tif (err) return cb(err);\n\n\t\t\t\t\tvar ctime = stat ? stat.ctime : new Date();\n\t\t\t\t\tvar s = {\n\t\t\t\t\t\tctime: ctime,\n\t\t\t\t\t\tmtime: new Date(),\n\t\t\t\t\t\tmode: mode,\n\t\t\t\t\t\ttype:'file'\n\t\t\t\t\t};\n\n\t\t\t\t\tps.put(key, s, function(err) {\n\t\t\t\t\t\tif (err) return cb(err);\n\n\t\t\t\t\t\tvar w = bl.createWriteStream(blob, opts);\n\n\t\t\t\t\t\tws.emit('open');\n\t\t\t\t\t\tw.on('finish', function() {\n\t\t\t\t\t\t\ts.mtime = new Date();\n\t\t\t\t\t\t\tps.put(key, s, function() {\n\t\t\t\t\t\t\t\tlisteners.change(key);\n\t\t\t\t\t\t\t\tif (!closed) ws.emit('close');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tcb(null, w);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tws.on('close', function() {\n\t\t\tclosed = true;\n\t\t});\n\n\t\treturn ws;\n\t};\n\n\tfs.truncate = function(key, len, cb) {\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err) return cb(err);\n\n\t\t\tvar blob = stat && stat.blob || key;\n\t\t\tbl.size(blob, function(err, size) {\n\t\t\t\tif (err) return cb(err);\n\n\t\t\t\tps.writable(key, function(err) {\n\t\t\t\t\tif (err) return cb(err);\n\n\t\t\t\t\tcb = once(listeners.cb(key, cb));\n\t\t\t\t\tif (!len) return bl.remove(blob, cb);\n\n\t\t\t\t\tvar ws = bl.createWriteStream(blob, {\n\t\t\t\t\t\tstart:size < len ? len-1 : len\n\t\t\t\t\t});\n\n\t\t\t\t\tws.on('error', cb);\n\t\t\t\t\tws.on('finish', cb);\n\n\t\t\t\t\tif (size < len) ws.write(new Buffer([0]));\n\t\t\t\t\tws.end();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tfs.watchFile = function(key, opts, cb) {\n\t\tif (typeof opts === 'function') return fs.watchFile(key, null, opts);\n\t\treturn listeners.watch(ps.normalize(key), cb);\n\t};\n\n\tfs.unwatchFile = function(key, cb) {\n\t\tlisteners.unwatch(ps.normalize(key), cb);\n\t};\n\n\tfs.watch = function(key, opts, cb) {\n\t\tif (typeof opts === 'function') return fs.watch(key, null, opts)\n\t\treturn listeners.watcher(ps.normalize(key), cb);\n\t};\n\n\tfs.notify = function(cb) {\n\t\tlisteners.on('change', cb)\n\t}\n\n\tfs.open = function(key, flags, mode, cb) {\n\t\tif (typeof mode === 'function') return fs.open(key, flags, null, mode);\n\n\t\tps.follow(key, function(err, stat, key) {\n\t\t\tif (err && err.code !== 'ENOENT') return cb(err);\n\n\t\t\tvar fl = flags[0];\n\t\t\tvar plus = flags[1] === '+' || flags[2] === '+';\n\t\t\tvar blob = stat && stat.blob || key;\n\n\t\t\tvar f = {\n\t\t\t\tkey: key,\n\t\t\t\tblob: blob,\n\t\t\t\tmode: mode || octal(666),\n\t\t\t\treadable: fl === 'r' || ((fl === 'w' || fl === 'a') && plus),\n\t\t\t\twritable: fl === 'w' || fl === 'a' || (fl === 'r' && plus),\n\t\t\t\tappend: fl === 'a'\n\t\t\t};\n\n\t\t\tif (fl === 'r' && err) return cb(err);\n\t\t\tif (flags[1] === 'x' && stat) return cb(errno.EEXIST(key));\n\t\t\tif (stat && stat.isDirectory()) return cb(errno.EISDIR(key));\n\n\t\t\tbl.size(blob, function(err, size) {\n\t\t\t\tif (err) return cb(err);\n\n\t\t\t\tif (f.append) f.writePos = size;\n\n\t\t\t\tps.writable(key, function(err) {\n\t\t\t\t\tif (err) return cb(err);\n\n\t\t\t\t\tvar onready = function(err) {\n\t\t\t\t\t\tif (err) return cb(err);\n\n\t\t\t\t\t\tvar i = fds.indexOf(null);\n\t\t\t\t\t\tif (i === -1) i = 10+fds.push(fds.length+10)-1;\n\n\t\t\t\t\t\tf.fd = i;\n\t\t\t\t\t\tfds[i] = f;\n\t\t\t\t\t\tlisteners.change(key);\n\n\t\t\t\t\t\tcb(null, f.fd);\n\t\t\t\t\t};\n\n\t\t\t\t\tvar ontruncate = function(err) {\n\t\t\t\t\t\tif (err) return cb(err);\n\t\t\t\t\t\tif (stat) return onready();\n\t\t\t\t\t\tps.put(blob, {ctime:stat && stat.ctime, type:'file'}, onready);\n\t\t\t\t\t};\n\n\t\t\t\t\tif (!f.append && f.writable) return bl.remove(blob, ontruncate);\n\t\t\t\t\tontruncate();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tfs.close = function(fd, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!f) return nextTick(cb, errno.EBADF());\n\n\t\tfds[fd] = null;\n\t\tnextTick(listeners.cb(f.key, cb));\n\t};\n\n\tfs.write = function(fd, buf, off, len, pos, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!cb) cb = noop;\n\t\tif (!f || !f.writable) return nextTick(cb, errno.EBADF());\n\n\t\tif (pos === null) pos = f.writePos || 0;\n\n\t\tvar slice = buf.slice(off, off+len);\n\t\tf.writePos = pos + slice.length;\n\n\t\tbl.write(f.blob, slice, {start:pos, append:true}, function(err) {\n\t\t\tif (err) return cb(err);\n\t\t\tcb(null, len, buf);\n\t\t});\n\t};\n\n\tfs.read = function(fd, buf, off, len, pos, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!cb) cb = noop;\n\t\tif (!f || !f.readable) return nextTick(cb, errno.EBADF());\n\n\t\tif (pos === null) pos = fs.readPos || 0;\n\n\t\tbl.read(f.blob, {start:pos, end:pos+len-1}, function(err, read) {\n\t\t\tif (err) return cb(err);\n\t\t\tvar slice = read.slice(0, len);\n\t\t\tslice.copy(buf, off);\n\t\t\tfs.readPos = pos+slice.length;\n\t\t\tcb(null, slice.length, buf);\n\t\t});\n\t};\n\n\tfs.fsync = function(fd, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!cb) cb = noop;\n\t\tif (!f || !f.writable) return nextTick(cb, errno.EBADF());\n\n\t\tnextTick(cb);\n\t};\n\n\tfs.ftruncate = function(fd, len, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!cb) cb = noop;\n\t\tif (!f) return nextTick(cb, errno.EBADF());\n\n\t\tfs.truncate(f.blob, len, cb);\n\t};\n\n\tfs.fchown = function(fd, uid, gid, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!cb) cb = noop;\n\t\tif (!f) return nextTick(cb, errno.EBADF());\n\n\t\tfs.chown(f.key, uid, gid, cb);\n\t};\n\n\tfs.fchmod = function(fd, mode, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!cb) cb = noop;\n\t\tif (!f) return nextTick(cb, errno.EBADF());\n\n\t\tfs.chmod(f.key, mode, cb);\n\t};\n\n\tfs.futimes = function(fd, atime, mtime, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!cb) cb = noop;\n\t\tif (!f) return nextTick(cb, errno.EBADF());\n\n\t\tfs.utimes(f.key, atime, mtime, cb);\n\t};\n\n\tfs.fstat = function(fd, cb) {\n\t\tvar f = fds[fd];\n\t\tif (!f) return nextTick(cb, errno.EBADF());\n\n\t\tfs.stat(f.key, cb);\n\t};\n\n\tfs.symlink = function(target, name, cb) {\n\t\tif (!cb) cb = noop;\n\t\tps.follow(target, function(err, stat, target) {\n\t\t\tif (err) return cb(err);\n\t\t\tps.get(name, function(err, stat) {\n\t\t\t\tif (err && err.code !== 'ENOENT') return cb(err);\n\t\t\t\tif (stat) return cb(errno.EEXIST(name));\n\t\t\t\tps.put(name, {type:'symlink', target:target, mode:octal(777)}, cb);\n\t\t\t});\n\t\t});\n\t};\n\n\tfs.readlink = function(key, cb) {\n\t\tps.get(key, function(err, stat) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (!stat.target) return cb(errno.EINVAL(key));\n\t\t\tcb(null, stat.target);\n\t\t});\n\t};\n\n\tfs.link = function(target, name, cb) {\n\t\tif (!cb) cb = noop;\n\t\tps.follow(target, function(err, stat, target) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (!stat.isFile()) return cb(errno.EINVAL(target));\n\t\t\tps.get(name, function(err, st) {\n\t\t\t\tif (err && err.code !== 'ENOENT') return cb(err);\n\t\t\t\tif (st) return cb(errno.EEXIST(name));\n\t\t\t\tvar link = target+'\\xff'+inc();\n\t\t\t\tlinks.put(target+'\\xff', target, function(err) {\n\t\t\t\t\tif (err) return cb(err);\n\t\t\t\t\tlinks.put(link, target, function(err) {\n\t\t\t\t\t\tif (err) return cb(err);\n\t\t\t\t\t\tps.put(name, {type:'file', link:link, blob:target, mode:stat.mode}, cb);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\treturn fs;\n};\n","module.exports = hasKeys\n\nfunction hasKeys(source) {\n    return source !== null &&\n        (typeof source === \"object\" ||\n        typeof source === \"function\")\n}\n","var hasKeys = require(\"./has-keys\")\n\nmodule.exports = extend\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        if (!hasKeys(source)) {\n            continue\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var path = require('path');\nvar once = require('once');\nvar concat = require('concat-stream');\nvar octal = require('octal')\nvar stat = require('./stat');\nvar xtend = require('xtend');\nvar errno = require('./errno');\n\nvar ROOT = stat({\n\ttype: 'directory',\n\tmode: octal(777),\n\tsize: 4096\n});\n\nvar normalize = function(key) {\n\tkey = key[0] === '/' ? key : '/' + key;\n\tkey = path.normalize(key);\n\tif (key === '/') return key;\n\treturn key[key.length-1] === '/' ? key.slice(0, -1) : key;\n};\n\nvar prefix = function(key) {\n\tvar depth = key.split('/').length.toString(36);\n\treturn '0000000000'.slice(depth.length)+depth+key;\n};\n\nmodule.exports = function(db) {\n\tvar that = {};\n\n\tthat.normalize = normalize;\n\n\tthat.get = function(key, cb) {\n\t\tkey = normalize(key);\n\t\tif (key === '/') return process.nextTick(cb.bind(null, null, ROOT, '/'));\n\t\tdb.get(prefix(key), {valueEncoding:'json'}, function(err, doc) {\n\t\t\tif (err && err.notFound) return cb(errno.ENOENT(key), null, key);\n\t\t\tif (err) return cb(err, null, key);\n\t\t\tcb(null, stat(doc), key);\n\t\t});\n\t};\n\n\tthat.writable = function(key, cb) {\n\t\tkey = normalize(key);\n\t\tif (key === '/') return process.nextTick(cb.bind(null, errno.EPERM(key)));\n\t\tthat.follow(path.dirname(key), function(err, parent) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (!parent.isDirectory()) return cb(errno.ENOTDIR(key));\n\t\t\tcb(null, key);\n\t\t});\n\t};\n\n\tthat.list = function(key, cb) {\n\t\tkey = normalize(key);\n\n\t\tvar start = prefix(key === '/' ? key : key + '/');\n\t\tvar keys = db.createKeyStream({start: start, end: start+'\\xff'});\n\n\t\tcb = once(cb);\n\n\t\tkeys.on('error', cb);\n\t\tkeys.pipe(concat({encoding:'object'}, function(files) {\n\t\t\tfiles = files.map(function(file) {\n\t\t\t\treturn file.split('/').pop();\n\t\t\t});\n\n\t\t\tcb(null, files);\n\t\t}));\n\t};\n\n\tvar resolve = function(dir, cb) {\n\t\tvar root = '/';\n\t\tvar parts = dir.split('/').slice(1);\n\n\t\tvar loop = function() {\n\t\t\tthat.get(path.join(root, parts.shift()), function(err, doc, key) {\n\t\t\t\tif (err) return cb(err, doc, dir);\n\t\t\t\troot = doc.target || key;\n\t\t\t\tif (!parts.length) return cb(null, doc, key);\n\t\t\t\tloop();\n\t\t\t});\n\t\t};\n\n\t\tloop();\n\t};\n\n\tthat.follow = function(key, cb) {\n\t\tresolve(normalize(key), function loop(err, doc, key) {\n\t\t\tif (err) return cb(err, null, key);\n\t\t\tif (doc.target) return that.get(doc.target, loop);\n\t\t\tcb(null, stat(doc), key);\n\t\t});\n\t};\n\n\tthat.update = function(key, opts, cb) {\n\t\tthat.get(key, function(err, doc, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (key === '/') return cb(errno.EPERM(key));\n\t\t\tthat.put(key, xtend(doc, opts), cb);\n\t\t});\n\t};\n\n\tthat.put = function(key, opts, cb) {\n\t\tthat.writable(key, function(err, key) {\n\t\t\tif (err) return cb(err);\n\t\t\tdb.put(prefix(key), stat(opts), {valueEncoding:'json'}, cb);\n\t\t});\n\t};\n\n\tthat.del = function(key, cb) {\n\t\tkey = normalize(key);\n\t\tif (key === '/') return process.nextTick(cb.bind(null, errno.EPERM(key)));\n\t\tdb.del(prefix(key), cb);\n\t};\n\n\treturn that;\n};\n","var toDate = function(date) {\n\tif (!date) return new Date();\n\tif (typeof date === 'string') return new Date(date);\n\treturn date;\n};\n\nvar Stat = function(opts) {\n\tthis.uid = opts.uid || 0;\n\tthis.gid = opts.gid || 0;\n\tthis.mode = opts.mode || 0;\n\tthis.size = opts.size || 0;\n\tthis.mtime = toDate(opts.mtime);\n\tthis.atime = toDate(opts.atime);\n\tthis.ctime = toDate(opts.ctime);\n\tthis.type = opts.type;\n\tthis.target = opts.target;\n\tthis.link = opts.link;\n\tthis.blob = opts.blob;\n};\n\nStat.prototype.isDirectory = function() {\n\treturn this.type === 'directory';\n};\n\nStat.prototype.isFile = function() {\n\treturn this.type === 'file';\n};\n\nStat.prototype.isBlockDevice = function() {\n\treturn false;\n};\n\nStat.prototype.isCharacterDevice = function() {\n\treturn false;\n};\n\nStat.prototype.isSymbolicLink = function() {\n\treturn this.type === 'symlink';\n};\n\nStat.prototype.isFIFO = function() {\n\treturn false;\n};\n\nStat.prototype.isSocket = function() {\n\treturn false;\n};\n\nmodule.exports = function(opts) {\n\treturn new Stat(opts);\n};","var events = require('events');\n\nmodule.exports = function() {\n\tvar listeners = {};\n\tvar that = new events.EventEmitter();\n\n\tthat.watch = function(key, cb) {\n\t\tif (!listeners[key]) {\n\t\t\tlisteners[key] = new events.EventEmitter();\n\t\t\tlisteners[key].setMaxListeners(0);\n\t\t}\n\n\t\tif (cb) listeners[key].on('change', cb);\n\t\treturn listeners[key];\n\t};\n\n\tthat.watcher = function(key, cb) {\n\t\tvar watcher = new events.EventEmitter();\n\t\tvar onchange = function() {\n\t\t\twatcher.emit('change', 'change', key);\n\t\t};\n\n\t\tthat.watch(key, onchange);\n\t\tif (cb) watcher.on('change', cb);\n\t\twatcher.close = function() {\n\t\t\tthat.unwatch(key, onchange);\n\t\t};\n\n\t\treturn watcher;\n\t};\n\n\tthat.unwatch = function(key, cb) {\n\t\tif (!listeners[key]) return;\n\t\tif (cb) listeners[key].removeListener('change', cb);\n\t\telse listeners[key].removeAllListeners('change');\n\t\tif (!listeners[key].listeners('change').length) delete listeners[key];;\n\t};\n\n\tthat.change = function(key) {\n\t\tif (listeners[key]) listeners[key].emit('change');\n\t\tthat.emit('change', key);\n\t};\n\n\tthat.cb = function(key, cb) {\n\t\treturn function(err, val) {\n\t\t\tif (key) that.change(key);\n\t\t\tif (cb) cb(err, val);\n\t\t};\n\t};\n\n\treturn that;\n};","\nmodule.exports = \nfunction fixRange(opts) {\n  var reverse = opts.reverse\n  var end     = opts.end\n  var start   = opts.start\n\n  var range = [start, end]\n  if(start != null && end != null)\n    range.sort()\n  if(reverse)\n    range = range.reverse()\n\n  opts.start   = range[0]\n  opts.end     = range[1]\n  return opts\n}\n\n","var ranges = require('string-range')\n\nmodule.exports = function (db) {\n\n  if(db.hooks) {\n    return     \n  }\n\n  var posthooks = []\n  var prehooks  = []\n\n  function getPrefix (p) {\n    return p && (\n        'string' ===   typeof p        ? p\n      : 'string' ===   typeof p.prefix ? p.prefix\n      : 'function' === typeof p.prefix ? p.prefix()\n      :                                  ''\n      )\n  }\n\n  function getKeyEncoding (db) {\n    if(db && db._getKeyEncoding)\n      return db._getKeyEncoding(db)\n  }\n\n  function getValueEncoding (db) {\n    if(db && db._getValueEncoding)\n      return db._getValueEncoding(db)\n  }\n\n  function remover (array, item) {\n    return function () {\n      var i = array.indexOf(item)\n      if(!~i) return false        \n      array.splice(i, 1)\n      return true\n    }\n  }\n\n  db.hooks = {\n    post: function (prefix, hook) {\n      if(!hook) hook = prefix, prefix = ''\n      var h = {test: ranges.checker(prefix), hook: hook}\n      posthooks.push(h)\n      return remover(posthooks, h)\n    },\n    pre: function (prefix, hook) {\n      if(!hook) hook = prefix, prefix = ''\n      var h = {\n        test: ranges.checker(prefix),\n        hook: hook,\n        safe: false !== prefix.safe\n      }\n      prehooks.push(h)\n      return remover(prehooks, h)\n    },\n    posthooks: posthooks,\n    prehooks: prehooks\n  }\n\n  //POST HOOKS\n\n  function each (e) {\n    if(e && e.type) {\n      posthooks.forEach(function (h) {\n        if(h.test(e.key)) h.hook(e)\n      })\n    }\n  }\n\n  db.on('put', function (key, val) {\n    each({type: 'put', key: key, value: val})\n  })\n  db.on('del', function (key, val) {\n    each({type: 'del', key: key, value: val})\n  })\n  db.on('batch', function onBatch (ary) {\n    ary.forEach(each)\n  })\n\n  //PRE HOOKS\n\n  var put = db.put\n  var del = db.del\n  var batch = db.batch\n\n  function callHooks (isBatch, b, opts, cb) {\n    try {\n    b.forEach(function hook(e, i) {\n      prehooks.forEach(function (h) {\n        if(h.test(String(e.key))) {\n          //optimize this?\n          //maybe faster to not create a new object each time?\n          //have one object and expose scope to it?\n          var context = {\n            add: function (ch, db) {\n              if(typeof ch === 'undefined') {\n                return this\n              }\n              if(ch === false)\n                return delete b[i]\n              var prefix = (\n                getPrefix(ch.prefix) || \n                getPrefix(db) || \n                h.prefix || ''\n              )  \n              //don't leave a circular json object there incase using multilevel.\n              if(prefix) ch.prefix = prefix\n              ch.key = prefix + ch.key\n              if(h.safe && h.test(String(ch.key))) {\n                //this usually means a stack overflow.\n                throw new Error('prehook cannot insert into own range')\n              }\n              var ke = ch.keyEncoding   || getKeyEncoding(ch.prefix)\n              var ve = ch.valueEncoding || getValueEncoding(ch.prefix)\n              if(ke) ch.keyEncoding = ke\n              if(ve) ch.valueEncoding = ve\n\n              b.push(ch)\n              hook(ch, b.length - 1)\n              return this\n            },\n            put: function (ch, db) {\n              if('object' === typeof ch) ch.type = 'put'\n              return this.add(ch, db)\n            },\n            del: function (ch, db) {\n              if('object' === typeof ch) ch.type = 'del'\n              return this.add(ch, db)\n            },\n            veto: function () {\n              return this.add(false)\n            }\n          }\n          h.hook.call(context, e, context.add, b)\n        }\n      })\n    })\n    } catch (err) {\n      return (cb || opts)(err)\n    }\n    b = b.filter(function (e) {\n      return e && e.type //filter out empty items\n    })\n\n    if(b.length == 1 && !isBatch) {\n      var change = b[0]\n      return change.type == 'put' \n        ? put.call(db, change.key, change.value, opts, cb) \n        : del.call(db, change.key, opts, cb)  \n    }\n    return batch.call(db, b, opts, cb)\n  }\n\n  db.put = function (key, value, opts, cb ) {\n    var batch = [{key: key, value: value, type: 'put'}]\n    return callHooks(false, batch, opts, cb)\n  }\n\n  db.del = function (key, opts, cb) {\n    var batch = [{key: key, type: 'del'}]\n    return callHooks(false, batch, opts, cb)\n  }\n\n  db.batch = function (batch, opts, cb) {\n    return callHooks(true, batch, opts, cb)\n  }\n}\n","var inherits = require('inherits')\nvar Readable = require('readable-stream').Readable\nvar extend = require('xtend')\n\nmodule.exports = ReadStream\ninherits(ReadStream, Readable)\n\nfunction ReadStream (iterator, options) {\n  if (!(this instanceof ReadStream)) return new ReadStream(iterator, options)\n  options = options || {}\n  Readable.call(this, extend(options, {\n    objectMode: true\n  }))\n  this._iterator = iterator\n  this._options = options\n  this.on('end', this.destroy.bind(this, null, null))\n}\n\nReadStream.prototype._read = function () {\n  var self = this\n  var options = this._options\n  if (this.destroyed) return\n\n  this._iterator.next(function (err, key, value) {\n    if (self.destroyed) return\n    if (err) return self.destroy(err)\n\n    if (key === undefined && value === undefined) {\n      self.push(null)\n    } else if (options.keys !== false && options.values === false) {\n      self.push(key)\n    } else if (options.keys === false && options.values !== false) {\n      self.push(value)\n    } else {\n      self.push({ key: key, value: value })\n    }\n  })\n}\n\nReadStream.prototype._destroy = function (err, callback) {\n  var self = this\n\n  this._iterator.end(function (err2) {\n    callback(err || err2)\n\n    // TODO when the next readable-stream (mirroring node v10) is out:\n    // remove this. Since nodejs/node#19836, streams always emit close.\n    process.nextTick(function () {\n      self.emit('close')\n    })\n  })\n}\n","/* global indexedDB */\n\n'use strict'\n\nmodule.exports = Level\n\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\nvar inherits = require('inherits')\nvar Iterator = require('./iterator')\nvar mixedToBuffer = require('./util/mixed-to-buffer')\nvar setImmediate = require('./util/immediate')\nvar support = require('./util/support')\n\nvar DEFAULT_PREFIX = 'level-js-'\n\nfunction Level (location, opts) {\n  if (!(this instanceof Level)) return new Level(location, opts)\n  AbstractLevelDOWN.call(this, location)\n  opts = opts || {}\n\n  this.prefix = opts.prefix || DEFAULT_PREFIX\n  this.version = parseInt(opts.version || 1, 10)\n}\n\ninherits(Level, AbstractLevelDOWN)\n\n// Detect binary and array key support (IndexedDB Second Edition)\nLevel.binaryKeys = support.binaryKeys(indexedDB)\nLevel.arrayKeys = support.arrayKeys(indexedDB)\n\nLevel.prototype._open = function (options, callback) {\n  var req = indexedDB.open(this.prefix + this.location, this.version)\n  var self = this\n\n  req.onerror = function () {\n    callback(req.error || new Error('unknown error'))\n  }\n\n  req.onsuccess = function () {\n    self.db = req.result\n    callback()\n  }\n\n  req.onupgradeneeded = function (ev) {\n    var db = ev.target.result\n\n    if (!db.objectStoreNames.contains(self.location)) {\n      db.createObjectStore(self.location)\n    }\n  }\n}\n\nLevel.prototype.store = function (mode) {\n  var transaction = this.db.transaction([this.location], mode)\n  return transaction.objectStore(this.location)\n}\n\nLevel.prototype.await = function (request, callback) {\n  var transaction = request.transaction\n\n  // Take advantage of the fact that a non-canceled request error aborts\n  // the transaction. I.e. no need to listen for \"request.onerror\".\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    callback(null, request.result)\n  }\n}\n\nLevel.prototype._get = function (key, options, callback) {\n  var store = this.store('readonly')\n\n  try {\n    var req = store.get(key)\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err)\n    })\n  }\n\n  this.await(req, function (err, value) {\n    if (err) return callback(err)\n\n    if (value === undefined) {\n      // 'NotFound' error, consistent with LevelDOWN API\n      return callback(new Error('NotFound'))\n    }\n\n    if (options.asBuffer) {\n      value = mixedToBuffer(value)\n    }\n\n    callback(null, value)\n  })\n}\n\nLevel.prototype._del = function (key, options, callback) {\n  var store = this.store('readwrite')\n\n  try {\n    var req = store.delete(key)\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err)\n    })\n  }\n\n  this.await(req, callback)\n}\n\nLevel.prototype._put = function (key, value, options, callback) {\n  var store = this.store('readwrite')\n\n  try {\n    // Will throw a DataError or DataCloneError if the environment\n    // does not support serializing the key or value respectively.\n    var req = store.put(value, key)\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err)\n    })\n  }\n\n  this.await(req, callback)\n}\n\n// Valid key types in IndexedDB Second Edition:\n//\n// - Number, except NaN. Includes Infinity and -Infinity\n// - Date, except invalid (NaN)\n// - String\n// - ArrayBuffer or a view thereof (typed arrays). In level-js we also support\n//   Buffer (which is an Uint8Array) (and the primary binary type of Level).\n// - Array, except cyclical and empty (e.g. Array(10)). Elements must be valid\n//   types themselves.\nLevel.prototype._serializeKey = function (key) {\n  if (Buffer.isBuffer(key)) {\n    return Level.binaryKeys ? key : key.toString()\n  } else if (Array.isArray(key)) {\n    return Level.arrayKeys ? key.map(this._serializeKey, this) : String(key)\n  } else if (typeof key === 'boolean' || (typeof key === 'number' && isNaN(key))) {\n    // These types are invalid per the IndexedDB spec and ideally we'd treat\n    // them that way, but they're valid per the current abstract test suite.\n    return String(key)\n  } else {\n    return key\n  }\n}\n\nLevel.prototype._serializeValue = function (value) {\n  return value == null ? '' : value\n}\n\nLevel.prototype._iterator = function (options) {\n  return new Iterator(this.db, this.location, options)\n}\n\nLevel.prototype._batch = function (operations, options, callback) {\n  if (operations.length === 0) return setImmediate(callback)\n\n  var store = this.store('readwrite')\n  var transaction = store.transaction\n  var index = 0\n  var error\n\n  transaction.onabort = function () {\n    callback(error || transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    callback()\n  }\n\n  // Wait for a request to complete before making the next, saving CPU.\n  function loop () {\n    var op = operations[index++]\n    var key = op.key\n\n    try {\n      var req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n    } catch (err) {\n      error = err\n      transaction.abort()\n      return\n    }\n\n    if (index < operations.length) {\n      req.onsuccess = loop\n    }\n  }\n\n  loop()\n}\n\nLevel.prototype._close = function (callback) {\n  this.db.close()\n  setImmediate(callback)\n}\n\nLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix\n    prefix = DEFAULT_PREFIX\n  }\n  var request = indexedDB.deleteDatabase(prefix + location)\n  request.onsuccess = function () {\n    callback()\n  }\n  request.onerror = function (err) {\n    callback(err)\n  }\n}\n","/* global IDBKeyRange */\n\n'use strict'\n\nvar inherits = require('inherits')\nvar AbstractIterator = require('abstract-leveldown').AbstractIterator\nvar ltgt = require('ltgt')\nvar mixedToBuffer = require('./util/mixed-to-buffer')\nvar setImmediate = require('./util/immediate')\nvar noop = function () {}\n\nmodule.exports = Iterator\n\nfunction Iterator (db, location, options) {\n  AbstractIterator.call(this, db)\n\n  this._limit = options.limit\n  this._count = 0\n  this._callback = null\n  this._cache = []\n  this._completed = false\n  this._aborted = false\n  this._error = null\n  this._transaction = null\n\n  this._keyAsBuffer = options.keyAsBuffer\n  this._valueAsBuffer = options.valueAsBuffer\n\n  if (this._limit === 0) {\n    this._completed = true\n    return\n  }\n\n  try {\n    var keyRange = this.createKeyRange(options)\n  } catch (e) {\n    // The lower key is greater than the upper key.\n    // IndexedDB throws an error, but we'll just return 0 results.\n    this._completed = true\n    return\n  }\n\n  this.createIterator(location, keyRange, options.reverse)\n}\n\ninherits(Iterator, AbstractIterator)\n\nIterator.prototype.createKeyRange = function (options) {\n  var lower = ltgt.lowerBound(options)\n  var upper = ltgt.upperBound(options)\n  var lowerOpen = ltgt.lowerBoundExclusive(options)\n  var upperOpen = ltgt.upperBoundExclusive(options)\n\n  if (lower !== undefined && upper !== undefined) {\n    return IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)\n  } else if (lower !== undefined) {\n    return IDBKeyRange.lowerBound(lower, lowerOpen)\n  } else if (upper !== undefined) {\n    return IDBKeyRange.upperBound(upper, upperOpen)\n  } else {\n    return null\n  }\n}\n\nIterator.prototype.createIterator = function (location, keyRange, reverse) {\n  var self = this\n  var transaction = this.db.transaction([location], 'readonly')\n  var store = transaction.objectStore(location)\n  var req = store.openCursor(keyRange, reverse ? 'prev' : 'next')\n\n  req.onsuccess = function (ev) {\n    var cursor = ev.target.result\n    if (cursor) self.onItem(cursor)\n  }\n\n  this._transaction = transaction\n\n  // If an error occurs (on the request), the transaction will abort.\n  transaction.onabort = function () {\n    self.onAbort(self._transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    self.onComplete()\n  }\n}\n\nIterator.prototype.onItem = function (cursor) {\n  this._cache.push(cursor.key, cursor.value)\n\n  if (this._limit <= 0 || ++this._count < this._limit) {\n    cursor['continue']()\n  }\n\n  this.maybeNext()\n}\n\nIterator.prototype.onAbort = function (err) {\n  this._aborted = true\n  this._error = err\n  this.maybeNext()\n}\n\nIterator.prototype.onComplete = function () {\n  this._completed = true\n  this.maybeNext()\n}\n\nIterator.prototype.maybeNext = function () {\n  if (this._callback) {\n    this._next(this._callback)\n    this._callback = null\n  }\n}\n\nIterator.prototype._next = function (callback) {\n  if (this._aborted) {\n    // The error should be picked up by either next() or end().\n    var err = this._error\n    this._error = null\n\n    setImmediate(function () {\n      callback(err)\n    })\n  } else if (this._cache.length > 0) {\n    var key = this._cache.shift()\n    var value = this._cache.shift()\n\n    if (this._keyAsBuffer) key = mixedToBuffer(key)\n    if (this._valueAsBuffer) value = mixedToBuffer(value)\n\n    setImmediate(function () {\n      callback(null, key, value)\n    })\n  } else if (this._completed) {\n    setImmediate(callback)\n  } else {\n    this._callback = callback\n  }\n}\n\nIterator.prototype._end = function (callback) {\n  if (this._aborted || this._completed) {\n    var err = this._error\n\n    setImmediate(function () {\n      callback(err)\n    })\n\n    return\n  }\n\n  // Don't advance the cursor anymore, and the transaction will complete\n  // on its own in the next tick. This approach is much cleaner than calling\n  // transaction.abort() with its unpredictable event order.\n  this.onItem = noop\n  this.onAbort = callback\n  this.onComplete = callback\n}\n","module.exports = require('immediate')\n","'use strict'\n\nvar toBuffer = require('typedarray-to-buffer')\n\nmodule.exports = function (value) {\n  if (value instanceof Uint8Array) return toBuffer(value)\n  else if (value instanceof ArrayBuffer) return Buffer.from(value)\n  else return Buffer.from(String(value))\n}\n","'use strict'\n\nexports.test = function (key) {\n  return function test (impl) {\n    try {\n      impl.cmp(key, 0)\n      return true\n    } catch (err) {\n      return false\n    }\n  }\n}\n\nexports.binaryKeys = exports.test(new Uint8Array(0))\nexports.arrayKeys = exports.test([1])\n","var fixRange = require('level-fix-range')\n//get the first/last record in a range\n\nexports = module.exports = peek\nexports.first    = first\nexports.last     = last\n\nfunction once(emitter, events, listener) {\n  var remove = []\n  events.forEach(function (e) {\n    function onEvent (arg) {\n      if(listener(e, arg) === false) return\n      remove.forEach(function (r) {\n        r()\n      })\n    }\n    emitter.on(e, onEvent)\n    remove.push(function () {\n      emitter.removeListener(e, onEvent)\n    })\n  })\n  return emitter\n}\n\n\nfunction peek (db, opts, cb) {\n  opts.limit = opts.reverse ? 2 : 1\n  var stream = once(db.createReadStream(opts), \n    ['data', 'error', 'end'],\n    function (event, data) {\n      if(opts.reverse && data && opts.start \n        && (data.key.toString() > opts.start))\n        return false\n      if(event == 'error') cb(data)\n      else if(event == 'end') cb(new Error('range not found'), null, null)\n      else cb(null, data.key, data.value)\n    })\n}\n\nfunction first (db, opts, cb) {\n  if (!cb) {\n    cb = opts;\n    opts = {};\n  }\n  opts.reverse = false\n  return peek(db, fixRange(opts), cb)  \n}\n\n//SO, this is pretty horrible,\n//but it's works around an issue here\n//https://github.com/rvagg/node-levelup/issues/110\n\nfunction last (db, opts, cb) {\n  if (!cb) {\n    cb = opts;\n    opts = {};\n  }\n  var start = opts.start\n  opts.reverse = true\n  return peek(db, fixRange(opts), function (err, key, value) {\n    if(err) {\n      var _start = opts.start\n      opts.start = null\n      peek (db, opts, function (_, key, value) {\n        if(!key) return cb(err, null, null)\n        var _key = key.toString()\n        if(_key <= _start && (!opts.end || _key >= opts.end))\n          cb(_, key, value)\n        else cb(err, null, null)\n      })\n    }\n    else cb(err, key, value)\n  })\n}\n\n","function addOperation (type, key, value, options) {\n  var operation = {\n    type: type,\n    key: key,\n    value: value,\n    options: options\n  }\n\n  if (options && options.prefix) {\n    operation.prefix = options.prefix\n    delete options.prefix\n  }\n\n  this._operations.push(operation)\n\n  return this\n}\n\nfunction Batch(sdb) {\n  this._operations = []\n  this._sdb = sdb\n\n  this.put = addOperation.bind(this, 'put')\n  this.del = addOperation.bind(this, 'del')\n}\n\nvar B = Batch.prototype\n\n\nB.clear = function () {\n  this._operations = []\n}\n\nB.write = function (cb) {\n  this._sdb.batch(this._operations, cb)\n}\n\nmodule.exports = Batch\n","var EventEmitter = require('events').EventEmitter\nvar next         = process.nextTick\nvar SubDb        = require('./sub')\nvar Batch        = require('./batch')\nvar fixRange     = require('level-fix-range')\n\nvar Hooks   = require('level-hooks')\n\nmodule.exports   = function (_db, options) {\n  function DB () {}\n  DB.prototype = _db\n  var db = new DB()\n\n  if (db.sublevel) return db\n\n  options = options || {}\n\n  //use \\xff (255) as the seperator,\n  //so that sections of the database will sort after the regular keys\n  var sep = options.sep = options.sep || '\\xff'\n  db._options = options\n\n  Hooks(db)\n\n  db.sublevels = {}\n\n  db.sublevel = function (prefix, options) {\n    if(db.sublevels[prefix])\n      return db.sublevels[prefix]\n    return new SubDb(db, prefix, options || this._options)\n  }\n\n  db.methods = {}\n\n  db.prefix = function (key) {\n    return '' + (key || '')\n  }\n\n  db.pre = function (range, hook) {\n    if(!hook)\n      hook = range, range = {\n        max  : sep\n      }\n    return db.hooks.pre(range, hook)\n  }\n\n  db.post = function (range, hook) {\n    if(!hook)\n      hook = range, range = {\n        max : sep\n      }\n    return db.hooks.post(range, hook)\n  }\n\n  function safeRange(fun) {\n    return function (opts) {\n      opts = opts || {}\n      opts = fixRange(opts)\n\n      if(opts.reverse) opts.start = opts.start || sep\n      else             opts.end   = opts.end || sep\n\n      return fun.call(db, opts)\n    }\n  }\n\n  db.readStream =\n  db.createReadStream  = safeRange(db.createReadStream)\n  db.keyStream =\n  db.createKeyStream   = safeRange(db.createKeyStream)\n  db.valuesStream =\n  db.createValueStream = safeRange(db.createValueStream)\n\n  var batch = db.batch\n  db.batch = function (changes, opts, cb) {\n    if(!Array.isArray(changes))\n      return new Batch(db)\n    changes.forEach(function (e) {\n      if(e.prefix) {\n        if('function' === typeof e.prefix.prefix)\n          e.key = e.prefix.prefix(e.key)\n        else if('string'  === typeof e.prefix)\n          e.key = e.prefix + e.key\n      }\n    })\n    batch.call(db, changes, opts, cb)\n  }\n  return db\n}\n\n","var clone = require('clone')\n\nmodule.exports = \nfunction fixRange(opts) {\n  opts = clone(opts)\n\n  var reverse = opts.reverse\n  var end     = opts.max || opts.end\n  var start   = opts.min || opts.start\n\n  var range = [start, end]\n  if(start != null && end != null)\n    range.sort()\n  if(reverse)\n    range = range.reverse()\n\n  opts.start   = range[0]\n  opts.end     = range[1]\n\n  delete opts.min\n  delete opts.max\n\n  return opts\n}\n","module.exports = Object.keys || require('./shim');\n\n","(function () {\n\t\"use strict\";\n\n\t// modified from https://github.com/kriskowal/es5-shim\n\tvar has = Object.prototype.hasOwnProperty,\n\t\tis = require('is'),\n\t\tforEach = require('foreach'),\n\t\thasDontEnumBug = !({'toString': null}).propertyIsEnumerable('toString'),\n\t\tdontEnums = [\n\t\t\t\"toString\",\n\t\t\t\"toLocaleString\",\n\t\t\t\"valueOf\",\n\t\t\t\"hasOwnProperty\",\n\t\t\t\"isPrototypeOf\",\n\t\t\t\"propertyIsEnumerable\",\n\t\t\t\"constructor\"\n\t\t],\n\t\tkeysShim;\n\n\tkeysShim = function keys(object) {\n\t\tif (!is.object(object) && !is.array(object)) {\n\t\t\tthrow new TypeError(\"Object.keys called on a non-object\");\n\t\t}\n\n\t\tvar name, theKeys = [];\n\t\tfor (name in object) {\n\t\t\tif (has.call(object, name)) {\n\t\t\t\ttheKeys.push(name);\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tforEach(dontEnums, function (dontEnum) {\n\t\t\t\tif (has.call(object, dontEnum)) {\n\t\t\t\t\ttheKeys.push(dontEnum);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn theKeys;\n\t};\n\n\tmodule.exports = keysShim;\n}());\n\n","var Keys = require(\"object-keys\")\nvar hasKeys = require(\"./has-keys\")\n\nmodule.exports = extend\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        if (!hasKeys(source)) {\n            continue\n        }\n\n        var keys = Keys(source)\n\n        for (var j = 0; j < keys.length; j++) {\n            var name = keys[j]\n            target[name] = source[name]\n        }\n    }\n\n    return target\n}\n","var EventEmitter = require('events').EventEmitter\nvar inherits     = require('util').inherits\nvar ranges       = require('string-range')\nvar fixRange     = require('level-fix-range')\nvar xtend        = require('xtend')\nvar Batch        = require('./batch')\n\ninherits(SubDB, EventEmitter)\n\nfunction SubDB (db, prefix, options) {\n  if('string' === typeof options) {\n    console.error('db.sublevel(name, seperator<string>) is depreciated')\n    console.error('use db.sublevel(name, {sep: separator})) if you must')\n    options = {sep: options}\n  }\n  if(!(this instanceof SubDB)) return new SubDB(db, prefix, options)\n  if(!db)     throw new Error('must provide db')\n  if(!prefix) throw new Error('must provide prefix')\n\n  options = options || {}\n  options.sep = options.sep || '\\xff'\n\n  this._parent = db\n  this._options = options\n  this.options = options\n  this._prefix = prefix\n  this._root = root(this)\n  db.sublevels[prefix] = this\n  this.sublevels = {}\n  this.methods = {}\n  var self = this\n  this.hooks = {\n    pre: function () {\n      return self.pre.apply(self, arguments)\n    },\n    post: function () {\n      return self.post.apply(self, arguments)\n    }\n  }\n}\n\nvar SDB = SubDB.prototype\n\nSDB._key = function (key) {\n  var sep = this._options.sep\n  return sep\n    + this._prefix\n    + sep\n    + key\n}\n\nSDB._getOptsAndCb = function (opts, cb) {\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = {}\n  }\n  return { opts: xtend(opts, this._options), cb: cb }\n}\n\nSDB.sublevel = function (prefix, options) {\n  if(this.sublevels[prefix])\n    return this.sublevels[prefix]\n  return new SubDB(this, prefix, options || this._options)\n}\n\nSDB.put = function (key, value, opts, cb) {\n  var res = this._getOptsAndCb(opts, cb)\n  this._root.put(this.prefix(key), value, res.opts, res.cb)\n}\n\nSDB.get = function (key, opts, cb) {\n  var res = this._getOptsAndCb(opts, cb)\n  this._root.get(this.prefix(key), res.opts, res.cb)\n}\n\nSDB.del = function (key, opts, cb) {\n  var res = this._getOptsAndCb(opts, cb)\n  this._root.del(this.prefix(key), res.opts, res.cb)\n}\n\nSDB.batch = function (changes, opts, cb) {\n  if(!Array.isArray(changes))\n    return new Batch(this)\n  var self = this,\n      res = this._getOptsAndCb(opts, cb)\n  changes.forEach(function (ch) {\n\n    //OH YEAH, WE NEED TO VALIDATE THAT UPDATING THIS KEY/PREFIX IS ALLOWED\n    if('string' === typeof ch.prefix)\n      ch.key = ch.prefix + ch.key\n    else\n      ch.key = (ch.prefix || self).prefix(ch.key)\n\n    if(ch.prefix) ch.prefix = null\n  })\n  this._root.batch(changes, res.opts, res.cb)\n}\n\nSDB._getKeyEncoding = function () {\n  if(this.options.keyEncoding)\n    return this.options.keyEncoding\n  if(this._parent && this._parent._getKeyEncoding)\n    return this._parent._getKeyEncoding()\n}\n\nSDB._getValueEncoding = function () {\n  if(this.options.valueEncoding)\n    return this.options.valueEncoding\n  if(this._parent && this._parent._getValueEncoding)\n    return this._parent._getValueEncoding()\n}\n\nSDB.prefix = function (key) {\n  var sep = this._options.sep\n  return this._parent.prefix() + sep + this._prefix + sep + (key || '')\n}\n\nSDB.keyStream =\nSDB.createKeyStream = function (opts) {\n  opts = opts || {}\n  opts.keys = true\n  opts.values = false\n  return this.createReadStream(opts)\n}\n\nSDB.valueStream =\nSDB.createValueStream = function (opts) {\n  opts = opts || {}\n  opts.keys = false\n  opts.values = true\n  opts.keys = false\n  return this.createReadStream(opts)\n}\n\nfunction selectivelyMerge(_opts, opts) {\n  [ 'valueEncoding'\n  , 'encoding'\n  , 'keyEncoding'\n  , 'reverse'\n  , 'values'\n  , 'keys'\n  , 'limit'\n  , 'fillCache'\n  ]\n  .forEach(function (k) {\n    if (opts.hasOwnProperty(k)) _opts[k] = opts[k]\n  })\n}\n\nSDB.readStream =\nSDB.createReadStream = function (opts) {\n  opts = opts || {}\n  var r = root(this)\n  var p = this.prefix()\n\n  var _opts = ranges.prefix(opts, p)\n  selectivelyMerge(_opts, xtend(opts, this._options))\n\n  var s = r.createReadStream(_opts)\n\n  if(_opts.values === false) {\n    var read = s.read\n    if (read) {\n      s.read = function (size) {\n        var val = read.call(this, size)\n        if (val) val = val.substring(p.length)\n        return val\n      }\n    } else {\n      var emit = s.emit\n      s.emit = function (event, val) {\n        if(event === 'data') {\n          emit.call(this, 'data', val.substring(p.length))\n        } else\n          emit.call(this, event, val)\n      }\n    }\n    return s\n  } else if(_opts.keys === false)\n    return s\n  else {\n    var read = s.read\n    if (read) {\n      s.read = function (size) {\n        var d = read.call(this, size)\n        if (d) d.key = d.key.substring(p.length)\n        return d\n      }\n    } else {\n      s.on('data', function (d) {\n        //mutate the prefix!\n        //this doesn't work for createKeyStream admittedly.\n        d.key = d.key.substring(p.length)\n      })\n    }\n    return s\n  }\n}\n\n\nSDB.writeStream =\nSDB.createWriteStream = function () {\n  var r = root(this)\n  var p = this.prefix()\n  var ws = r.createWriteStream.apply(r, arguments)\n  var write = ws.write\n\n  var encoding = this._options.encoding\n  var valueEncoding = this._options.valueEncoding\n  var keyEncoding = this._options.keyEncoding\n\n  // slight optimization, if no encoding was specified at all,\n  // which will be the case most times, make write not check at all\n  var nocheck = !encoding && !valueEncoding && !keyEncoding\n\n  ws.write = nocheck\n    ? function (data) {\n        data.key = p + data.key\n        return write.call(ws, data)\n      }\n    : function (data) {\n        data.key = p + data.key\n\n        // not merging all options here since this happens on every write and things could get slowed down\n        // at this point we only consider encoding important to propagate\n        if (encoding && typeof data.encoding === 'undefined')\n          data.encoding = encoding\n        if (valueEncoding && typeof data.valueEncoding === 'undefined')\n          data.valueEncoding = valueEncoding\n        if (keyEncoding && typeof data.keyEncoding === 'undefined')\n          data.keyEncoding = keyEncoding\n\n        return write.call(ws, data)\n      }\n  return ws\n}\n\nSDB.approximateSize = function () {\n  var r = root(db)\n  return r.approximateSize.apply(r, arguments)\n}\n\nfunction root(db) {\n  if(!db._parent) return db\n  return root(db._parent)\n}\n\nSDB.pre = function (range, hook) {\n  if(!hook) hook = range, range = null\n  range = ranges.prefix(range, this.prefix(), this._options.sep)\n  var r = root(this._parent)\n  var p = this.prefix()\n  return r.hooks.pre(fixRange(range), function (ch, add, batch) {\n    hook({\n      key: ch.key.substring(p.length),\n      value: ch.value,\n      type: ch.type\n    }, function (ch, _p) {\n      //maybe remove the second add arg now\n      //that op can have prefix?\n      add(ch, ch.prefix ? _p : (_p || p))\n    }, batch)\n  })\n}\n\nSDB.post = function (range, hook) {\n  if(!hook) hook = range, range = null\n  var r = root(this._parent)\n  var p = this.prefix()\n  range = ranges.prefix(range, p, this._options.sep)\n  return r.hooks.post(fixRange(range), function (data) {\n    hook({key: data.key.substring(p.length), value: data.value, type: data.type})\n  })\n}\n\nvar exports = module.exports = SubDB\n\n","var WriteError = require('level-errors').WriteError\nvar promisify = require('./promisify')\nvar getCallback = require('./common').getCallback\nvar getOptions = require('./common').getOptions\n\nfunction Batch (levelup) {\n  this._levelup = levelup\n  this.batch = levelup.db.batch()\n  this.ops = []\n  this.length = 0\n}\n\nBatch.prototype.put = function (key, value) {\n  try {\n    this.batch.put(key, value)\n  } catch (e) {\n    throw new WriteError(e)\n  }\n\n  this.ops.push({ type: 'put', key: key, value: value })\n  this.length++\n\n  return this\n}\n\nBatch.prototype.del = function (key) {\n  try {\n    this.batch.del(key)\n  } catch (err) {\n    throw new WriteError(err)\n  }\n\n  this.ops.push({ type: 'del', key: key })\n  this.length++\n\n  return this\n}\n\nBatch.prototype.clear = function () {\n  try {\n    this.batch.clear()\n  } catch (err) {\n    throw new WriteError(err)\n  }\n\n  this.ops = []\n  this.length = 0\n\n  return this\n}\n\nBatch.prototype.write = function (options, callback) {\n  var levelup = this._levelup\n  var ops = this.ops\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  options = getOptions(options)\n\n  try {\n    this.batch.write(options, function (err) {\n      if (err) { return callback(new WriteError(err)) }\n      levelup.emit('batch', ops)\n      callback()\n    })\n  } catch (err) {\n    throw new WriteError(err)\n  }\n\n  return promise\n}\n\nmodule.exports = Batch\n","exports.getCallback = function (options, callback) {\n  return typeof options === 'function' ? options : callback\n}\n\nexports.getOptions = function (options) {\n  return typeof options === 'object' && options !== null ? options : {}\n}\n","var EventEmitter = require('events').EventEmitter\nvar inherits = require('util').inherits\nvar extend = require('xtend')\nvar DeferredLevelDOWN = require('deferred-leveldown')\nvar IteratorStream = require('level-iterator-stream')\nvar Batch = require('./batch')\nvar errors = require('level-errors')\nvar assert = require('assert')\nvar promisify = require('./promisify')\nvar getCallback = require('./common').getCallback\nvar getOptions = require('./common').getOptions\n\nvar WriteError = errors.WriteError\nvar ReadError = errors.ReadError\nvar NotFoundError = errors.NotFoundError\nvar OpenError = errors.OpenError\nvar InitializationError = errors.InitializationError\n\n// Possible AbstractLevelDOWN#status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\nfunction LevelUP (db, options, callback) {\n  if (!(this instanceof LevelUP)) {\n    return new LevelUP(db, options, callback)\n  }\n\n  var error\n\n  EventEmitter.call(this)\n  this.setMaxListeners(Infinity)\n\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  options = options || {}\n\n  if (!db || typeof db !== 'object') {\n    error = new InitializationError('First argument must be an abstract-leveldown compliant store')\n    if (typeof callback === 'function') {\n      return process.nextTick(callback, error)\n    }\n    throw error\n  }\n\n  assert.equal(typeof db.status, 'string', '.status required, old abstract-leveldown')\n\n  this.options = getOptions(options)\n  this._db = db\n  this.db = new DeferredLevelDOWN(db)\n  this.open(callback)\n}\n\nLevelUP.prototype.emit = EventEmitter.prototype.emit\nLevelUP.prototype.once = EventEmitter.prototype.once\ninherits(LevelUP, EventEmitter)\n\nLevelUP.prototype.open = function (callback) {\n  var self = this\n  var promise\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (this.isOpen()) {\n    process.nextTick(callback, null, self)\n    return promise\n  }\n\n  if (this._isOpening()) {\n    this.once('open', function () { callback(null, self) })\n    return promise\n  }\n\n  this.emit('opening')\n\n  this.db.open(this.options, function (err) {\n    if (err) {\n      return callback(new OpenError(err))\n    }\n    self.db = self._db\n    callback(null, self)\n    self.emit('open')\n    self.emit('ready')\n  })\n\n  return promise\n}\n\nLevelUP.prototype.close = function (callback) {\n  var self = this\n  var promise\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (this.isOpen()) {\n    this.db.close(function () {\n      self.emit('closed')\n      callback.apply(null, arguments)\n    })\n    this.emit('closing')\n    this.db = new DeferredLevelDOWN(this._db)\n  } else if (this.isClosed()) {\n    process.nextTick(callback)\n  } else if (this.db.status === 'closing') {\n    this.once('closed', callback)\n  } else if (this._isOpening()) {\n    this.once('open', function () {\n      self.close(callback)\n    })\n  }\n\n  return promise\n}\n\nLevelUP.prototype.isOpen = function () {\n  return this.db.status === 'open'\n}\n\nLevelUP.prototype._isOpening = function () {\n  return this.db.status === 'opening'\n}\n\nLevelUP.prototype.isClosed = function () {\n  return (/^clos|new/).test(this.db.status)\n}\n\nLevelUP.prototype.get = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new ReadError('get() requires a key argument')\n  }\n\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if ((/notfound/i).test(err) || err.notFound) {\n        err = new NotFoundError('Key not found in database [' + key + ']', err)\n      } else {\n        err = new ReadError(err)\n      }\n      return callback(err)\n    }\n    callback(null, value)\n  })\n\n  return promise\n}\n\nLevelUP.prototype.put = function (key, value, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('put() requires a key argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.put(key, value, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('put', key, value)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.del = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('del() requires a key argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.del(key, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('del', key)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.batch = function (arr, options, callback) {\n  if (!arguments.length) {\n    return new Batch(this)\n  }\n\n  if (!Array.isArray(arr)) {\n    throw new WriteError('batch() requires an array argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.batch(arr, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('batch', arr)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.iterator = function (options) {\n  return this.db.iterator(options)\n}\n\nLevelUP.prototype.readStream =\nLevelUP.prototype.createReadStream = function (options) {\n  options = extend({ keys: true, values: true }, options)\n  if (typeof options.limit !== 'number') { options.limit = -1 }\n  return new IteratorStream(this.db.iterator(options), options)\n}\n\nLevelUP.prototype.keyStream =\nLevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(extend(options, { keys: true, values: false }))\n}\n\nLevelUP.prototype.valueStream =\nLevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(extend(options, { keys: false, values: true }))\n}\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP'\n}\n\nfunction maybeError (db, callback) {\n  if (!db._isOpening() && !db.isOpen()) {\n    process.nextTick(callback, new ReadError('Database is not open'))\n    return true\n  }\n}\n\nLevelUP.errors = errors\nmodule.exports = LevelUP.default = LevelUP\n","function promisify () {\n  var callback\n  var promise = new Promise(function (resolve, reject) {\n    callback = function callback (err, value) {\n      if (err) reject(err)\n      else resolve(value)\n    }\n  })\n  callback.promise = promise\n  return callback\n}\n\nmodule.exports = promisify\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","\nexports.compare = function (a, b) {\n\n  if(Buffer.isBuffer(a)) {\n    var l = Math.min(a.length, b.length)\n    for(var i = 0; i < l; i++) {\n      var cmp = a[i] - b[i]\n      if(cmp) return cmp\n    }\n    return a.length - b.length\n  }\n\n  return a < b ? -1 : a > b ? 1 : 0\n}\n\n// to be compatible with the current abstract-leveldown tests\n// nullish or empty strings.\n// I could use !!val but I want to permit numbers and booleans,\n// if possible.\n\nfunction isDef (val) {\n  return val !== undefined && val !== ''\n}\n\nfunction has (range, name) {\n  return Object.hasOwnProperty.call(range, name)\n}\n\nfunction hasKey(range, name) {\n  return Object.hasOwnProperty.call(range, name) && name\n}\n\nvar lowerBoundKey = exports.lowerBoundKey = function (range) {\n    return (\n       hasKey(range, 'gt')\n    || hasKey(range, 'gte')\n    || hasKey(range, 'min')\n    || (range.reverse ? hasKey(range, 'end') : hasKey(range, 'start'))\n    || undefined\n    )\n}\n\nvar lowerBound = exports.lowerBound = function (range, def) {\n  var k = lowerBoundKey(range)\n  return k ? range[k] : def\n}\n\nvar lowerBoundInclusive = exports.lowerBoundInclusive = function (range) {\n  return has(range, 'gt') ? false : true\n}\n\nvar upperBoundInclusive = exports.upperBoundInclusive =\n  function (range) {\n    return (has(range, 'lt') /*&& !range.maxEx*/) ? false : true\n  }\n\nvar lowerBoundExclusive = exports.lowerBoundExclusive =\n  function (range) {\n    return !lowerBoundInclusive(range)\n  }\n\nvar upperBoundExclusive = exports.upperBoundExclusive =\n  function (range) {\n    return !upperBoundInclusive(range)\n  }\n\nvar upperBoundKey = exports.upperBoundKey = function (range) {\n    return (\n       hasKey(range, 'lt')\n    || hasKey(range, 'lte')\n    || hasKey(range, 'max')\n    || (range.reverse ? hasKey(range, 'start') : hasKey(range, 'end'))\n    || undefined\n    )\n}\n\nvar upperBound = exports.upperBound = function (range, def) {\n  var k = upperBoundKey(range)\n  return k ? range[k] : def\n}\n\nexports.start = function (range, def) {\n  return range.reverse ? upperBound(range, def) : lowerBound(range, def)\n}\nexports.end = function (range, def) {\n  return range.reverse ? lowerBound(range, def) : upperBound(range, def)\n}\nexports.startInclusive = function (range) {\n  return (\n    range.reverse\n  ? upperBoundInclusive(range)\n  : lowerBoundInclusive(range)\n  )\n}\nexports.endInclusive = function (range) {\n  return (\n    range.reverse\n  ? lowerBoundInclusive(range)\n  : upperBoundInclusive(range)\n  )\n}\n\nfunction id (e) { return e }\n\nexports.toLtgt = function (range, _range, map, lower, upper) {\n  _range = _range || {}\n  map = map || id\n  var defaults = arguments.length > 3\n  var lb = exports.lowerBoundKey(range)\n  var ub = exports.upperBoundKey(range)\n  if(lb) {\n    if(lb === 'gt') _range.gt = map(range.gt, false)\n    else            _range.gte = map(range[lb], false)\n  }\n  else if(defaults)\n    _range.gte = map(lower, false)\n\n  if(ub) {\n    if(ub === 'lt') _range.lt = map(range.lt, true)\n    else            _range.lte = map(range[ub], true)\n  }\n  else if(defaults)\n    _range.lte = map(upper, true)\n\n  if(range.reverse != null)\n    _range.reverse = !!range.reverse\n\n  //if range was used mutably\n  //(in level-sublevel it's part of an options object\n  //that has more properties on it.)\n  if(has(_range, 'max'))   delete _range.max\n  if(has(_range, 'min'))   delete _range.min\n  if(has(_range, 'start')) delete _range.start\n  if(has(_range, 'end'))   delete _range.end\n\n  return _range\n}\n\nexports.contains = function (range, key, compare) {\n  compare = compare || exports.compare\n\n  var lb = lowerBound(range)\n  if(isDef(lb)) {\n    var cmp = compare(key, lb)\n    if(cmp < 0 || (cmp === 0 && lowerBoundExclusive(range)))\n      return false\n  }\n\n  var ub = upperBound(range)\n  if(isDef(ub)) {\n    var cmp = compare(key, ub)\n    if(cmp > 0 || (cmp === 0) && upperBoundExclusive(range))\n      return false\n  }\n\n  return true\n}\n\nexports.filter = function (range, compare) {\n  return function (key) {\n    return exports.contains(range, key, compare)\n  }\n}\n\n\n","'use strict';\nmodule.exports = Number.isNaN || function (x) {\n\treturn x !== x;\n};\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = function (num, base) {\n  return parseInt(num.toString(), base || 8)\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n  * prr\n  * (c) 2013 Rod Vagg <rod@vagg.org>\n  * https://github.com/rvagg/prr\n  * License: MIT\n  */\n\n(function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports)\n    module.exports = definition()\n  else\n    context[name] = definition()\n})('prr', this, function() {\n\n  var setProperty = typeof Object.defineProperty == 'function'\n      ? function (obj, key, options) {\n          Object.defineProperty(obj, key, options)\n          return obj\n        }\n      : function (obj, key, options) { // < es5\n          obj[key] = options.value\n          return obj\n        }\n\n    , makeOptions = function (value, options) {\n        var oo = typeof options == 'object'\n          , os = !oo && typeof options == 'string'\n          , op = function (p) {\n              return oo\n                ? !!options[p]\n                : os\n                  ? options.indexOf(p[0]) > -1\n                  : false\n            }\n\n        return {\n            enumerable   : op('enumerable')\n          , configurable : op('configurable')\n          , writable     : op('writable')\n          , value        : value\n        }\n      }\n\n    , prr = function (obj, key, value, options) {\n        var k\n\n        options = makeOptions(value, options)\n\n        if (typeof key == 'object') {\n          for (k in key) {\n            if (Object.hasOwnProperty.call(key, k)) {\n              options.value = key[k]\n              setProperty(obj, k, options)\n            }\n          }\n          return obj\n        }\n\n        return setProperty(obj, key, options)\n      }\n\n  return prr\n})","module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","module.exports = require('./readable').PassThrough\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_writable.js');\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Generated by CoffeeScript 1.9.2\nvar Transformer, stream, util,\n  slice = [].slice;\n\nstream = require('stream');\n\nutil = require('util');\n\nmodule.exports = function() {\n  var argument, callback, data, error, handler, i, j, k, len, options, result, transform, type, v;\n  options = {};\n  for (i = j = 0, len = arguments.length; j < len; i = ++j) {\n    argument = arguments[i];\n    type = typeof argument;\n    if (argument === null) {\n      type = 'null';\n    } else if (type === 'object' && Array.isArray(argument)) {\n      type = 'array';\n    }\n    if (i === 0) {\n      if (type === 'function') {\n        handler = argument;\n      } else if (type !== null) {\n        data = argument;\n      }\n      continue;\n    }\n    if (type === 'object') {\n      for (k in argument) {\n        v = argument[k];\n        options[k] = v;\n      }\n    } else if (type === 'function') {\n      if (handler && i === arguments.length - 1) {\n        callback = argument;\n      } else {\n        handler = argument;\n      }\n    } else if (type !== 'null') {\n      throw new Error('Invalid arguments');\n    }\n  }\n  transform = new Transformer(options, handler);\n  error = false;\n  if (data) {\n    process.nextTick(function() {\n      var len1, m, row;\n      for (m = 0, len1 = data.length; m < len1; m++) {\n        row = data[m];\n        if (error) {\n          break;\n        }\n        transform.write(row);\n      }\n      return transform.end();\n    });\n  }\n  if (callback || options.consume) {\n    result = [];\n    transform.on('readable', function() {\n      var r, results;\n      results = [];\n      while ((r = transform.read())) {\n        if (callback) {\n          results.push(result.push(r));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    });\n    transform.on('error', function(err) {\n      error = true;\n      if (callback) {\n        return callback(err);\n      }\n    });\n    transform.on('end', function() {\n      if (callback && !error) {\n        return callback(null, result);\n      }\n    });\n  }\n  return transform;\n};\n\nTransformer = function(options1, transform1) {\n  var base;\n  this.options = options1 != null ? options1 : {};\n  this.transform = transform1;\n  this.options.objectMode = true;\n  if ((base = this.options).parallel == null) {\n    base.parallel = 100;\n  }\n  stream.Transform.call(this, this.options);\n  this.running = 0;\n  this.started = 0;\n  this.finished = 0;\n  return this;\n};\n\nutil.inherits(Transformer, stream.Transform);\n\nmodule.exports.Transformer = Transformer;\n\nTransformer.prototype._transform = function(chunk, encoding, cb) {\n  var callback, err, l;\n  this.started++;\n  this.running++;\n  if (this.running < this.options.parallel) {\n    cb();\n    cb = null;\n  }\n  try {\n    l = this.transform.length;\n    if (this.options.params != null) {\n      l--;\n    }\n    if (l === 1) {\n      this._done(null, [this.transform.call(null, chunk, this.options.params)], cb);\n    } else if (l === 2) {\n      callback = (function(_this) {\n        return function() {\n          var chunks, err;\n          err = arguments[0], chunks = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n          return _this._done(err, chunks, cb);\n        };\n      })(this);\n      this.transform.call(null, chunk, callback, this.options.params);\n    } else {\n      throw Error(\"Invalid handler arguments\");\n    }\n    return false;\n  } catch (_error) {\n    err = _error;\n    return this._done(err);\n  }\n};\n\nTransformer.prototype._flush = function(cb) {\n  this._ending = function() {\n    if (this.running === 0) {\n      return cb();\n    }\n  };\n  return this._ending();\n};\n\nTransformer.prototype._done = function(err, chunks, cb) {\n  var chunk, j, len;\n  this.running--;\n  if (err) {\n    return this.emit('error', err);\n  }\n  this.finished++;\n  for (j = 0, len = chunks.length; j < len; j++) {\n    chunk = chunks[j];\n    if (typeof chunk === 'number') {\n      chunk = \"\" + chunk;\n    }\n    if (chunk != null) {\n      this.push(chunk);\n    }\n  }\n  if (cb) {\n    cb();\n  }\n  if (this._ending) {\n    return this._ending();\n  }\n};\n","\n//force to a valid range\nvar range = exports.range = function (obj) {\n  return null == obj ? {} : 'string' === typeof range ? {\n      min: range, max: range + '\\xff'\n    } :  obj\n}\n\n//turn into a sub range.\nvar prefix = exports.prefix = function (range, within, term) {\n  range = exports.range(range)\n  var _range = {}\n  term = term || '\\xff'\n  if(range instanceof RegExp || 'function' == typeof range) {\n    _range.min = within\n    _range.max   = within + term,\n    _range.inner = function (k) {\n      var j = k.substring(within.length)\n      if(range.test)\n        return range.test(j)\n      return range(j)\n    }\n  }\n  else if('object' === typeof range) {\n    _range.min = within + (range.min || range.start || '')\n    _range.max = within + (range.max || range.end   || (term || '~'))\n    _range.reverse = !!range.reverse\n  }\n  return _range\n}\n\n//return a function that checks a range\nvar checker = exports.checker = function (range) {\n  if(!range) range = {}\n\n  if ('string' === typeof range)\n    return function (key) {\n      return key.indexOf(range) == 0\n    }\n  else if(range instanceof RegExp)\n    return function (key) {\n      return range.test(key)\n    }\n  else if('object' === typeof range)\n    return function (key) {\n      var min = range.min || range.start\n      var max = range.max || range.end\n\n      // fixes keys passed as ints from sublevels\n      key = String(key)\n\n      return (\n        !min || key >= min\n      ) && (\n        !max || key <= max\n      ) && (\n        !range.inner || (\n          range.inner.test \n            ? range.inner.test(key)\n            : range.inner(key)\n        )\n      )\n    }\n  else if('function' === typeof range)\n    return range\n}\n//check if a key is within a range.\nvar satifies = exports.satisfies = function (key, range) {\n  return checker(range)(key)\n}\n\n\n","module.exports = StringStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(StringStream, stream.Readable)\n\nfunction StringStream (str) {\n  if (!(this instanceof StringStream)) return new StringStream(str)\n  stream.Readable.call(this)\n  this._str = str\n}\n\nStringStream.prototype._read = function () {\n  if (!this.ended) {\n    var self = this\n    process.nextTick(function () {\n      self.push(new Buffer(self._str))\n      self.push(null)\n    })\n    this.ended = true\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <https://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nvar isTypedArray = require('is-typedarray').strict\n\nmodule.exports = function typedarrayToBuffer (arr) {\n  if (isTypedArray(arr)) {\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer\n    var buf = Buffer.from(arr.buffer)\n    if (arr.byteLength !== arr.buffer.byteLength) {\n      // Respect the \"view\", i.e. byteOffset and byteLength, without doing a copy\n      buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength)\n    }\n    return buf\n  } else {\n    // Pass through all other types to `Buffer.from`\n    return Buffer.from(arr)\n  }\n}\n","var undefined = (void 0); // Paranoia\n\n// Beyond this value, index getters/setters (i.e. array[0], array[1]) are so slow to\n// create, and consume so much memory, that the browser appears frozen.\nvar MAX_ARRAY_LENGTH = 1e5;\n\n// Approximations of internal ECMAScript conversion functions\nvar ECMAScript = (function() {\n  // Stash a copy in case other scripts modify these\n  var opts = Object.prototype.toString,\n      ophop = Object.prototype.hasOwnProperty;\n\n  return {\n    // Class returns internal [[Class]] property, used to avoid cross-frame instanceof issues:\n    Class: function(v) { return opts.call(v).replace(/^\\[object *|\\]$/g, ''); },\n    HasProperty: function(o, p) { return p in o; },\n    HasOwnProperty: function(o, p) { return ophop.call(o, p); },\n    IsCallable: function(o) { return typeof o === 'function'; },\n    ToInt32: function(v) { return v >> 0; },\n    ToUint32: function(v) { return v >>> 0; }\n  };\n}());\n\n// Snapshot intrinsics\nvar LN2 = Math.LN2,\n    abs = Math.abs,\n    floor = Math.floor,\n    log = Math.log,\n    min = Math.min,\n    pow = Math.pow,\n    round = Math.round;\n\n// ES5: lock down object properties\nfunction configureProperties(obj) {\n  if (getOwnPropNames && defineProp) {\n    var props = getOwnPropNames(obj), i;\n    for (i = 0; i < props.length; i += 1) {\n      defineProp(obj, props[i], {\n        value: obj[props[i]],\n        writable: false,\n        enumerable: false,\n        configurable: false\n      });\n    }\n  }\n}\n\n// emulate ES5 getter/setter API using legacy APIs\n// http://blogs.msdn.com/b/ie/archive/2010/09/07/transitioning-existing-code-to-the-es5-getter-setter-apis.aspx\n// (second clause tests for Object.defineProperty() in IE<9 that only supports extending DOM prototypes, but\n// note that IE<9 does not support __defineGetter__ or __defineSetter__ so it just renders the method harmless)\nvar defineProp\nif (Object.defineProperty && (function() {\n      try {\n        Object.defineProperty({}, 'x', {});\n        return true;\n      } catch (e) {\n        return false;\n      }\n    })()) {\n  defineProp = Object.defineProperty;\n} else {\n  defineProp = function(o, p, desc) {\n    if (!o === Object(o)) throw new TypeError(\"Object.defineProperty called on non-object\");\n    if (ECMAScript.HasProperty(desc, 'get') && Object.prototype.__defineGetter__) { Object.prototype.__defineGetter__.call(o, p, desc.get); }\n    if (ECMAScript.HasProperty(desc, 'set') && Object.prototype.__defineSetter__) { Object.prototype.__defineSetter__.call(o, p, desc.set); }\n    if (ECMAScript.HasProperty(desc, 'value')) { o[p] = desc.value; }\n    return o;\n  };\n}\n\nvar getOwnPropNames = Object.getOwnPropertyNames || function (o) {\n  if (o !== Object(o)) throw new TypeError(\"Object.getOwnPropertyNames called on non-object\");\n  var props = [], p;\n  for (p in o) {\n    if (ECMAScript.HasOwnProperty(o, p)) {\n      props.push(p);\n    }\n  }\n  return props;\n};\n\n// ES5: Make obj[index] an alias for obj._getter(index)/obj._setter(index, value)\n// for index in 0 ... obj.length\nfunction makeArrayAccessors(obj) {\n  if (!defineProp) { return; }\n\n  if (obj.length > MAX_ARRAY_LENGTH) throw new RangeError(\"Array too large for polyfill\");\n\n  function makeArrayAccessor(index) {\n    defineProp(obj, index, {\n      'get': function() { return obj._getter(index); },\n      'set': function(v) { obj._setter(index, v); },\n      enumerable: true,\n      configurable: false\n    });\n  }\n\n  var i;\n  for (i = 0; i < obj.length; i += 1) {\n    makeArrayAccessor(i);\n  }\n}\n\n// Internal conversion functions:\n//    pack<Type>()   - take a number (interpreted as Type), output a byte array\n//    unpack<Type>() - take a byte array, output a Type-like number\n\nfunction as_signed(value, bits) { var s = 32 - bits; return (value << s) >> s; }\nfunction as_unsigned(value, bits) { var s = 32 - bits; return (value << s) >>> s; }\n\nfunction packI8(n) { return [n & 0xff]; }\nfunction unpackI8(bytes) { return as_signed(bytes[0], 8); }\n\nfunction packU8(n) { return [n & 0xff]; }\nfunction unpackU8(bytes) { return as_unsigned(bytes[0], 8); }\n\nfunction packU8Clamped(n) { n = round(Number(n)); return [n < 0 ? 0 : n > 0xff ? 0xff : n & 0xff]; }\n\nfunction packI16(n) { return [(n >> 8) & 0xff, n & 0xff]; }\nfunction unpackI16(bytes) { return as_signed(bytes[0] << 8 | bytes[1], 16); }\n\nfunction packU16(n) { return [(n >> 8) & 0xff, n & 0xff]; }\nfunction unpackU16(bytes) { return as_unsigned(bytes[0] << 8 | bytes[1], 16); }\n\nfunction packI32(n) { return [(n >> 24) & 0xff, (n >> 16) & 0xff, (n >> 8) & 0xff, n & 0xff]; }\nfunction unpackI32(bytes) { return as_signed(bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], 32); }\n\nfunction packU32(n) { return [(n >> 24) & 0xff, (n >> 16) & 0xff, (n >> 8) & 0xff, n & 0xff]; }\nfunction unpackU32(bytes) { return as_unsigned(bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], 32); }\n\nfunction packIEEE754(v, ebits, fbits) {\n\n  var bias = (1 << (ebits - 1)) - 1,\n      s, e, f, ln,\n      i, bits, str, bytes;\n\n  function roundToEven(n) {\n    var w = floor(n), f = n - w;\n    if (f < 0.5)\n      return w;\n    if (f > 0.5)\n      return w + 1;\n    return w % 2 ? w + 1 : w;\n  }\n\n  // Compute sign, exponent, fraction\n  if (v !== v) {\n    // NaN\n    // http://dev.w3.org/2006/webapi/WebIDL/#es-type-mapping\n    e = (1 << ebits) - 1; f = pow(2, fbits - 1); s = 0;\n  } else if (v === Infinity || v === -Infinity) {\n    e = (1 << ebits) - 1; f = 0; s = (v < 0) ? 1 : 0;\n  } else if (v === 0) {\n    e = 0; f = 0; s = (1 / v === -Infinity) ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = abs(v);\n\n    if (v >= pow(2, 1 - bias)) {\n      e = min(floor(log(v) / LN2), 1023);\n      f = roundToEven(v / pow(2, e) * pow(2, fbits));\n      if (f / pow(2, fbits) >= 2) {\n        e = e + 1;\n        f = 1;\n      }\n      if (e > bias) {\n        // Overflow\n        e = (1 << ebits) - 1;\n        f = 0;\n      } else {\n        // Normalized\n        e = e + bias;\n        f = f - pow(2, fbits);\n      }\n    } else {\n      // Denormalized\n      e = 0;\n      f = roundToEven(v / pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  bits = [];\n  for (i = fbits; i; i -= 1) { bits.push(f % 2 ? 1 : 0); f = floor(f / 2); }\n  for (i = ebits; i; i -= 1) { bits.push(e % 2 ? 1 : 0); e = floor(e / 2); }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join('');\n\n  // Bits to bytes\n  bytes = [];\n  while (str.length) {\n    bytes.push(parseInt(str.substring(0, 8), 2));\n    str = str.substring(8);\n  }\n  return bytes;\n}\n\nfunction unpackIEEE754(bytes, ebits, fbits) {\n\n  // Bytes to bits\n  var bits = [], i, j, b, str,\n      bias, s, e, f;\n\n  for (i = bytes.length; i; i -= 1) {\n    b = bytes[i - 1];\n    for (j = 8; j; j -= 1) {\n      bits.push(b % 2 ? 1 : 0); b = b >> 1;\n    }\n  }\n  bits.reverse();\n  str = bits.join('');\n\n  // Unpack sign, exponent, fraction\n  bias = (1 << (ebits - 1)) - 1;\n  s = parseInt(str.substring(0, 1), 2) ? -1 : 1;\n  e = parseInt(str.substring(1, 1 + ebits), 2);\n  f = parseInt(str.substring(1 + ebits), 2);\n\n  // Produce number\n  if (e === (1 << ebits) - 1) {\n    return f !== 0 ? NaN : s * Infinity;\n  } else if (e > 0) {\n    // Normalized\n    return s * pow(2, e - bias) * (1 + f / pow(2, fbits));\n  } else if (f !== 0) {\n    // Denormalized\n    return s * pow(2, -(bias - 1)) * (f / pow(2, fbits));\n  } else {\n    return s < 0 ? -0 : 0;\n  }\n}\n\nfunction unpackF64(b) { return unpackIEEE754(b, 11, 52); }\nfunction packF64(v) { return packIEEE754(v, 11, 52); }\nfunction unpackF32(b) { return unpackIEEE754(b, 8, 23); }\nfunction packF32(v) { return packIEEE754(v, 8, 23); }\n\n\n//\n// 3 The ArrayBuffer Type\n//\n\n(function() {\n\n  /** @constructor */\n  var ArrayBuffer = function ArrayBuffer(length) {\n    length = ECMAScript.ToInt32(length);\n    if (length < 0) throw new RangeError('ArrayBuffer size is not a small enough positive integer');\n\n    this.byteLength = length;\n    this._bytes = [];\n    this._bytes.length = length;\n\n    var i;\n    for (i = 0; i < this.byteLength; i += 1) {\n      this._bytes[i] = 0;\n    }\n\n    configureProperties(this);\n  };\n\n  exports.ArrayBuffer = exports.ArrayBuffer || ArrayBuffer;\n\n  //\n  // 4 The ArrayBufferView Type\n  //\n\n  // NOTE: this constructor is not exported\n  /** @constructor */\n  var ArrayBufferView = function ArrayBufferView() {\n    //this.buffer = null;\n    //this.byteOffset = 0;\n    //this.byteLength = 0;\n  };\n\n  //\n  // 5 The Typed Array View Types\n  //\n\n  function makeConstructor(bytesPerElement, pack, unpack) {\n    // Each TypedArray type requires a distinct constructor instance with\n    // identical logic, which this produces.\n\n    var ctor;\n    ctor = function(buffer, byteOffset, length) {\n      var array, sequence, i, s;\n\n      if (!arguments.length || typeof arguments[0] === 'number') {\n        // Constructor(unsigned long length)\n        this.length = ECMAScript.ToInt32(arguments[0]);\n        if (length < 0) throw new RangeError('ArrayBufferView size is not a small enough positive integer');\n\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n      } else if (typeof arguments[0] === 'object' && arguments[0].constructor === ctor) {\n        // Constructor(TypedArray array)\n        array = arguments[0];\n\n        this.length = array.length;\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n\n        for (i = 0; i < this.length; i += 1) {\n          this._setter(i, array._getter(i));\n        }\n      } else if (typeof arguments[0] === 'object' &&\n                 !(arguments[0] instanceof ArrayBuffer || ECMAScript.Class(arguments[0]) === 'ArrayBuffer')) {\n        // Constructor(sequence<type> array)\n        sequence = arguments[0];\n\n        this.length = ECMAScript.ToUint32(sequence.length);\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n\n        for (i = 0; i < this.length; i += 1) {\n          s = sequence[i];\n          this._setter(i, Number(s));\n        }\n      } else if (typeof arguments[0] === 'object' &&\n                 (arguments[0] instanceof ArrayBuffer || ECMAScript.Class(arguments[0]) === 'ArrayBuffer')) {\n        // Constructor(ArrayBuffer buffer,\n        //             optional unsigned long byteOffset, optional unsigned long length)\n        this.buffer = buffer;\n\n        this.byteOffset = ECMAScript.ToUint32(byteOffset);\n        if (this.byteOffset > this.buffer.byteLength) {\n          throw new RangeError(\"byteOffset out of range\");\n        }\n\n        if (this.byteOffset % this.BYTES_PER_ELEMENT) {\n          // The given byteOffset must be a multiple of the element\n          // size of the specific type, otherwise an exception is raised.\n          throw new RangeError(\"ArrayBuffer length minus the byteOffset is not a multiple of the element size.\");\n        }\n\n        if (arguments.length < 3) {\n          this.byteLength = this.buffer.byteLength - this.byteOffset;\n\n          if (this.byteLength % this.BYTES_PER_ELEMENT) {\n            throw new RangeError(\"length of buffer minus byteOffset not a multiple of the element size\");\n          }\n          this.length = this.byteLength / this.BYTES_PER_ELEMENT;\n        } else {\n          this.length = ECMAScript.ToUint32(length);\n          this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        }\n\n        if ((this.byteOffset + this.byteLength) > this.buffer.byteLength) {\n          throw new RangeError(\"byteOffset and length reference an area beyond the end of the buffer\");\n        }\n      } else {\n        throw new TypeError(\"Unexpected argument type(s)\");\n      }\n\n      this.constructor = ctor;\n\n      configureProperties(this);\n      makeArrayAccessors(this);\n    };\n\n    ctor.prototype = new ArrayBufferView();\n    ctor.prototype.BYTES_PER_ELEMENT = bytesPerElement;\n    ctor.prototype._pack = pack;\n    ctor.prototype._unpack = unpack;\n    ctor.BYTES_PER_ELEMENT = bytesPerElement;\n\n    // getter type (unsigned long index);\n    ctor.prototype._getter = function(index) {\n      if (arguments.length < 1) throw new SyntaxError(\"Not enough arguments\");\n\n      index = ECMAScript.ToUint32(index);\n      if (index >= this.length) {\n        return undefined;\n      }\n\n      var bytes = [], i, o;\n      for (i = 0, o = this.byteOffset + index * this.BYTES_PER_ELEMENT;\n           i < this.BYTES_PER_ELEMENT;\n           i += 1, o += 1) {\n        bytes.push(this.buffer._bytes[o]);\n      }\n      return this._unpack(bytes);\n    };\n\n    // NONSTANDARD: convenience alias for getter: type get(unsigned long index);\n    ctor.prototype.get = ctor.prototype._getter;\n\n    // setter void (unsigned long index, type value);\n    ctor.prototype._setter = function(index, value) {\n      if (arguments.length < 2) throw new SyntaxError(\"Not enough arguments\");\n\n      index = ECMAScript.ToUint32(index);\n      if (index >= this.length) {\n        return undefined;\n      }\n\n      var bytes = this._pack(value), i, o;\n      for (i = 0, o = this.byteOffset + index * this.BYTES_PER_ELEMENT;\n           i < this.BYTES_PER_ELEMENT;\n           i += 1, o += 1) {\n        this.buffer._bytes[o] = bytes[i];\n      }\n    };\n\n    // void set(TypedArray array, optional unsigned long offset);\n    // void set(sequence<type> array, optional unsigned long offset);\n    ctor.prototype.set = function(index, value) {\n      if (arguments.length < 1) throw new SyntaxError(\"Not enough arguments\");\n      var array, sequence, offset, len,\n          i, s, d,\n          byteOffset, byteLength, tmp;\n\n      if (typeof arguments[0] === 'object' && arguments[0].constructor === this.constructor) {\n        // void set(TypedArray array, optional unsigned long offset);\n        array = arguments[0];\n        offset = ECMAScript.ToUint32(arguments[1]);\n\n        if (offset + array.length > this.length) {\n          throw new RangeError(\"Offset plus length of array is out of range\");\n        }\n\n        byteOffset = this.byteOffset + offset * this.BYTES_PER_ELEMENT;\n        byteLength = array.length * this.BYTES_PER_ELEMENT;\n\n        if (array.buffer === this.buffer) {\n          tmp = [];\n          for (i = 0, s = array.byteOffset; i < byteLength; i += 1, s += 1) {\n            tmp[i] = array.buffer._bytes[s];\n          }\n          for (i = 0, d = byteOffset; i < byteLength; i += 1, d += 1) {\n            this.buffer._bytes[d] = tmp[i];\n          }\n        } else {\n          for (i = 0, s = array.byteOffset, d = byteOffset;\n               i < byteLength; i += 1, s += 1, d += 1) {\n            this.buffer._bytes[d] = array.buffer._bytes[s];\n          }\n        }\n      } else if (typeof arguments[0] === 'object' && typeof arguments[0].length !== 'undefined') {\n        // void set(sequence<type> array, optional unsigned long offset);\n        sequence = arguments[0];\n        len = ECMAScript.ToUint32(sequence.length);\n        offset = ECMAScript.ToUint32(arguments[1]);\n\n        if (offset + len > this.length) {\n          throw new RangeError(\"Offset plus length of array is out of range\");\n        }\n\n        for (i = 0; i < len; i += 1) {\n          s = sequence[i];\n          this._setter(offset + i, Number(s));\n        }\n      } else {\n        throw new TypeError(\"Unexpected argument type(s)\");\n      }\n    };\n\n    // TypedArray subarray(long begin, optional long end);\n    ctor.prototype.subarray = function(start, end) {\n      function clamp(v, min, max) { return v < min ? min : v > max ? max : v; }\n\n      start = ECMAScript.ToInt32(start);\n      end = ECMAScript.ToInt32(end);\n\n      if (arguments.length < 1) { start = 0; }\n      if (arguments.length < 2) { end = this.length; }\n\n      if (start < 0) { start = this.length + start; }\n      if (end < 0) { end = this.length + end; }\n\n      start = clamp(start, 0, this.length);\n      end = clamp(end, 0, this.length);\n\n      var len = end - start;\n      if (len < 0) {\n        len = 0;\n      }\n\n      return new this.constructor(\n        this.buffer, this.byteOffset + start * this.BYTES_PER_ELEMENT, len);\n    };\n\n    return ctor;\n  }\n\n  var Int8Array = makeConstructor(1, packI8, unpackI8);\n  var Uint8Array = makeConstructor(1, packU8, unpackU8);\n  var Uint8ClampedArray = makeConstructor(1, packU8Clamped, unpackU8);\n  var Int16Array = makeConstructor(2, packI16, unpackI16);\n  var Uint16Array = makeConstructor(2, packU16, unpackU16);\n  var Int32Array = makeConstructor(4, packI32, unpackI32);\n  var Uint32Array = makeConstructor(4, packU32, unpackU32);\n  var Float32Array = makeConstructor(4, packF32, unpackF32);\n  var Float64Array = makeConstructor(8, packF64, unpackF64);\n\n  exports.Int8Array = exports.Int8Array || Int8Array;\n  exports.Uint8Array = exports.Uint8Array || Uint8Array;\n  exports.Uint8ClampedArray = exports.Uint8ClampedArray || Uint8ClampedArray;\n  exports.Int16Array = exports.Int16Array || Int16Array;\n  exports.Uint16Array = exports.Uint16Array || Uint16Array;\n  exports.Int32Array = exports.Int32Array || Int32Array;\n  exports.Uint32Array = exports.Uint32Array || Uint32Array;\n  exports.Float32Array = exports.Float32Array || Float32Array;\n  exports.Float64Array = exports.Float64Array || Float64Array;\n}());\n\n//\n// 6 The DataView View Type\n//\n\n(function() {\n  function r(array, index) {\n    return ECMAScript.IsCallable(array.get) ? array.get(index) : array[index];\n  }\n\n  var IS_BIG_ENDIAN = (function() {\n    var u16array = new(exports.Uint16Array)([0x1234]),\n        u8array = new(exports.Uint8Array)(u16array.buffer);\n    return r(u8array, 0) === 0x12;\n  }());\n\n  // Constructor(ArrayBuffer buffer,\n  //             optional unsigned long byteOffset,\n  //             optional unsigned long byteLength)\n  /** @constructor */\n  var DataView = function DataView(buffer, byteOffset, byteLength) {\n    if (arguments.length === 0) {\n      buffer = new exports.ArrayBuffer(0);\n    } else if (!(buffer instanceof exports.ArrayBuffer || ECMAScript.Class(buffer) === 'ArrayBuffer')) {\n      throw new TypeError(\"TypeError\");\n    }\n\n    this.buffer = buffer || new exports.ArrayBuffer(0);\n\n    this.byteOffset = ECMAScript.ToUint32(byteOffset);\n    if (this.byteOffset > this.buffer.byteLength) {\n      throw new RangeError(\"byteOffset out of range\");\n    }\n\n    if (arguments.length < 3) {\n      this.byteLength = this.buffer.byteLength - this.byteOffset;\n    } else {\n      this.byteLength = ECMAScript.ToUint32(byteLength);\n    }\n\n    if ((this.byteOffset + this.byteLength) > this.buffer.byteLength) {\n      throw new RangeError(\"byteOffset and length reference an area beyond the end of the buffer\");\n    }\n\n    configureProperties(this);\n  };\n\n  function makeGetter(arrayType) {\n    return function(byteOffset, littleEndian) {\n\n      byteOffset = ECMAScript.ToUint32(byteOffset);\n\n      if (byteOffset + arrayType.BYTES_PER_ELEMENT > this.byteLength) {\n        throw new RangeError(\"Array index out of range\");\n      }\n      byteOffset += this.byteOffset;\n\n      var uint8Array = new exports.Uint8Array(this.buffer, byteOffset, arrayType.BYTES_PER_ELEMENT),\n          bytes = [], i;\n      for (i = 0; i < arrayType.BYTES_PER_ELEMENT; i += 1) {\n        bytes.push(r(uint8Array, i));\n      }\n\n      if (Boolean(littleEndian) === Boolean(IS_BIG_ENDIAN)) {\n        bytes.reverse();\n      }\n\n      return r(new arrayType(new exports.Uint8Array(bytes).buffer), 0);\n    };\n  }\n\n  DataView.prototype.getUint8 = makeGetter(exports.Uint8Array);\n  DataView.prototype.getInt8 = makeGetter(exports.Int8Array);\n  DataView.prototype.getUint16 = makeGetter(exports.Uint16Array);\n  DataView.prototype.getInt16 = makeGetter(exports.Int16Array);\n  DataView.prototype.getUint32 = makeGetter(exports.Uint32Array);\n  DataView.prototype.getInt32 = makeGetter(exports.Int32Array);\n  DataView.prototype.getFloat32 = makeGetter(exports.Float32Array);\n  DataView.prototype.getFloat64 = makeGetter(exports.Float64Array);\n\n  function makeSetter(arrayType) {\n    return function(byteOffset, value, littleEndian) {\n\n      byteOffset = ECMAScript.ToUint32(byteOffset);\n      if (byteOffset + arrayType.BYTES_PER_ELEMENT > this.byteLength) {\n        throw new RangeError(\"Array index out of range\");\n      }\n\n      // Get bytes\n      var typeArray = new arrayType([value]),\n          byteArray = new exports.Uint8Array(typeArray.buffer),\n          bytes = [], i, byteView;\n\n      for (i = 0; i < arrayType.BYTES_PER_ELEMENT; i += 1) {\n        bytes.push(r(byteArray, i));\n      }\n\n      // Flip if necessary\n      if (Boolean(littleEndian) === Boolean(IS_BIG_ENDIAN)) {\n        bytes.reverse();\n      }\n\n      // Write them\n      byteView = new exports.Uint8Array(this.buffer, byteOffset, arrayType.BYTES_PER_ELEMENT);\n      byteView.set(bytes);\n    };\n  }\n\n  DataView.prototype.setUint8 = makeSetter(exports.Uint8Array);\n  DataView.prototype.setInt8 = makeSetter(exports.Int8Array);\n  DataView.prototype.setUint16 = makeSetter(exports.Uint16Array);\n  DataView.prototype.setInt16 = makeSetter(exports.Int16Array);\n  DataView.prototype.setUint32 = makeSetter(exports.Uint32Array);\n  DataView.prototype.setInt32 = makeSetter(exports.Int32Array);\n  DataView.prototype.setFloat32 = makeSetter(exports.Float32Array);\n  DataView.prototype.setFloat64 = makeSetter(exports.Float64Array);\n\n  exports.DataView = exports.DataView || DataView;\n\n}());\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"]}